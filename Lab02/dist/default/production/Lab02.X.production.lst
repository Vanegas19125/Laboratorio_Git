

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Jul 23 13:17:10 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2
    28                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text20,local,class=CODE,merge=1,delta=2
    30                           	psect	text21,local,class=CODE,merge=1,delta=2
    31                           	psect	text22,local,class=CODE,merge=1,delta=2
    32                           	psect	text23,local,class=CODE,merge=1,delta=2
    33                           	psect	text24,local,class=CODE,merge=1,delta=2
    34                           	psect	text25,local,class=CODE,merge=1,delta=2
    35                           	psect	text26,local,class=CODE,merge=1,delta=2
    36                           	psect	intentry,global,class=CODE,delta=2
    37                           	psect	text27,local,class=CODE,merge=1,delta=2
    38                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    39                           	dabs	1,0x7E,2
    40  0000                     
    41                           ; Version 2.20
    42                           ; Generated 12/02/2020 GMT
    43                           ; 
    44                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC16F887 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75  0000                     	;# 
    76  0001                     	;# 
    77  0002                     	;# 
    78  0003                     	;# 
    79  0004                     	;# 
    80  0005                     	;# 
    81  0006                     	;# 
    82  0007                     	;# 
    83  0008                     	;# 
    84  0009                     	;# 
    85  000A                     	;# 
    86  000B                     	;# 
    87  000C                     	;# 
    88  000D                     	;# 
    89  000E                     	;# 
    90  000E                     	;# 
    91  000F                     	;# 
    92  0010                     	;# 
    93  0011                     	;# 
    94  0012                     	;# 
    95  0013                     	;# 
    96  0014                     	;# 
    97  0015                     	;# 
    98  0015                     	;# 
    99  0016                     	;# 
   100  0017                     	;# 
   101  0018                     	;# 
   102  0019                     	;# 
   103  001A                     	;# 
   104  001B                     	;# 
   105  001B                     	;# 
   106  001C                     	;# 
   107  001D                     	;# 
   108  001E                     	;# 
   109  001F                     	;# 
   110  0081                     	;# 
   111  0085                     	;# 
   112  0086                     	;# 
   113  0087                     	;# 
   114  0088                     	;# 
   115  0089                     	;# 
   116  008C                     	;# 
   117  008D                     	;# 
   118  008E                     	;# 
   119  008F                     	;# 
   120  0090                     	;# 
   121  0091                     	;# 
   122  0092                     	;# 
   123  0093                     	;# 
   124  0093                     	;# 
   125  0093                     	;# 
   126  0094                     	;# 
   127  0095                     	;# 
   128  0096                     	;# 
   129  0097                     	;# 
   130  0098                     	;# 
   131  0099                     	;# 
   132  009A                     	;# 
   133  009B                     	;# 
   134  009C                     	;# 
   135  009D                     	;# 
   136  009E                     	;# 
   137  009F                     	;# 
   138  0105                     	;# 
   139  0107                     	;# 
   140  0108                     	;# 
   141  0109                     	;# 
   142  010C                     	;# 
   143  010C                     	;# 
   144  010D                     	;# 
   145  010E                     	;# 
   146  010F                     	;# 
   147  0185                     	;# 
   148  0187                     	;# 
   149  0188                     	;# 
   150  0189                     	;# 
   151  018C                     	;# 
   152  018D                     	;# 
   153  0000                     	;# 
   154  0001                     	;# 
   155  0002                     	;# 
   156  0003                     	;# 
   157  0004                     	;# 
   158  0005                     	;# 
   159  0006                     	;# 
   160  0007                     	;# 
   161  0008                     	;# 
   162  0009                     	;# 
   163  000A                     	;# 
   164  000B                     	;# 
   165  000C                     	;# 
   166  000D                     	;# 
   167  000E                     	;# 
   168  000E                     	;# 
   169  000F                     	;# 
   170  0010                     	;# 
   171  0011                     	;# 
   172  0012                     	;# 
   173  0013                     	;# 
   174  0014                     	;# 
   175  0015                     	;# 
   176  0015                     	;# 
   177  0016                     	;# 
   178  0017                     	;# 
   179  0018                     	;# 
   180  0019                     	;# 
   181  001A                     	;# 
   182  001B                     	;# 
   183  001B                     	;# 
   184  001C                     	;# 
   185  001D                     	;# 
   186  001E                     	;# 
   187  001F                     	;# 
   188  0081                     	;# 
   189  0085                     	;# 
   190  0086                     	;# 
   191  0087                     	;# 
   192  0088                     	;# 
   193  0089                     	;# 
   194  008C                     	;# 
   195  008D                     	;# 
   196  008E                     	;# 
   197  008F                     	;# 
   198  0090                     	;# 
   199  0091                     	;# 
   200  0092                     	;# 
   201  0093                     	;# 
   202  0093                     	;# 
   203  0093                     	;# 
   204  0094                     	;# 
   205  0095                     	;# 
   206  0096                     	;# 
   207  0097                     	;# 
   208  0098                     	;# 
   209  0099                     	;# 
   210  009A                     	;# 
   211  009B                     	;# 
   212  009C                     	;# 
   213  009D                     	;# 
   214  009E                     	;# 
   215  009F                     	;# 
   216  0105                     	;# 
   217  0107                     	;# 
   218  0108                     	;# 
   219  0109                     	;# 
   220  010C                     	;# 
   221  010C                     	;# 
   222  010D                     	;# 
   223  010E                     	;# 
   224  010F                     	;# 
   225  0185                     	;# 
   226  0187                     	;# 
   227  0188                     	;# 
   228  0189                     	;# 
   229  018C                     	;# 
   230  018D                     	;# 
   231  0000                     	;# 
   232  0001                     	;# 
   233  0002                     	;# 
   234  0003                     	;# 
   235  0004                     	;# 
   236  0005                     	;# 
   237  0006                     	;# 
   238  0007                     	;# 
   239  0008                     	;# 
   240  0009                     	;# 
   241  000A                     	;# 
   242  000B                     	;# 
   243  000C                     	;# 
   244  000D                     	;# 
   245  000E                     	;# 
   246  000E                     	;# 
   247  000F                     	;# 
   248  0010                     	;# 
   249  0011                     	;# 
   250  0012                     	;# 
   251  0013                     	;# 
   252  0014                     	;# 
   253  0015                     	;# 
   254  0015                     	;# 
   255  0016                     	;# 
   256  0017                     	;# 
   257  0018                     	;# 
   258  0019                     	;# 
   259  001A                     	;# 
   260  001B                     	;# 
   261  001B                     	;# 
   262  001C                     	;# 
   263  001D                     	;# 
   264  001E                     	;# 
   265  001F                     	;# 
   266  0081                     	;# 
   267  0085                     	;# 
   268  0086                     	;# 
   269  0087                     	;# 
   270  0088                     	;# 
   271  0089                     	;# 
   272  008C                     	;# 
   273  008D                     	;# 
   274  008E                     	;# 
   275  008F                     	;# 
   276  0090                     	;# 
   277  0091                     	;# 
   278  0092                     	;# 
   279  0093                     	;# 
   280  0093                     	;# 
   281  0093                     	;# 
   282  0094                     	;# 
   283  0095                     	;# 
   284  0096                     	;# 
   285  0097                     	;# 
   286  0098                     	;# 
   287  0099                     	;# 
   288  009A                     	;# 
   289  009B                     	;# 
   290  009C                     	;# 
   291  009D                     	;# 
   292  009E                     	;# 
   293  009F                     	;# 
   294  0105                     	;# 
   295  0107                     	;# 
   296  0108                     	;# 
   297  0109                     	;# 
   298  010C                     	;# 
   299  010C                     	;# 
   300  010D                     	;# 
   301  010E                     	;# 
   302  010F                     	;# 
   303  0185                     	;# 
   304  0187                     	;# 
   305  0188                     	;# 
   306  0189                     	;# 
   307  018C                     	;# 
   308  018D                     	;# 
   309  0000                     	;# 
   310  0001                     	;# 
   311  0002                     	;# 
   312  0003                     	;# 
   313  0004                     	;# 
   314  0005                     	;# 
   315  0006                     	;# 
   316  0007                     	;# 
   317  0008                     	;# 
   318  0009                     	;# 
   319  000A                     	;# 
   320  000B                     	;# 
   321  000C                     	;# 
   322  000D                     	;# 
   323  000E                     	;# 
   324  000E                     	;# 
   325  000F                     	;# 
   326  0010                     	;# 
   327  0011                     	;# 
   328  0012                     	;# 
   329  0013                     	;# 
   330  0014                     	;# 
   331  0015                     	;# 
   332  0015                     	;# 
   333  0016                     	;# 
   334  0017                     	;# 
   335  0018                     	;# 
   336  0019                     	;# 
   337  001A                     	;# 
   338  001B                     	;# 
   339  001B                     	;# 
   340  001C                     	;# 
   341  001D                     	;# 
   342  001E                     	;# 
   343  001F                     	;# 
   344  0081                     	;# 
   345  0085                     	;# 
   346  0086                     	;# 
   347  0087                     	;# 
   348  0088                     	;# 
   349  0089                     	;# 
   350  008C                     	;# 
   351  008D                     	;# 
   352  008E                     	;# 
   353  008F                     	;# 
   354  0090                     	;# 
   355  0091                     	;# 
   356  0092                     	;# 
   357  0093                     	;# 
   358  0093                     	;# 
   359  0093                     	;# 
   360  0094                     	;# 
   361  0095                     	;# 
   362  0096                     	;# 
   363  0097                     	;# 
   364  0098                     	;# 
   365  0099                     	;# 
   366  009A                     	;# 
   367  009B                     	;# 
   368  009C                     	;# 
   369  009D                     	;# 
   370  009E                     	;# 
   371  009F                     	;# 
   372  0105                     	;# 
   373  0107                     	;# 
   374  0108                     	;# 
   375  0109                     	;# 
   376  010C                     	;# 
   377  010C                     	;# 
   378  010D                     	;# 
   379  010E                     	;# 
   380  010F                     	;# 
   381  0185                     	;# 
   382  0187                     	;# 
   383  0188                     	;# 
   384  0189                     	;# 
   385  018C                     	;# 
   386  018D                     	;# 
   387  0000                     	;# 
   388  0001                     	;# 
   389  0002                     	;# 
   390  0003                     	;# 
   391  0004                     	;# 
   392  0005                     	;# 
   393  0006                     	;# 
   394  0007                     	;# 
   395  0008                     	;# 
   396  0009                     	;# 
   397  000A                     	;# 
   398  000B                     	;# 
   399  000C                     	;# 
   400  000D                     	;# 
   401  000E                     	;# 
   402  000E                     	;# 
   403  000F                     	;# 
   404  0010                     	;# 
   405  0011                     	;# 
   406  0012                     	;# 
   407  0013                     	;# 
   408  0014                     	;# 
   409  0015                     	;# 
   410  0015                     	;# 
   411  0016                     	;# 
   412  0017                     	;# 
   413  0018                     	;# 
   414  0019                     	;# 
   415  001A                     	;# 
   416  001B                     	;# 
   417  001B                     	;# 
   418  001C                     	;# 
   419  001D                     	;# 
   420  001E                     	;# 
   421  001F                     	;# 
   422  0081                     	;# 
   423  0085                     	;# 
   424  0086                     	;# 
   425  0087                     	;# 
   426  0088                     	;# 
   427  0089                     	;# 
   428  008C                     	;# 
   429  008D                     	;# 
   430  008E                     	;# 
   431  008F                     	;# 
   432  0090                     	;# 
   433  0091                     	;# 
   434  0092                     	;# 
   435  0093                     	;# 
   436  0093                     	;# 
   437  0093                     	;# 
   438  0094                     	;# 
   439  0095                     	;# 
   440  0096                     	;# 
   441  0097                     	;# 
   442  0098                     	;# 
   443  0099                     	;# 
   444  009A                     	;# 
   445  009B                     	;# 
   446  009C                     	;# 
   447  009D                     	;# 
   448  009E                     	;# 
   449  009F                     	;# 
   450  0105                     	;# 
   451  0107                     	;# 
   452  0108                     	;# 
   453  0109                     	;# 
   454  010C                     	;# 
   455  010C                     	;# 
   456  010D                     	;# 
   457  010E                     	;# 
   458  010F                     	;# 
   459  0185                     	;# 
   460  0187                     	;# 
   461  0188                     	;# 
   462  0189                     	;# 
   463  018C                     	;# 
   464  018D                     	;# 
   465  001E                     _ADRESH	set	30
   466  000B                     _INTCONbits	set	11
   467  001F                     _ADCON0bits	set	31
   468  001A                     _RCREG	set	26
   469  000C                     _PIR1bits	set	12
   470  0019                     _TXREG	set	25
   471  0018                     _RCSTAbits	set	24
   472  0048                     _RE0	set	72
   473  004A                     _RE2	set	74
   474  0047                     _RD7	set	71
   475  0046                     _RD6	set	70
   476  0045                     _RD5	set	69
   477  0044                     _RD4	set	68
   478  0043                     _RD3	set	67
   479  0042                     _RD2	set	66
   480  0041                     _RD1	set	65
   481  0040                     _RD0	set	64
   482  009F                     _ADCON1bits	set	159
   483  008C                     _PIE1bits	set	140
   484  0087                     _TRISCbits	set	135
   485  0098                     _TXSTAbits	set	152
   486  0099                     _SPBRG	set	153
   487  0089                     _TRISE	set	137
   488  0088                     _TRISD	set	136
   489  0189                     _ANSELH	set	393
   490  0188                     _ANSEL	set	392
   491                           
   492                           	psect	strings
   493  0800                     __pstrings:
   494  0800                     stringtab:
   495  0800                     __stringtab:
   496                           
   497                           ;	String table - string pointers are 1 byte each
   498  0800  1BFF               	btfsc	btemp+1,7
   499  0801  280A               	ljmp	stringcode
   500  0802  1383               	bcf	3,7
   501  0803  187F               	btfsc	btemp+1,0
   502  0804  1783               	bsf	3,7
   503  0805  0800               	movf	0,w
   504  0806  0A84               	incf	4,f
   505  0807  1903               	skipnz
   506  0808  0AFF               	incf	btemp+1,f
   507  0809  0008               	return
   508  080A                     stringcode:
   509  080A                     stringdir:
   510  080A  3008               	movlw	high stringdir
   511  080B  008A               	movwf	10
   512  080C  0804               	movf	4,w
   513  080D  0A84               	incf	4,f
   514  080E  0782               	addwf	2,f
   515  080F                     __stringbase:
   516  080F  3400               	retlw	0
   517  0810                     __end_of__stringtab:
   518  0810                     STR_1:
   519  0810  3453               	retlw	83	;'S'
   520  0811  3431               	retlw	49	;'1'
   521  0812  343A               	retlw	58	;':'
   522  0813  3420               	retlw	32	;' '
   523  0814  3420               	retlw	32	;' '
   524  0815  3420               	retlw	32	;' '
   525  0816  3453               	retlw	83	;'S'
   526  0817  3432               	retlw	50	;'2'
   527  0818  343A               	retlw	58	;':'
   528  0819  3420               	retlw	32	;' '
   529  081A  3420               	retlw	32	;' '
   530  081B  3420               	retlw	32	;' '
   531  081C  3453               	retlw	83	;'S'
   532  081D  3433               	retlw	51	;'3'
   533  081E  343A               	retlw	58	;':'
   534  081F  3400               	retlw	0
   535  0820                     STR_5:
   536  0820  3456               	retlw	86	;'V'
   537  0821  3420               	retlw	32	;' '
   538  0822  340A               	retlw	10
   539  0823  3400               	retlw	0
   540  0824                     STR_2:
   541  0824  3456               	retlw	86	;'V'
   542  0825  3420               	retlw	32	;' '
   543  0826  3400               	retlw	0
   544  0824                     
   545                           	psect	cinit
   546  0011                     start_initialization:	
   547                           ; #config settings
   548                           
   549  0011                     __initialization:
   550                           
   551                           ; Clear objects allocated to BANK0
   552  0011  1283               	bcf	3,5	;RP0=0, select bank0
   553  0012  1303               	bcf	3,6	;RP1=0, select bank0
   554  0013  01DB               	clrf	__pbssBANK0& (0+127)
   555  0014  01DC               	clrf	(__pbssBANK0+1)& (0+127)
   556  0015  01DD               	clrf	(__pbssBANK0+2)& (0+127)
   557  0016  01DE               	clrf	(__pbssBANK0+3)& (0+127)
   558  0017  01DF               	clrf	(__pbssBANK0+4)& (0+127)
   559  0018  01E0               	clrf	(__pbssBANK0+5)& (0+127)
   560  0019  01E1               	clrf	(__pbssBANK0+6)& (0+127)
   561  001A  01E2               	clrf	(__pbssBANK0+7)& (0+127)
   562  001B  01E3               	clrf	(__pbssBANK0+8)& (0+127)
   563  001C  01E4               	clrf	(__pbssBANK0+9)& (0+127)
   564  001D  01E5               	clrf	(__pbssBANK0+10)& (0+127)
   565  001E  01E6               	clrf	(__pbssBANK0+11)& (0+127)
   566  001F                     end_of_initialization:	
   567                           ;End of C runtime variable initialization code
   568                           
   569  001F                     __end_of__initialization:
   570  001F  0183               	clrf	3
   571  0020  120A  158A  2EE3   	ljmp	_main	;jump to C main() function
   572                           
   573                           	psect	bssBANK0
   574  005B                     __pbssBANK0:
   575  005B                     _ADC_VALUE:
   576  005B                     	ds	12
   577                           
   578                           	psect	cstackCOMMON
   579  0070                     __pcstackCOMMON:
   580  0070                     ?_LcdInit:
   581  0070                     ?_initADC:	
   582                           ; 1 bytes @ 0x0
   583                           
   584  0070                     ?_readADC:	
   585                           ; 1 bytes @ 0x0
   586                           
   587  0070                     ?_analogToString:	
   588                           ; 1 bytes @ 0x0
   589                           
   590  0070                     ?_UARTDataReady:	
   591                           ; 1 bytes @ 0x0
   592                           
   593  0070                     ?_UARTReadChar:	
   594                           ; 1 bytes @ 0x0
   595                           
   596  0070                     ?_intToString:	
   597                           ; 1 bytes @ 0x0
   598                           
   599  0070                     ?_isrADC:	
   600                           ; 1 bytes @ 0x0
   601                           
   602  0070                     ??_isrADC:	
   603                           ; 1 bytes @ 0x0
   604                           
   605  0070                     ?_isr:	
   606                           ; 1 bytes @ 0x0
   607                           
   608  0070                     ?_LcdPort:	
   609                           ; 1 bytes @ 0x0
   610                           
   611  0070                     ?_LcdCmd:	
   612                           ; 1 bytes @ 0x0
   613                           
   614  0070                     ?_LcdWriteChar:	
   615                           ; 1 bytes @ 0x0
   616                           
   617  0070                     ?_UARTSendChar:	
   618                           ; 1 bytes @ 0x0
   619                           
   620  0070                     ?_main:	
   621                           ; 1 bytes @ 0x0
   622                           
   623                           
   624                           ; 2 bytes @ 0x0
   625  0070                     	ds	2
   626  0072                     ??_isr:
   627                           
   628                           ; 1 bytes @ 0x2
   629  0072                     	ds	3
   630  0075                     ??_initADC:
   631  0075                     ??_readADC:	
   632                           ; 1 bytes @ 0x5
   633                           
   634  0075                     ??_UARTDataReady:	
   635                           ; 1 bytes @ 0x5
   636                           
   637  0075                     ??_LcdPort:	
   638                           ; 1 bytes @ 0x5
   639                           
   640  0075                     ??_UARTSendChar:	
   641                           ; 1 bytes @ 0x5
   642                           
   643  0075                     ?___bmul:	
   644                           ; 1 bytes @ 0x5
   645                           
   646  0075                     ??___lldiv:	
   647                           ; 1 bytes @ 0x5
   648                           
   649  0075                     ?__Umul8_16:	
   650                           ; 1 bytes @ 0x5
   651                           
   652  0075                     ?___awdiv:	
   653                           ; 2 bytes @ 0x5
   654                           
   655  0075                     ?___awmod:	
   656                           ; 2 bytes @ 0x5
   657                           
   658  0075                     ?___fltol:	
   659                           ; 2 bytes @ 0x5
   660                           
   661  0075                     ?___xxtofl:	
   662                           ; 4 bytes @ 0x5
   663                           
   664  0075                     UARTSendChar@c:	
   665                           ; 4 bytes @ 0x5
   666                           
   667  0075                     ___bmul@multiplicand:	
   668                           ; 1 bytes @ 0x5
   669                           
   670  0075                     ___fladd@signs:	
   671                           ; 1 bytes @ 0x5
   672                           
   673  0075                     __Umul8_16@multiplicand:	
   674                           ; 1 bytes @ 0x5
   675                           
   676  0075                     ___awdiv@divisor:	
   677                           ; 1 bytes @ 0x5
   678                           
   679  0075                     ___awmod@divisor:	
   680                           ; 2 bytes @ 0x5
   681                           
   682  0075                     ___fltol@f1:	
   683                           ; 2 bytes @ 0x5
   684                           
   685  0075                     ___xxtofl@val:	
   686                           ; 4 bytes @ 0x5
   687                           
   688                           
   689                           ; 4 bytes @ 0x5
   690  0075                     	ds	1
   691  0076                     ?_UARTSendString:
   692  0076                     ??_UARTReadChar:	
   693                           ; 1 bytes @ 0x6
   694                           
   695  0076                     ??___bmul:	
   696                           ; 1 bytes @ 0x6
   697                           
   698  0076                     LcdPort@value:	
   699                           ; 1 bytes @ 0x6
   700                           
   701  0076                     readADC@pin:	
   702                           ; 1 bytes @ 0x6
   703                           
   704  0076                     ___fladd@aexp:	
   705                           ; 1 bytes @ 0x6
   706                           
   707  0076                     UARTSendString@str:	
   708                           ; 1 bytes @ 0x6
   709                           
   710                           
   711                           ; 2 bytes @ 0x6
   712  0076                     	ds	1
   713  0077                     ??__Umul8_16:
   714  0077                     ??_LcdCmd:	
   715                           ; 1 bytes @ 0x7
   716                           
   717  0077                     ??_LcdWriteChar:	
   718                           ; 1 bytes @ 0x7
   719                           
   720  0077                     ___bmul@product:	
   721                           ; 1 bytes @ 0x7
   722                           
   723  0077                     ___fladd@bexp:	
   724                           ; 1 bytes @ 0x7
   725                           
   726  0077                     ___awdiv@dividend:	
   727                           ; 1 bytes @ 0x7
   728                           
   729  0077                     ___awmod@dividend:	
   730                           ; 2 bytes @ 0x7
   731                           
   732                           
   733                           ; 2 bytes @ 0x7
   734  0077                     	ds	1
   735  0078                     LcdWriteChar@value:
   736  0078                     UARTSendString@max_length:	
   737                           ; 1 bytes @ 0x8
   738                           
   739  0078                     ___bmul@multiplier:	
   740                           ; 1 bytes @ 0x8
   741                           
   742  0078                     ___fladd@grs:	
   743                           ; 1 bytes @ 0x8
   744                           
   745                           
   746                           ; 1 bytes @ 0x8
   747  0078                     	ds	1
   748  0079                     ??___flsub:
   749                           
   750                           	psect	cstackBANK0
   751  0020                     __pcstackBANK0:	
   752                           ; 1 bytes @ 0x9
   753                           
   754  0020                     ?_LcdWriteString:
   755  0020                     ??_UARTSendString:	
   756                           ; 1 bytes @ 0x0
   757                           
   758  0020                     ??___awdiv:	
   759                           ; 1 bytes @ 0x0
   760                           
   761  0020                     ??___awmod:	
   762                           ; 1 bytes @ 0x0
   763                           
   764  0020                     ??___fltol:	
   765                           ; 1 bytes @ 0x0
   766                           
   767  0020                     ??___xxtofl:	
   768                           ; 1 bytes @ 0x0
   769                           
   770  0020                     ?___lldiv:	
   771                           ; 1 bytes @ 0x0
   772                           
   773  0020                     ?___fladd:	
   774                           ; 4 bytes @ 0x0
   775                           
   776  0020                     LcdCmd@value:	
   777                           ; 4 bytes @ 0x0
   778                           
   779  0020                     LcdWriteString@value:	
   780                           ; 1 bytes @ 0x0
   781                           
   782  0020                     __Umul8_16@product:	
   783                           ; 2 bytes @ 0x0
   784                           
   785  0020                     ___lldiv@divisor:	
   786                           ; 2 bytes @ 0x0
   787                           
   788  0020                     ___fladd@b:	
   789                           ; 4 bytes @ 0x0
   790                           
   791                           
   792                           ; 4 bytes @ 0x0
   793  0020                     	ds	1
   794  0021                     ??_LcdInit:
   795  0021                     ?_LcdSetCursor:	
   796                           ; 1 bytes @ 0x1
   797                           
   798  0021                     LcdSetCursor@column:	
   799                           ; 1 bytes @ 0x1
   800                           
   801  0021                     ___awdiv@counter:	
   802                           ; 1 bytes @ 0x1
   803                           
   804  0021                     ___awmod@counter:	
   805                           ; 1 bytes @ 0x1
   806                           
   807                           
   808                           ; 1 bytes @ 0x1
   809  0021                     	ds	1
   810  0022                     ??_LcdSetCursor:
   811  0022                     ??_LcdWriteString:	
   812                           ; 1 bytes @ 0x2
   813                           
   814  0022                     ___awdiv@sign:	
   815                           ; 1 bytes @ 0x2
   816                           
   817  0022                     ___awmod@sign:	
   818                           ; 1 bytes @ 0x2
   819                           
   820  0022                     __Umul8_16@word_mpld:	
   821                           ; 1 bytes @ 0x2
   822                           
   823                           
   824                           ; 2 bytes @ 0x2
   825  0022                     	ds	1
   826  0023                     UARTSendString@i:
   827  0023                     ___awdiv@quotient:	
   828                           ; 2 bytes @ 0x3
   829                           
   830                           
   831                           ; 2 bytes @ 0x3
   832  0023                     	ds	1
   833  0024                     LcdSetCursor@row:
   834  0024                     __Umul8_16@multiplier:	
   835                           ; 1 bytes @ 0x4
   836                           
   837  0024                     ___xxtofl@sign:	
   838                           ; 1 bytes @ 0x4
   839                           
   840  0024                     ___lldiv@dividend:	
   841                           ; 1 bytes @ 0x4
   842                           
   843  0024                     ___fladd@a:	
   844                           ; 4 bytes @ 0x4
   845                           
   846                           
   847                           ; 4 bytes @ 0x4
   848  0024                     	ds	1
   849  0025                     ??_intToString:
   850  0025                     ___fltol@sign1:	
   851                           ; 1 bytes @ 0x5
   852                           
   853  0025                     ___xxtofl@exp:	
   854                           ; 1 bytes @ 0x5
   855                           
   856  0025                     LcdWriteString@i:	
   857                           ; 1 bytes @ 0x5
   858                           
   859                           
   860                           ; 2 bytes @ 0x5
   861  0025                     	ds	1
   862  0026                     ___fltol@exp1:
   863  0026                     ___xxtofl@arg:	
   864                           ; 1 bytes @ 0x6
   865                           
   866                           
   867                           ; 4 bytes @ 0x6
   868  0026                     	ds	2
   869  0028                     ??___fladd:
   870  0028                     intToString@valor:	
   871                           ; 1 bytes @ 0x8
   872                           
   873  0028                     ___lldiv@quotient:	
   874                           ; 4 bytes @ 0x8
   875                           
   876                           
   877                           ; 4 bytes @ 0x8
   878  0028                     	ds	2
   879  002A                     ?___flmul:
   880  002A                     ___flmul@b:	
   881                           ; 4 bytes @ 0xA
   882                           
   883                           
   884                           ; 4 bytes @ 0xA
   885  002A                     	ds	2
   886  002C                     intToString@entero:
   887  002C                     ___lldiv@counter:	
   888                           ; 1 bytes @ 0xC
   889                           
   890                           
   891                           ; 1 bytes @ 0xC
   892  002C                     	ds	1
   893  002D                     ?_UARTInit:
   894  002D                     intToString@value:	
   895                           ; 1 bytes @ 0xD
   896                           
   897  002D                     UARTInit@baud_rate:	
   898                           ; 1 bytes @ 0xD
   899                           
   900                           
   901                           ; 4 bytes @ 0xD
   902  002D                     	ds	1
   903  002E                     ___flmul@a:
   904                           
   905                           ; 4 bytes @ 0xE
   906  002E                     	ds	2
   907  0030                     ?___flsub:
   908  0030                     ___flsub@a:	
   909                           ; 4 bytes @ 0x10
   910                           
   911                           
   912                           ; 4 bytes @ 0x10
   913  0030                     	ds	1
   914  0031                     UARTInit@BRGH:
   915                           
   916                           ; 1 bytes @ 0x11
   917  0031                     	ds	1
   918  0032                     ??_UARTInit:
   919  0032                     ??___flmul:	
   920                           ; 1 bytes @ 0x12
   921                           
   922                           
   923                           ; 1 bytes @ 0x12
   924  0032                     	ds	2
   925  0034                     ___flsub@b:
   926                           
   927                           ; 4 bytes @ 0x14
   928  0034                     	ds	3
   929  0037                     ___flmul@sign:
   930                           
   931                           ; 1 bytes @ 0x17
   932  0037                     	ds	1
   933  0038                     ___flmul@grs:
   934                           
   935                           ; 4 bytes @ 0x18
   936  0038                     	ds	4
   937  003C                     ___flmul@aexp:
   938                           
   939                           ; 1 bytes @ 0x1C
   940  003C                     	ds	1
   941  003D                     ___flmul@bexp:
   942                           
   943                           ; 1 bytes @ 0x1D
   944  003D                     	ds	1
   945  003E                     ___flmul@prod:
   946                           
   947                           ; 4 bytes @ 0x1E
   948  003E                     	ds	4
   949  0042                     ___flmul@temp:
   950                           
   951                           ; 2 bytes @ 0x22
   952  0042                     	ds	2
   953  0044                     ??_analogToString:
   954                           
   955                           ; 1 bytes @ 0x24
   956  0044                     	ds	4
   957  0048                     analogToString@value:
   958                           
   959                           ; 1 bytes @ 0x28
   960  0048                     	ds	1
   961  0049                     analogToString@string:
   962                           
   963                           ; 5 bytes @ 0x29
   964  0049                     	ds	5
   965  004E                     analogToString@entero:
   966                           
   967                           ; 1 bytes @ 0x2E
   968  004E                     	ds	1
   969  004F                     analogToString@valor:
   970                           
   971                           ; 4 bytes @ 0x2F
   972  004F                     	ds	4
   973  0053                     ??_main:
   974                           
   975                           ; 1 bytes @ 0x33
   976  0053                     	ds	1
   977  0054                     main@val2:
   978                           
   979                           ; 1 bytes @ 0x34
   980  0054                     	ds	1
   981  0055                     main@contadorString:
   982                           
   983                           ; 1 bytes @ 0x35
   984  0055                     	ds	1
   985  0056                     main@adc1:
   986                           
   987                           ; 1 bytes @ 0x36
   988  0056                     	ds	1
   989  0057                     main@adc2:
   990                           
   991                           ; 1 bytes @ 0x37
   992  0057                     	ds	1
   993  0058                     main@contador:
   994                           
   995                           ; 1 bytes @ 0x38
   996  0058                     	ds	1
   997  0059                     main@entrada:
   998                           
   999                           ; 1 bytes @ 0x39
  1000  0059                     	ds	1
  1001  005A                     main@val:
  1002                           
  1003                           ; 1 bytes @ 0x3A
  1004  005A                     	ds	1
  1005                           
  1006                           	psect	maintext
  1007  0EE3                     __pmaintext:	
  1008 ;;
  1009 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1010 ;;
  1011 ;; *************** function _main *****************
  1012 ;; Defined at:
  1013 ;;		line 37 in file "main.c"
  1014 ;; Parameters:    Size  Location     Type
  1015 ;;		None
  1016 ;; Auto vars:     Size  Location     Type
  1017 ;;  entrada         1   57[BANK0 ] unsigned char 
  1018 ;;  val             1   58[BANK0 ] PTR volatile unsigned ch
  1019 ;;		 -> analogToString@string(5), 
  1020 ;;  contador        1   56[BANK0 ] unsigned char 
  1021 ;;  adc2            1   55[BANK0 ] PTR unsigned char 
  1022 ;;		 -> ADC_VALUE(12), 
  1023 ;;  adc1            1   54[BANK0 ] PTR unsigned char 
  1024 ;;		 -> ADC_VALUE(12), 
  1025 ;;  contadorStri    1   53[BANK0 ] PTR unsigned char 
  1026 ;;		 -> intToString@valor(4), 
  1027 ;;  val2            1   52[BANK0 ] PTR volatile unsigned ch
  1028 ;;		 -> analogToString@string(5), 
  1029 ;; Return value:  Size  Location     Type
  1030 ;;                  2   36[None  ] int 
  1031 ;; Registers used:
  1032 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1033 ;; Tracked objects:
  1034 ;;		On entry : B00/0
  1035 ;;		On exit  : 0/0
  1036 ;;		Unchanged: 0/0
  1037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1038 ;;      Params:         0       0       0       0       0
  1039 ;;      Locals:         0       7       0       0       0
  1040 ;;      Temps:          0       1       0       0       0
  1041 ;;      Totals:         0       8       0       0       0
  1042 ;;Total ram usage:        8 bytes
  1043 ;; Hardware stack levels required when called:    5
  1044 ;; This function calls:
  1045 ;;		_LcdInit
  1046 ;;		_LcdSetCursor
  1047 ;;		_LcdWriteString
  1048 ;;		_UARTDataReady
  1049 ;;		_UARTInit
  1050 ;;		_UARTReadChar
  1051 ;;		_UARTSendString
  1052 ;;		_analogToString
  1053 ;;		_initADC
  1054 ;;		_intToString
  1055 ;;		_readADC
  1056 ;; This function is called by:
  1057 ;;		Startup code after reset
  1058 ;; This function uses a non-reentrant model
  1059 ;;
  1060                           
  1061                           
  1062                           ;psect for function _main
  1063  0EE3                     _main:
  1064  0EE3                     l2383:	
  1065                           ;incstack = 0
  1066                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1067                           
  1068                           
  1069                           ;main.c: 38:   TRISD = 0;
  1070  0EE3  1683               	bsf	3,5	;RP0=1, select bank1
  1071  0EE4  1303               	bcf	3,6	;RP1=0, select bank1
  1072  0EE5  0188               	clrf	8	;volatile
  1073                           
  1074                           ;main.c: 39:   TRISE = 0;
  1075  0EE6  0189               	clrf	9	;volatile
  1076  0EE7                     l2385:
  1077                           
  1078                           ;main.c: 40:   ANSEL = 3;
  1079  0EE7  3003               	movlw	3
  1080  0EE8  1683               	bsf	3,5	;RP0=1, select bank3
  1081  0EE9  1703               	bsf	3,6	;RP1=1, select bank3
  1082  0EEA  0088               	movwf	8	;volatile
  1083  0EEB                     l2387:
  1084                           
  1085                           ;main.c: 41:   ANSELH = 0;
  1086  0EEB  0189               	clrf	9	;volatile
  1087  0EEC                     l2389:
  1088                           
  1089                           ;main.c: 42:   LcdInit();
  1090  0EEC  120A  158A  233E  120A  158A  	fcall	_LcdInit
  1091  0EF1                     l2391:
  1092                           
  1093                           ;main.c: 43:   initADC();
  1094  0EF1  120A  158A  2205  120A  158A  	fcall	_initADC
  1095  0EF6                     l2393:
  1096                           
  1097                           ;main.c: 44:   UARTInit(9600,1);
  1098  0EF6  3000               	movlw	0
  1099  0EF7  1283               	bcf	3,5	;RP0=0, select bank0
  1100  0EF8  1303               	bcf	3,6	;RP1=0, select bank0
  1101  0EF9  00B0               	movwf	UARTInit@baud_rate+3
  1102  0EFA  3000               	movlw	0
  1103  0EFB  00AF               	movwf	UARTInit@baud_rate+2
  1104  0EFC  3025               	movlw	37
  1105  0EFD  00AE               	movwf	UARTInit@baud_rate+1
  1106  0EFE  3080               	movlw	128
  1107  0EFF  00AD               	movwf	UARTInit@baud_rate
  1108  0F00  01B1               	clrf	UARTInit@BRGH
  1109  0F01  0AB1               	incf	UARTInit@BRGH,f
  1110  0F02  120A  158A  256A  120A  158A  	fcall	_UARTInit
  1111  0F07                     l2395:
  1112                           
  1113                           ;main.c: 45:   volatile char *val;;main.c: 46:   volatile char *val2;;main.c: 47:   char
      +                           *contadorString;;main.c: 48:   uint8_t *adc1;;main.c: 49:   uint8_t *adc2;;main.c: 51: 
      +                            uint8_t contador = 0;
  1114  0F07  1283               	bcf	3,5	;RP0=0, select bank0
  1115  0F08  1303               	bcf	3,6	;RP1=0, select bank0
  1116  0F09  01D8               	clrf	main@contador
  1117  0F0A                     l2397:
  1118                           
  1119                           ;main.c: 55:     adc1 = readADC(0);
  1120  0F0A  3000               	movlw	0
  1121  0F0B  120A  158A  2254  120A  158A  	fcall	_readADC
  1122  0F10  1283               	bcf	3,5	;RP0=0, select bank0
  1123  0F11  1303               	bcf	3,6	;RP1=0, select bank0
  1124  0F12  00D3               	movwf	??_main
  1125  0F13  0853               	movf	??_main,w
  1126  0F14  00D6               	movwf	main@adc1
  1127  0F15                     l2399:
  1128                           
  1129                           ;main.c: 57:     LcdSetCursor(1,1);
  1130  0F15  01A1               	clrf	LcdSetCursor@column
  1131  0F16  0AA1               	incf	LcdSetCursor@column,f
  1132  0F17  3001               	movlw	1
  1133  0F18  120A  158A  22AA  120A  158A  	fcall	_LcdSetCursor
  1134  0F1D                     l2401:
  1135                           
  1136                           ;main.c: 58:     adc2 = readADC(1);
  1137  0F1D  3001               	movlw	1
  1138  0F1E  120A  158A  2254  120A  158A  	fcall	_readADC
  1139  0F23  1283               	bcf	3,5	;RP0=0, select bank0
  1140  0F24  1303               	bcf	3,6	;RP1=0, select bank0
  1141  0F25  00D3               	movwf	??_main
  1142  0F26  0853               	movf	??_main,w
  1143  0F27  00D7               	movwf	main@adc2
  1144  0F28                     l2403:
  1145                           
  1146                           ;main.c: 59:     LcdWriteString("S1:   S2:   S3:");
  1147  0F28  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1148  0F29  00A0               	movwf	LcdWriteString@value
  1149  0F2A  3080               	movlw	128
  1150  0F2B  00A1               	movwf	LcdWriteString@value+1
  1151  0F2C  120A  158A  22F8  120A  158A  	fcall	_LcdWriteString
  1152  0F31                     l2405:
  1153                           
  1154                           ;main.c: 60:     LcdSetCursor(2,1);
  1155  0F31  1283               	bcf	3,5	;RP0=0, select bank0
  1156  0F32  1303               	bcf	3,6	;RP1=0, select bank0
  1157  0F33  01A1               	clrf	LcdSetCursor@column
  1158  0F34  0AA1               	incf	LcdSetCursor@column,f
  1159  0F35  3002               	movlw	2
  1160  0F36  120A  158A  22AA  120A  158A  	fcall	_LcdSetCursor
  1161  0F3B                     l2407:
  1162                           
  1163                           ;main.c: 62:     val = analogToString(*adc1);
  1164  0F3B  1283               	bcf	3,5	;RP0=0, select bank0
  1165  0F3C  1303               	bcf	3,6	;RP1=0, select bank0
  1166  0F3D  0856               	movf	main@adc1,w
  1167  0F3E  0084               	movwf	4
  1168  0F3F  1383               	bcf	3,7	;select IRP bank0
  1169  0F40  0800               	movf	0,w
  1170  0F41  120A  118A  2614  120A  158A  	fcall	_analogToString
  1171  0F46  1283               	bcf	3,5	;RP0=0, select bank0
  1172  0F47  1303               	bcf	3,6	;RP1=0, select bank0
  1173  0F48  00D3               	movwf	??_main
  1174  0F49  0853               	movf	??_main,w
  1175  0F4A  00DA               	movwf	main@val
  1176  0F4B                     l2409:
  1177                           
  1178                           ;main.c: 63:     LcdWriteString(val);
  1179  0F4B  085A               	movf	main@val,w
  1180  0F4C  00A0               	movwf	LcdWriteString@value
  1181  0F4D  3000               	movlw	0
  1182  0F4E  00A1               	movwf	LcdWriteString@value+1
  1183  0F4F  120A  158A  22F8  120A  158A  	fcall	_LcdWriteString
  1184  0F54                     l2411:
  1185                           
  1186                           ;main.c: 64:     LcdWriteString("V ");
  1187  0F54  3015               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1188  0F55  1283               	bcf	3,5	;RP0=0, select bank0
  1189  0F56  1303               	bcf	3,6	;RP1=0, select bank0
  1190  0F57  00A0               	movwf	LcdWriteString@value
  1191  0F58  3080               	movlw	128
  1192  0F59  00A1               	movwf	LcdWriteString@value+1
  1193  0F5A  120A  158A  22F8  120A  158A  	fcall	_LcdWriteString
  1194  0F5F                     l2413:
  1195                           
  1196                           ;main.c: 66:     UARTSendString(val,6);
  1197  0F5F  1283               	bcf	3,5	;RP0=0, select bank0
  1198  0F60  1303               	bcf	3,6	;RP1=0, select bank0
  1199  0F61  085A               	movf	main@val,w
  1200  0F62  00F6               	movwf	UARTSendString@str
  1201  0F63  3000               	movlw	0
  1202  0F64  00F7               	movwf	UARTSendString@str+1
  1203  0F65  3006               	movlw	6
  1204  0F66  00D3               	movwf	??_main
  1205  0F67  0853               	movf	??_main,w
  1206  0F68  00F8               	movwf	UARTSendString@max_length
  1207  0F69  120A  158A  2389  120A  158A  	fcall	_UARTSendString
  1208  0F6E                     l2415:
  1209                           
  1210                           ;main.c: 67:     UARTSendString("V ",3);
  1211  0F6E  3015               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1212  0F6F  00F6               	movwf	UARTSendString@str
  1213  0F70  3080               	movlw	128
  1214  0F71  00F7               	movwf	UARTSendString@str+1
  1215  0F72  3003               	movlw	3
  1216  0F73  1283               	bcf	3,5	;RP0=0, select bank0
  1217  0F74  1303               	bcf	3,6	;RP1=0, select bank0
  1218  0F75  00D3               	movwf	??_main
  1219  0F76  0853               	movf	??_main,w
  1220  0F77  00F8               	movwf	UARTSendString@max_length
  1221  0F78  120A  158A  2389  120A  158A  	fcall	_UARTSendString
  1222  0F7D                     l2417:
  1223                           
  1224                           ;main.c: 68:     val2 = analogToString(*adc2);
  1225  0F7D  1283               	bcf	3,5	;RP0=0, select bank0
  1226  0F7E  1303               	bcf	3,6	;RP1=0, select bank0
  1227  0F7F  0857               	movf	main@adc2,w
  1228  0F80  0084               	movwf	4
  1229  0F81  1383               	bcf	3,7	;select IRP bank0
  1230  0F82  0800               	movf	0,w
  1231  0F83  120A  118A  2614  120A  158A  	fcall	_analogToString
  1232  0F88  1283               	bcf	3,5	;RP0=0, select bank0
  1233  0F89  1303               	bcf	3,6	;RP1=0, select bank0
  1234  0F8A  00D3               	movwf	??_main
  1235  0F8B  0853               	movf	??_main,w
  1236  0F8C  00D4               	movwf	main@val2
  1237  0F8D                     l2419:
  1238                           
  1239                           ;main.c: 69:     LcdWriteString(val2);
  1240  0F8D  0854               	movf	main@val2,w
  1241  0F8E  00A0               	movwf	LcdWriteString@value
  1242  0F8F  3000               	movlw	0
  1243  0F90  00A1               	movwf	LcdWriteString@value+1
  1244  0F91  120A  158A  22F8  120A  158A  	fcall	_LcdWriteString
  1245  0F96                     l2421:
  1246                           
  1247                           ;main.c: 70:     LcdWriteString("V ");
  1248  0F96  3015               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1249  0F97  1283               	bcf	3,5	;RP0=0, select bank0
  1250  0F98  1303               	bcf	3,6	;RP1=0, select bank0
  1251  0F99  00A0               	movwf	LcdWriteString@value
  1252  0F9A  3080               	movlw	128
  1253  0F9B  00A1               	movwf	LcdWriteString@value+1
  1254  0F9C  120A  158A  22F8  120A  158A  	fcall	_LcdWriteString
  1255  0FA1                     l2423:
  1256                           
  1257                           ;main.c: 73:     UARTSendString(val,6);
  1258  0FA1  1283               	bcf	3,5	;RP0=0, select bank0
  1259  0FA2  1303               	bcf	3,6	;RP1=0, select bank0
  1260  0FA3  085A               	movf	main@val,w
  1261  0FA4  00F6               	movwf	UARTSendString@str
  1262  0FA5  3000               	movlw	0
  1263  0FA6  00F7               	movwf	UARTSendString@str+1
  1264  0FA7  3006               	movlw	6
  1265  0FA8  00D3               	movwf	??_main
  1266  0FA9  0853               	movf	??_main,w
  1267  0FAA  00F8               	movwf	UARTSendString@max_length
  1268  0FAB  120A  158A  2389  120A  158A  	fcall	_UARTSendString
  1269  0FB0                     l2425:
  1270                           
  1271                           ;main.c: 74:     UARTSendString("V \n",3);
  1272  0FB0  3011               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1273  0FB1  00F6               	movwf	UARTSendString@str
  1274  0FB2  3080               	movlw	128
  1275  0FB3  00F7               	movwf	UARTSendString@str+1
  1276  0FB4  3003               	movlw	3
  1277  0FB5  1283               	bcf	3,5	;RP0=0, select bank0
  1278  0FB6  1303               	bcf	3,6	;RP1=0, select bank0
  1279  0FB7  00D3               	movwf	??_main
  1280  0FB8  0853               	movf	??_main,w
  1281  0FB9  00F8               	movwf	UARTSendString@max_length
  1282  0FBA  120A  158A  2389  120A  158A  	fcall	_UARTSendString
  1283  0FBF                     l2427:
  1284                           
  1285                           ;main.c: 79:     if (UARTDataReady()){
  1286  0FBF  120A  158A  21D6  120A  158A  	fcall	_UARTDataReady
  1287  0FC4  3A00               	xorlw	0
  1288  0FC5  1903               	skipnz
  1289  0FC6  2FC8               	goto	u3581
  1290  0FC7  2FC9               	goto	u3580
  1291  0FC8                     u3581:
  1292  0FC8  2FE6               	goto	l2439
  1293  0FC9                     u3580:
  1294  0FC9                     l2429:
  1295                           
  1296                           ;main.c: 80:         char entrada = UARTReadChar();
  1297  0FC9  120A  158A  21F7  120A  158A  	fcall	_UARTReadChar
  1298  0FCE  1283               	bcf	3,5	;RP0=0, select bank0
  1299  0FCF  1303               	bcf	3,6	;RP1=0, select bank0
  1300  0FD0  00D3               	movwf	??_main
  1301  0FD1  0853               	movf	??_main,w
  1302  0FD2  00D9               	movwf	main@entrada
  1303  0FD3                     l2431:
  1304                           
  1305                           ;main.c: 81:         if( entrada == '+'){
  1306  0FD3  302B               	movlw	43
  1307  0FD4  0659               	xorwf	main@entrada,w
  1308  0FD5  1D03               	btfss	3,2
  1309  0FD6  2FD8               	goto	u3591
  1310  0FD7  2FD9               	goto	u3590
  1311  0FD8                     u3591:
  1312  0FD8  2FDE               	goto	l2435
  1313  0FD9                     u3590:
  1314  0FD9                     l2433:
  1315                           
  1316                           ;main.c: 82:             contador++;
  1317  0FD9  3001               	movlw	1
  1318  0FDA  00D3               	movwf	??_main
  1319  0FDB  0853               	movf	??_main,w
  1320  0FDC  07D8               	addwf	main@contador,f
  1321                           
  1322                           ;main.c: 83:         }
  1323  0FDD  2FE6               	goto	l2439
  1324  0FDE                     l2435:
  1325  0FDE  302D               	movlw	45
  1326  0FDF  0659               	xorwf	main@entrada,w
  1327  0FE0  1D03               	btfss	3,2
  1328  0FE1  2FE3               	goto	u3601
  1329  0FE2  2FE4               	goto	u3600
  1330  0FE3                     u3601:
  1331  0FE3  2FE6               	goto	l2439
  1332  0FE4                     u3600:
  1333  0FE4                     l2437:
  1334                           
  1335                           ;main.c: 85:             contador--;
  1336  0FE4  3001               	movlw	1
  1337  0FE5  02D8               	subwf	main@contador,f
  1338  0FE6                     l2439:
  1339                           
  1340                           ;main.c: 89:     contadorString = intToString(contador);
  1341  0FE6  1283               	bcf	3,5	;RP0=0, select bank0
  1342  0FE7  1303               	bcf	3,6	;RP1=0, select bank0
  1343  0FE8  0858               	movf	main@contador,w
  1344  0FE9  120A  158A  243B  120A  158A  	fcall	_intToString
  1345  0FEE  1283               	bcf	3,5	;RP0=0, select bank0
  1346  0FEF  1303               	bcf	3,6	;RP1=0, select bank0
  1347  0FF0  00D3               	movwf	??_main
  1348  0FF1  0853               	movf	??_main,w
  1349  0FF2  00D5               	movwf	main@contadorString
  1350  0FF3                     l2441:
  1351                           
  1352                           ;main.c: 90:     LcdWriteString(contadorString);
  1353  0FF3  0855               	movf	main@contadorString,w
  1354  0FF4  00A0               	movwf	LcdWriteString@value
  1355  0FF5  3000               	movlw	0
  1356  0FF6  00A1               	movwf	LcdWriteString@value+1
  1357  0FF7  120A  158A  22F8  120A  158A  	fcall	_LcdWriteString
  1358  0FFC  2F0A               	goto	l2397
  1359  0FFD  120A  118A  280E   	ljmp	start
  1360  1000                     __end_of_main:
  1361                           
  1362                           	psect	text1
  1363  0A54                     __ptext1:	
  1364 ;; *************** function _readADC *****************
  1365 ;; Defined at:
  1366 ;;		line 47 in file "ADC.c"
  1367 ;; Parameters:    Size  Location     Type
  1368 ;;  pin             1    wreg     unsigned char 
  1369 ;; Auto vars:     Size  Location     Type
  1370 ;;  pin             1    6[COMMON] unsigned char 
  1371 ;; Return value:  Size  Location     Type
  1372 ;;                  1    wreg      PTR unsigned char 
  1373 ;; Registers used:
  1374 ;;		wreg, status,2, status,0
  1375 ;; Tracked objects:
  1376 ;;		On entry : 0/0
  1377 ;;		On exit  : 0/0
  1378 ;;		Unchanged: 0/0
  1379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1380 ;;      Params:         0       0       0       0       0
  1381 ;;      Locals:         1       0       0       0       0
  1382 ;;      Temps:          1       0       0       0       0
  1383 ;;      Totals:         2       0       0       0       0
  1384 ;;Total ram usage:        2 bytes
  1385 ;; Hardware stack levels used:    1
  1386 ;; Hardware stack levels required when called:    2
  1387 ;; This function calls:
  1388 ;;		Nothing
  1389 ;; This function is called by:
  1390 ;;		_main
  1391 ;; This function uses a non-reentrant model
  1392 ;;
  1393                           
  1394                           
  1395                           ;psect for function _readADC
  1396  0A54                     _readADC:
  1397                           
  1398                           ;incstack = 0
  1399                           ; Regs used in _readADC: [wreg+status,2+status,0]
  1400                           ;readADC@pin stored from wreg
  1401  0A54  00F6               	movwf	readADC@pin
  1402  0A55                     l2277:
  1403                           
  1404                           ;ADC.c: 48:     if (ADCON0bits.GO ==0 ){
  1405  0A55  1283               	bcf	3,5	;RP0=0, select bank0
  1406  0A56  1303               	bcf	3,6	;RP1=0, select bank0
  1407  0A57  189F               	btfsc	31,1	;volatile
  1408  0A58  2A5A               	goto	u3481
  1409  0A59  2A5B               	goto	u3480
  1410  0A5A                     u3481:
  1411  0A5A  2A69               	goto	l184
  1412  0A5B                     u3480:
  1413  0A5B                     l2279:
  1414                           
  1415                           ;ADC.c: 49:          ADCON0bits.CHS = pin;
  1416  0A5B  0876               	movf	readADC@pin,w
  1417  0A5C  00F5               	movwf	??_readADC
  1418  0A5D  0DF5               	rlf	??_readADC,f
  1419  0A5E  0DF5               	rlf	??_readADC,f
  1420  0A5F  081F               	movf	31,w	;volatile
  1421  0A60  0675               	xorwf	??_readADC,w
  1422  0A61  39C3               	andlw	-61
  1423  0A62  0675               	xorwf	??_readADC,w
  1424  0A63  009F               	movwf	31	;volatile
  1425  0A64                     l2281:
  1426                           
  1427                           ;ADC.c: 50:         _delay((unsigned long)((3)*(4000000/4000000.0)));
  1428  0A64  2A65               	nop2	;2 cycle nop
  1429  0A65  0000               	nop
  1430  0A66                     l2283:
  1431                           
  1432                           ;ADC.c: 51:         ADCON0bits.GO = 1;
  1433  0A66  1283               	bcf	3,5	;RP0=0, select bank0
  1434  0A67  1303               	bcf	3,6	;RP1=0, select bank0
  1435  0A68  149F               	bsf	31,1	;volatile
  1436  0A69                     l184:	
  1437                           ;ADC.c: 52:     }
  1438                           
  1439                           
  1440                           ;ADC.c: 53:     return &ADC_VALUE[pin];
  1441  0A69  0876               	movf	readADC@pin,w
  1442  0A6A  3E5B               	addlw	(low (_ADC_VALUE| 0))& (0+255)
  1443  0A6B                     l185:
  1444  0A6B  0008               	return
  1445  0A6C                     __end_of_readADC:
  1446                           
  1447                           	psect	text2
  1448  0C3B                     __ptext2:	
  1449 ;; *************** function _intToString *****************
  1450 ;; Defined at:
  1451 ;;		line 119 in file "main.c"
  1452 ;; Parameters:    Size  Location     Type
  1453 ;;  value           1    wreg     unsigned char 
  1454 ;; Auto vars:     Size  Location     Type
  1455 ;;  value           1   13[BANK0 ] unsigned char 
  1456 ;;  valor           4    8[BANK0 ] unsigned char [4]
  1457 ;;  entero          1   12[BANK0 ] unsigned char 
  1458 ;; Return value:  Size  Location     Type
  1459 ;;                  1    wreg      PTR unsigned char 
  1460 ;; Registers used:
  1461 ;;		wreg, status,2, status,0, pclath, cstack
  1462 ;; Tracked objects:
  1463 ;;		On entry : 0/0
  1464 ;;		On exit  : 0/0
  1465 ;;		Unchanged: 0/0
  1466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1467 ;;      Params:         0       0       0       0       0
  1468 ;;      Locals:         0       6       0       0       0
  1469 ;;      Temps:          0       3       0       0       0
  1470 ;;      Totals:         0       9       0       0       0
  1471 ;;Total ram usage:        9 bytes
  1472 ;; Hardware stack levels used:    1
  1473 ;; Hardware stack levels required when called:    3
  1474 ;; This function calls:
  1475 ;;		___awdiv
  1476 ;;		___awmod
  1477 ;;		___bmul
  1478 ;; This function is called by:
  1479 ;;		_main
  1480 ;; This function uses a non-reentrant model
  1481 ;;
  1482                           
  1483                           
  1484                           ;psect for function _intToString
  1485  0C3B                     _intToString:
  1486                           
  1487                           ;incstack = 0
  1488                           ; Regs used in _intToString: [wreg+status,2+status,0+pclath+cstack]
  1489                           ;intToString@value stored from wreg
  1490  0C3B  1283               	bcf	3,5	;RP0=0, select bank0
  1491  0C3C  1303               	bcf	3,6	;RP1=0, select bank0
  1492  0C3D  00AD               	movwf	intToString@value
  1493  0C3E                     l2359:
  1494                           
  1495                           ;main.c: 120:     char valor[4];;main.c: 122:     uint8_t entero = value/100;
  1496  0C3E  3064               	movlw	100
  1497  0C3F  00F5               	movwf	___awdiv@divisor
  1498  0C40  3000               	movlw	0
  1499  0C41  00F6               	movwf	___awdiv@divisor+1
  1500  0C42  082D               	movf	intToString@value,w
  1501  0C43  00A5               	movwf	??_intToString
  1502  0C44  01A6               	clrf	??_intToString+1
  1503  0C45  0825               	movf	??_intToString,w
  1504  0C46  00F7               	movwf	___awdiv@dividend
  1505  0C47  0826               	movf	??_intToString+1,w
  1506  0C48  00F8               	movwf	___awdiv@dividend+1
  1507  0C49  120A  158A  2501  120A  158A  	fcall	___awdiv
  1508  0C4E  0875               	movf	?___awdiv,w
  1509  0C4F  1283               	bcf	3,5	;RP0=0, select bank0
  1510  0C50  1303               	bcf	3,6	;RP1=0, select bank0
  1511  0C51  00A7               	movwf	??_intToString+2
  1512  0C52  0827               	movf	??_intToString+2,w
  1513  0C53  00AC               	movwf	intToString@entero
  1514  0C54                     l2361:
  1515                           
  1516                           ;main.c: 123:     valor[0] = entero+48;
  1517  0C54  082C               	movf	intToString@entero,w
  1518  0C55  3E30               	addlw	48
  1519  0C56  00A5               	movwf	??_intToString
  1520  0C57  0825               	movf	??_intToString,w
  1521  0C58  00A8               	movwf	intToString@valor
  1522  0C59                     l2363:
  1523                           
  1524                           ;main.c: 125:     value -= 100*entero;
  1525  0C59  3064               	movlw	100
  1526  0C5A  00A5               	movwf	??_intToString
  1527  0C5B  0825               	movf	??_intToString,w
  1528  0C5C  00F5               	movwf	___bmul@multiplicand
  1529  0C5D  082C               	movf	intToString@entero,w
  1530  0C5E  120A  158A  223F  120A  158A  	fcall	___bmul
  1531  0C63  1283               	bcf	3,5	;RP0=0, select bank0
  1532  0C64  1303               	bcf	3,6	;RP1=0, select bank0
  1533  0C65  00A6               	movwf	??_intToString+1
  1534  0C66  0826               	movf	??_intToString+1,w
  1535  0C67  02AD               	subwf	intToString@value,f
  1536  0C68                     l2365:
  1537                           
  1538                           ;main.c: 127:     valor[1] = value/10 + 48 ;
  1539  0C68  300A               	movlw	10
  1540  0C69  00F5               	movwf	___awdiv@divisor
  1541  0C6A  3000               	movlw	0
  1542  0C6B  00F6               	movwf	___awdiv@divisor+1
  1543  0C6C  082D               	movf	intToString@value,w
  1544  0C6D  00A5               	movwf	??_intToString
  1545  0C6E  01A6               	clrf	??_intToString+1
  1546  0C6F  0825               	movf	??_intToString,w
  1547  0C70  00F7               	movwf	___awdiv@dividend
  1548  0C71  0826               	movf	??_intToString+1,w
  1549  0C72  00F8               	movwf	___awdiv@dividend+1
  1550  0C73  120A  158A  2501  120A  158A  	fcall	___awdiv
  1551  0C78  0875               	movf	?___awdiv,w
  1552  0C79  3E30               	addlw	48
  1553  0C7A  1283               	bcf	3,5	;RP0=0, select bank0
  1554  0C7B  1303               	bcf	3,6	;RP1=0, select bank0
  1555  0C7C  00A7               	movwf	??_intToString+2
  1556  0C7D  0827               	movf	??_intToString+2,w
  1557  0C7E  00A9               	movwf	intToString@valor+1
  1558  0C7F                     l2367:
  1559                           
  1560                           ;main.c: 128:     valor[2] = value%10 + 48;
  1561  0C7F  300A               	movlw	10
  1562  0C80  00F5               	movwf	___awmod@divisor
  1563  0C81  3000               	movlw	0
  1564  0C82  00F6               	movwf	___awmod@divisor+1
  1565  0C83  082D               	movf	intToString@value,w
  1566  0C84  00A5               	movwf	??_intToString
  1567  0C85  01A6               	clrf	??_intToString+1
  1568  0C86  0825               	movf	??_intToString,w
  1569  0C87  00F7               	movwf	___awmod@dividend
  1570  0C88  0826               	movf	??_intToString+1,w
  1571  0C89  00F8               	movwf	___awmod@dividend+1
  1572  0C8A  120A  158A  23E0  120A  158A  	fcall	___awmod
  1573  0C8F  0875               	movf	?___awmod,w
  1574  0C90  3E30               	addlw	48
  1575  0C91  1283               	bcf	3,5	;RP0=0, select bank0
  1576  0C92  1303               	bcf	3,6	;RP1=0, select bank0
  1577  0C93  00A7               	movwf	??_intToString+2
  1578  0C94  0827               	movf	??_intToString+2,w
  1579  0C95  00AA               	movwf	intToString@valor+2
  1580  0C96                     l2369:
  1581                           
  1582                           ;main.c: 129:     valor[3] = '\0';
  1583  0C96  01AB               	clrf	intToString@valor+3
  1584  0C97                     l2371:
  1585                           
  1586                           ;main.c: 131:     return valor;
  1587  0C97  3028               	movlw	(low (intToString@valor| 0))& (0+255)
  1588  0C98                     l50:
  1589  0C98  0008               	return
  1590  0C99                     __end_of_intToString:
  1591                           
  1592                           	psect	text3
  1593  0A3F                     __ptext3:	
  1594 ;; *************** function ___bmul *****************
  1595 ;; Defined at:
  1596 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
  1597 ;; Parameters:    Size  Location     Type
  1598 ;;  multiplier      1    wreg     unsigned char 
  1599 ;;  multiplicand    1    5[COMMON] unsigned char 
  1600 ;; Auto vars:     Size  Location     Type
  1601 ;;  multiplier      1    8[COMMON] unsigned char 
  1602 ;;  product         1    7[COMMON] unsigned char 
  1603 ;; Return value:  Size  Location     Type
  1604 ;;                  1    wreg      unsigned char 
  1605 ;; Registers used:
  1606 ;;		wreg, status,2, status,0
  1607 ;; Tracked objects:
  1608 ;;		On entry : 0/0
  1609 ;;		On exit  : 0/0
  1610 ;;		Unchanged: 0/0
  1611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1612 ;;      Params:         1       0       0       0       0
  1613 ;;      Locals:         2       0       0       0       0
  1614 ;;      Temps:          1       0       0       0       0
  1615 ;;      Totals:         4       0       0       0       0
  1616 ;;Total ram usage:        4 bytes
  1617 ;; Hardware stack levels used:    1
  1618 ;; Hardware stack levels required when called:    2
  1619 ;; This function calls:
  1620 ;;		Nothing
  1621 ;; This function is called by:
  1622 ;;		_intToString
  1623 ;; This function uses a non-reentrant model
  1624 ;;
  1625                           
  1626                           
  1627                           ;psect for function ___bmul
  1628  0A3F                     ___bmul:
  1629                           
  1630                           ;incstack = 0
  1631                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1632                           ;___bmul@multiplier stored from wreg
  1633  0A3F  00F8               	movwf	___bmul@multiplier
  1634  0A40                     l1873:
  1635  0A40  01F7               	clrf	___bmul@product
  1636  0A41                     l1875:
  1637  0A41  1C78               	btfss	___bmul@multiplier,0
  1638  0A42  2A44               	goto	u2561
  1639  0A43  2A45               	goto	u2560
  1640  0A44                     u2561:
  1641  0A44  2A49               	goto	l1879
  1642  0A45                     u2560:
  1643  0A45                     l1877:
  1644  0A45  0875               	movf	___bmul@multiplicand,w
  1645  0A46  00F6               	movwf	??___bmul
  1646  0A47  0876               	movf	??___bmul,w
  1647  0A48  07F7               	addwf	___bmul@product,f
  1648  0A49                     l1879:
  1649  0A49  1003               	clrc
  1650  0A4A  0DF5               	rlf	___bmul@multiplicand,f
  1651  0A4B                     l1881:
  1652  0A4B  1003               	clrc
  1653  0A4C  0CF8               	rrf	___bmul@multiplier,f
  1654  0A4D  0878               	movf	___bmul@multiplier,w
  1655  0A4E  1D03               	btfss	3,2
  1656  0A4F  2A51               	goto	u2571
  1657  0A50  2A52               	goto	u2570
  1658  0A51                     u2571:
  1659  0A51  2A41               	goto	l1875
  1660  0A52                     u2570:
  1661  0A52                     l1883:
  1662  0A52  0877               	movf	___bmul@product,w
  1663  0A53                     l301:
  1664  0A53  0008               	return
  1665  0A54                     __end_of___bmul:
  1666                           
  1667                           	psect	text4
  1668  0BE0                     __ptext4:	
  1669 ;; *************** function ___awmod *****************
  1670 ;; Defined at:
  1671 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  1672 ;; Parameters:    Size  Location     Type
  1673 ;;  divisor         2    5[COMMON] int 
  1674 ;;  dividend        2    7[COMMON] int 
  1675 ;; Auto vars:     Size  Location     Type
  1676 ;;  sign            1    2[BANK0 ] unsigned char 
  1677 ;;  counter         1    1[BANK0 ] unsigned char 
  1678 ;; Return value:  Size  Location     Type
  1679 ;;                  2    5[COMMON] int 
  1680 ;; Registers used:
  1681 ;;		wreg, status,2, status,0
  1682 ;; Tracked objects:
  1683 ;;		On entry : 0/0
  1684 ;;		On exit  : 0/0
  1685 ;;		Unchanged: 0/0
  1686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1687 ;;      Params:         4       0       0       0       0
  1688 ;;      Locals:         0       2       0       0       0
  1689 ;;      Temps:          0       1       0       0       0
  1690 ;;      Totals:         4       3       0       0       0
  1691 ;;Total ram usage:        7 bytes
  1692 ;; Hardware stack levels used:    1
  1693 ;; Hardware stack levels required when called:    2
  1694 ;; This function calls:
  1695 ;;		Nothing
  1696 ;; This function is called by:
  1697 ;;		_intToString
  1698 ;; This function uses a non-reentrant model
  1699 ;;
  1700                           
  1701                           
  1702                           ;psect for function ___awmod
  1703  0BE0                     ___awmod:
  1704  0BE0                     l1955:	
  1705                           ;incstack = 0
  1706                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1707                           
  1708  0BE0  1283               	bcf	3,5	;RP0=0, select bank0
  1709  0BE1  1303               	bcf	3,6	;RP1=0, select bank0
  1710  0BE2  01A2               	clrf	___awmod@sign
  1711  0BE3                     l1957:
  1712  0BE3  1FF8               	btfss	___awmod@dividend+1,7
  1713  0BE4  2BE6               	goto	u2751
  1714  0BE5  2BE7               	goto	u2750
  1715  0BE6                     u2751:
  1716  0BE6  2BEE               	goto	l1963
  1717  0BE7                     u2750:
  1718  0BE7                     l1959:
  1719  0BE7  09F7               	comf	___awmod@dividend,f
  1720  0BE8  09F8               	comf	___awmod@dividend+1,f
  1721  0BE9  0AF7               	incf	___awmod@dividend,f
  1722  0BEA  1903               	skipnz
  1723  0BEB  0AF8               	incf	___awmod@dividend+1,f
  1724  0BEC                     l1961:
  1725  0BEC  01A2               	clrf	___awmod@sign
  1726  0BED  0AA2               	incf	___awmod@sign,f
  1727  0BEE                     l1963:
  1728  0BEE  1FF6               	btfss	___awmod@divisor+1,7
  1729  0BEF  2BF1               	goto	u2761
  1730  0BF0  2BF2               	goto	u2760
  1731  0BF1                     u2761:
  1732  0BF1  2BF7               	goto	l1967
  1733  0BF2                     u2760:
  1734  0BF2                     l1965:
  1735  0BF2  09F5               	comf	___awmod@divisor,f
  1736  0BF3  09F6               	comf	___awmod@divisor+1,f
  1737  0BF4  0AF5               	incf	___awmod@divisor,f
  1738  0BF5  1903               	skipnz
  1739  0BF6  0AF6               	incf	___awmod@divisor+1,f
  1740  0BF7                     l1967:
  1741  0BF7  0875               	movf	___awmod@divisor,w
  1742  0BF8  0476               	iorwf	___awmod@divisor+1,w
  1743  0BF9  1903               	btfsc	3,2
  1744  0BFA  2BFC               	goto	u2771
  1745  0BFB  2BFD               	goto	u2770
  1746  0BFC                     u2771:
  1747  0BFC  2C2C               	goto	l1985
  1748  0BFD                     u2770:
  1749  0BFD                     l1969:
  1750  0BFD  01A1               	clrf	___awmod@counter
  1751  0BFE  0AA1               	incf	___awmod@counter,f
  1752  0BFF  2C0B               	goto	l1975
  1753  0C00                     l1971:
  1754  0C00  3001               	movlw	1
  1755  0C01                     u2785:
  1756  0C01  1003               	clrc
  1757  0C02  0DF5               	rlf	___awmod@divisor,f
  1758  0C03  0DF6               	rlf	___awmod@divisor+1,f
  1759  0C04  3EFF               	addlw	-1
  1760  0C05  1D03               	skipz
  1761  0C06  2C01               	goto	u2785
  1762  0C07                     l1973:
  1763  0C07  3001               	movlw	1
  1764  0C08  00A0               	movwf	??___awmod
  1765  0C09  0820               	movf	??___awmod,w
  1766  0C0A  07A1               	addwf	___awmod@counter,f
  1767  0C0B                     l1975:
  1768  0C0B  1FF6               	btfss	___awmod@divisor+1,7
  1769  0C0C  2C0E               	goto	u2791
  1770  0C0D  2C0F               	goto	u2790
  1771  0C0E                     u2791:
  1772  0C0E  2C00               	goto	l1971
  1773  0C0F                     u2790:
  1774  0C0F                     l1977:
  1775  0C0F  0876               	movf	___awmod@divisor+1,w
  1776  0C10  0278               	subwf	___awmod@dividend+1,w
  1777  0C11  1D03               	skipz
  1778  0C12  2C15               	goto	u2805
  1779  0C13  0875               	movf	___awmod@divisor,w
  1780  0C14  0277               	subwf	___awmod@dividend,w
  1781  0C15                     u2805:
  1782  0C15  1C03               	skipc
  1783  0C16  2C18               	goto	u2801
  1784  0C17  2C19               	goto	u2800
  1785  0C18                     u2801:
  1786  0C18  2C1F               	goto	l1981
  1787  0C19                     u2800:
  1788  0C19                     l1979:
  1789  0C19  0875               	movf	___awmod@divisor,w
  1790  0C1A  02F7               	subwf	___awmod@dividend,f
  1791  0C1B  0876               	movf	___awmod@divisor+1,w
  1792  0C1C  1C03               	skipc
  1793  0C1D  03F8               	decf	___awmod@dividend+1,f
  1794  0C1E  02F8               	subwf	___awmod@dividend+1,f
  1795  0C1F                     l1981:
  1796  0C1F  3001               	movlw	1
  1797  0C20                     u2815:
  1798  0C20  1003               	clrc
  1799  0C21  0CF6               	rrf	___awmod@divisor+1,f
  1800  0C22  0CF5               	rrf	___awmod@divisor,f
  1801  0C23  3EFF               	addlw	-1
  1802  0C24  1D03               	skipz
  1803  0C25  2C20               	goto	u2815
  1804  0C26                     l1983:
  1805  0C26  3001               	movlw	1
  1806  0C27  02A1               	subwf	___awmod@counter,f
  1807  0C28  1D03               	btfss	3,2
  1808  0C29  2C2B               	goto	u2821
  1809  0C2A  2C2C               	goto	u2820
  1810  0C2B                     u2821:
  1811  0C2B  2C0F               	goto	l1977
  1812  0C2C                     u2820:
  1813  0C2C                     l1985:
  1814  0C2C  0822               	movf	___awmod@sign,w
  1815  0C2D  1903               	btfsc	3,2
  1816  0C2E  2C30               	goto	u2831
  1817  0C2F  2C31               	goto	u2830
  1818  0C30                     u2831:
  1819  0C30  2C36               	goto	l1989
  1820  0C31                     u2830:
  1821  0C31                     l1987:
  1822  0C31  09F7               	comf	___awmod@dividend,f
  1823  0C32  09F8               	comf	___awmod@dividend+1,f
  1824  0C33  0AF7               	incf	___awmod@dividend,f
  1825  0C34  1903               	skipnz
  1826  0C35  0AF8               	incf	___awmod@dividend+1,f
  1827  0C36                     l1989:
  1828  0C36  0878               	movf	___awmod@dividend+1,w
  1829  0C37  00F6               	movwf	?___awmod+1
  1830  0C38  0877               	movf	___awmod@dividend,w
  1831  0C39  00F5               	movwf	?___awmod
  1832  0C3A                     l441:
  1833  0C3A  0008               	return
  1834  0C3B                     __end_of___awmod:
  1835                           
  1836                           	psect	text5
  1837  0D01                     __ptext5:	
  1838 ;; *************** function ___awdiv *****************
  1839 ;; Defined at:
  1840 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  1841 ;; Parameters:    Size  Location     Type
  1842 ;;  divisor         2    5[COMMON] int 
  1843 ;;  dividend        2    7[COMMON] int 
  1844 ;; Auto vars:     Size  Location     Type
  1845 ;;  quotient        2    3[BANK0 ] int 
  1846 ;;  sign            1    2[BANK0 ] unsigned char 
  1847 ;;  counter         1    1[BANK0 ] unsigned char 
  1848 ;; Return value:  Size  Location     Type
  1849 ;;                  2    5[COMMON] int 
  1850 ;; Registers used:
  1851 ;;		wreg, status,2, status,0
  1852 ;; Tracked objects:
  1853 ;;		On entry : 0/0
  1854 ;;		On exit  : 0/0
  1855 ;;		Unchanged: 0/0
  1856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1857 ;;      Params:         4       0       0       0       0
  1858 ;;      Locals:         0       4       0       0       0
  1859 ;;      Temps:          0       1       0       0       0
  1860 ;;      Totals:         4       5       0       0       0
  1861 ;;Total ram usage:        9 bytes
  1862 ;; Hardware stack levels used:    1
  1863 ;; Hardware stack levels required when called:    2
  1864 ;; This function calls:
  1865 ;;		Nothing
  1866 ;; This function is called by:
  1867 ;;		_intToString
  1868 ;; This function uses a non-reentrant model
  1869 ;;
  1870                           
  1871                           
  1872                           ;psect for function ___awdiv
  1873  0D01                     ___awdiv:
  1874  0D01                     l1911:	
  1875                           ;incstack = 0
  1876                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1877                           
  1878  0D01  1283               	bcf	3,5	;RP0=0, select bank0
  1879  0D02  1303               	bcf	3,6	;RP1=0, select bank0
  1880  0D03  01A2               	clrf	___awdiv@sign
  1881  0D04                     l1913:
  1882  0D04  1FF6               	btfss	___awdiv@divisor+1,7
  1883  0D05  2D07               	goto	u2651
  1884  0D06  2D08               	goto	u2650
  1885  0D07                     u2651:
  1886  0D07  2D0F               	goto	l1919
  1887  0D08                     u2650:
  1888  0D08                     l1915:
  1889  0D08  09F5               	comf	___awdiv@divisor,f
  1890  0D09  09F6               	comf	___awdiv@divisor+1,f
  1891  0D0A  0AF5               	incf	___awdiv@divisor,f
  1892  0D0B  1903               	skipnz
  1893  0D0C  0AF6               	incf	___awdiv@divisor+1,f
  1894  0D0D                     l1917:
  1895  0D0D  01A2               	clrf	___awdiv@sign
  1896  0D0E  0AA2               	incf	___awdiv@sign,f
  1897  0D0F                     l1919:
  1898  0D0F  1FF8               	btfss	___awdiv@dividend+1,7
  1899  0D10  2D12               	goto	u2661
  1900  0D11  2D13               	goto	u2660
  1901  0D12                     u2661:
  1902  0D12  2D1C               	goto	l1925
  1903  0D13                     u2660:
  1904  0D13                     l1921:
  1905  0D13  09F7               	comf	___awdiv@dividend,f
  1906  0D14  09F8               	comf	___awdiv@dividend+1,f
  1907  0D15  0AF7               	incf	___awdiv@dividend,f
  1908  0D16  1903               	skipnz
  1909  0D17  0AF8               	incf	___awdiv@dividend+1,f
  1910  0D18                     l1923:
  1911  0D18  3001               	movlw	1
  1912  0D19  00A0               	movwf	??___awdiv
  1913  0D1A  0820               	movf	??___awdiv,w
  1914  0D1B  06A2               	xorwf	___awdiv@sign,f
  1915  0D1C                     l1925:
  1916  0D1C  01A3               	clrf	___awdiv@quotient
  1917  0D1D  01A4               	clrf	___awdiv@quotient+1
  1918  0D1E                     l1927:
  1919  0D1E  0875               	movf	___awdiv@divisor,w
  1920  0D1F  0476               	iorwf	___awdiv@divisor+1,w
  1921  0D20  1903               	btfsc	3,2
  1922  0D21  2D23               	goto	u2671
  1923  0D22  2D24               	goto	u2670
  1924  0D23                     u2671:
  1925  0D23  2D5B               	goto	l1947
  1926  0D24                     u2670:
  1927  0D24                     l1929:
  1928  0D24  01A1               	clrf	___awdiv@counter
  1929  0D25  0AA1               	incf	___awdiv@counter,f
  1930  0D26  2D32               	goto	l1935
  1931  0D27                     l1931:
  1932  0D27  3001               	movlw	1
  1933  0D28                     u2685:
  1934  0D28  1003               	clrc
  1935  0D29  0DF5               	rlf	___awdiv@divisor,f
  1936  0D2A  0DF6               	rlf	___awdiv@divisor+1,f
  1937  0D2B  3EFF               	addlw	-1
  1938  0D2C  1D03               	skipz
  1939  0D2D  2D28               	goto	u2685
  1940  0D2E                     l1933:
  1941  0D2E  3001               	movlw	1
  1942  0D2F  00A0               	movwf	??___awdiv
  1943  0D30  0820               	movf	??___awdiv,w
  1944  0D31  07A1               	addwf	___awdiv@counter,f
  1945  0D32                     l1935:
  1946  0D32  1FF6               	btfss	___awdiv@divisor+1,7
  1947  0D33  2D35               	goto	u2691
  1948  0D34  2D36               	goto	u2690
  1949  0D35                     u2691:
  1950  0D35  2D27               	goto	l1931
  1951  0D36                     u2690:
  1952  0D36                     l1937:
  1953  0D36  3001               	movlw	1
  1954  0D37                     u2705:
  1955  0D37  1003               	clrc
  1956  0D38  0DA3               	rlf	___awdiv@quotient,f
  1957  0D39  0DA4               	rlf	___awdiv@quotient+1,f
  1958  0D3A  3EFF               	addlw	-1
  1959  0D3B  1D03               	skipz
  1960  0D3C  2D37               	goto	u2705
  1961  0D3D  0876               	movf	___awdiv@divisor+1,w
  1962  0D3E  0278               	subwf	___awdiv@dividend+1,w
  1963  0D3F  1D03               	skipz
  1964  0D40  2D43               	goto	u2715
  1965  0D41  0875               	movf	___awdiv@divisor,w
  1966  0D42  0277               	subwf	___awdiv@dividend,w
  1967  0D43                     u2715:
  1968  0D43  1C03               	skipc
  1969  0D44  2D46               	goto	u2711
  1970  0D45  2D47               	goto	u2710
  1971  0D46                     u2711:
  1972  0D46  2D4E               	goto	l1943
  1973  0D47                     u2710:
  1974  0D47                     l1939:
  1975  0D47  0875               	movf	___awdiv@divisor,w
  1976  0D48  02F7               	subwf	___awdiv@dividend,f
  1977  0D49  0876               	movf	___awdiv@divisor+1,w
  1978  0D4A  1C03               	skipc
  1979  0D4B  03F8               	decf	___awdiv@dividend+1,f
  1980  0D4C  02F8               	subwf	___awdiv@dividend+1,f
  1981  0D4D                     l1941:
  1982  0D4D  1423               	bsf	___awdiv@quotient,0
  1983  0D4E                     l1943:
  1984  0D4E  3001               	movlw	1
  1985  0D4F                     u2725:
  1986  0D4F  1003               	clrc
  1987  0D50  0CF6               	rrf	___awdiv@divisor+1,f
  1988  0D51  0CF5               	rrf	___awdiv@divisor,f
  1989  0D52  3EFF               	addlw	-1
  1990  0D53  1D03               	skipz
  1991  0D54  2D4F               	goto	u2725
  1992  0D55                     l1945:
  1993  0D55  3001               	movlw	1
  1994  0D56  02A1               	subwf	___awdiv@counter,f
  1995  0D57  1D03               	btfss	3,2
  1996  0D58  2D5A               	goto	u2731
  1997  0D59  2D5B               	goto	u2730
  1998  0D5A                     u2731:
  1999  0D5A  2D36               	goto	l1937
  2000  0D5B                     u2730:
  2001  0D5B                     l1947:
  2002  0D5B  0822               	movf	___awdiv@sign,w
  2003  0D5C  1903               	btfsc	3,2
  2004  0D5D  2D5F               	goto	u2741
  2005  0D5E  2D60               	goto	u2740
  2006  0D5F                     u2741:
  2007  0D5F  2D65               	goto	l1951
  2008  0D60                     u2740:
  2009  0D60                     l1949:
  2010  0D60  09A3               	comf	___awdiv@quotient,f
  2011  0D61  09A4               	comf	___awdiv@quotient+1,f
  2012  0D62  0AA3               	incf	___awdiv@quotient,f
  2013  0D63  1903               	skipnz
  2014  0D64  0AA4               	incf	___awdiv@quotient+1,f
  2015  0D65                     l1951:
  2016  0D65  0824               	movf	___awdiv@quotient+1,w
  2017  0D66  00F6               	movwf	?___awdiv+1
  2018  0D67  0823               	movf	___awdiv@quotient,w
  2019  0D68  00F5               	movwf	?___awdiv
  2020  0D69                     l428:
  2021  0D69  0008               	return
  2022  0D6A                     __end_of___awdiv:
  2023                           
  2024                           	psect	text6
  2025  0A05                     __ptext6:	
  2026 ;; *************** function _initADC *****************
  2027 ;; Defined at:
  2028 ;;		line 23 in file "ADC.c"
  2029 ;; Parameters:    Size  Location     Type
  2030 ;;		None
  2031 ;; Auto vars:     Size  Location     Type
  2032 ;;		None
  2033 ;; Return value:  Size  Location     Type
  2034 ;;                  1    wreg      void 
  2035 ;; Registers used:
  2036 ;;		wreg, status,2, status,0
  2037 ;; Tracked objects:
  2038 ;;		On entry : 0/0
  2039 ;;		On exit  : 0/0
  2040 ;;		Unchanged: 0/0
  2041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2042 ;;      Params:         0       0       0       0       0
  2043 ;;      Locals:         0       0       0       0       0
  2044 ;;      Temps:          0       0       0       0       0
  2045 ;;      Totals:         0       0       0       0       0
  2046 ;;Total ram usage:        0 bytes
  2047 ;; Hardware stack levels used:    1
  2048 ;; Hardware stack levels required when called:    2
  2049 ;; This function calls:
  2050 ;;		Nothing
  2051 ;; This function is called by:
  2052 ;;		_main
  2053 ;; This function uses a non-reentrant model
  2054 ;;
  2055                           
  2056                           
  2057                           ;psect for function _initADC
  2058  0A05                     _initADC:
  2059  0A05                     l2229:	
  2060                           ;incstack = 0
  2061                           ; Regs used in _initADC: [wreg+status,2+status,0]
  2062                           
  2063                           
  2064                           ;ADC.c: 30:     ADCON0bits.ADCS = 1;
  2065  0A05  1283               	bcf	3,5	;RP0=0, select bank0
  2066  0A06  1303               	bcf	3,6	;RP1=0, select bank0
  2067  0A07  081F               	movf	31,w	;volatile
  2068  0A08  393F               	andlw	-193
  2069  0A09  3840               	iorlw	64
  2070  0A0A  009F               	movwf	31	;volatile
  2071  0A0B                     l2231:
  2072                           
  2073                           ;ADC.c: 35:     INTCONbits.GIE =1 ;
  2074  0A0B  178B               	bsf	11,7	;volatile
  2075  0A0C                     l2233:
  2076                           
  2077                           ;ADC.c: 36:     INTCONbits.PEIE =1 ;
  2078  0A0C  170B               	bsf	11,6	;volatile
  2079  0A0D                     l2235:
  2080                           
  2081                           ;ADC.c: 38:     PIE1bits.ADIE = 1;
  2082  0A0D  1683               	bsf	3,5	;RP0=1, select bank1
  2083  0A0E  1303               	bcf	3,6	;RP1=0, select bank1
  2084  0A0F  170C               	bsf	12,6	;volatile
  2085  0A10                     l2237:
  2086                           
  2087                           ;ADC.c: 40:     ADCON1bits.ADFM = 0;
  2088  0A10  139F               	bcf	31,7	;volatile
  2089  0A11                     l2239:
  2090                           
  2091                           ;ADC.c: 41:     ADCON1bits.VCFG1 = 0;
  2092  0A11  129F               	bcf	31,5	;volatile
  2093  0A12                     l2241:
  2094                           
  2095                           ;ADC.c: 42:     ADCON1bits.VCFG0 = 0;
  2096  0A12  121F               	bcf	31,4	;volatile
  2097  0A13                     l2243:
  2098                           
  2099                           ;ADC.c: 43:     ADCON0bits.ADON = 1;
  2100  0A13  1283               	bcf	3,5	;RP0=0, select bank0
  2101  0A14  1303               	bcf	3,6	;RP1=0, select bank0
  2102  0A15  141F               	bsf	31,0	;volatile
  2103  0A16                     l181:
  2104  0A16  0008               	return
  2105  0A17                     __end_of_initADC:
  2106                           
  2107                           	psect	text7
  2108  0614                     __ptext7:	
  2109 ;; *************** function _analogToString *****************
  2110 ;; Defined at:
  2111 ;;		line 96 in file "main.c"
  2112 ;; Parameters:    Size  Location     Type
  2113 ;;  value           1    wreg     unsigned char 
  2114 ;; Auto vars:     Size  Location     Type
  2115 ;;  value           1   40[BANK0 ] unsigned char 
  2116 ;;  string          5   41[BANK0 ] unsigned char [5]
  2117 ;;  valor           4   47[BANK0 ] float 
  2118 ;;  entero          1   46[BANK0 ] unsigned char 
  2119 ;; Return value:  Size  Location     Type
  2120 ;;                  1    wreg      PTR unsigned char 
  2121 ;; Registers used:
  2122 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2123 ;; Tracked objects:
  2124 ;;		On entry : 0/0
  2125 ;;		On exit  : 0/0
  2126 ;;		Unchanged: 0/0
  2127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2128 ;;      Params:         0       0       0       0       0
  2129 ;;      Locals:         0      11       0       0       0
  2130 ;;      Temps:          0       4       0       0       0
  2131 ;;      Totals:         0      15       0       0       0
  2132 ;;Total ram usage:       15 bytes
  2133 ;; Hardware stack levels used:    1
  2134 ;; Hardware stack levels required when called:    4
  2135 ;; This function calls:
  2136 ;;		___flmul
  2137 ;;		___flsub
  2138 ;;		___fltol
  2139 ;;		___xxtofl
  2140 ;; This function is called by:
  2141 ;;		_main
  2142 ;; This function uses a non-reentrant model
  2143 ;;
  2144                           
  2145                           
  2146                           ;psect for function _analogToString
  2147  0614                     _analogToString:
  2148                           
  2149                           ;incstack = 0
  2150                           ; Regs used in _analogToString: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2151                           ;analogToString@value stored from wreg
  2152  0614  1283               	bcf	3,5	;RP0=0, select bank0
  2153  0615  1303               	bcf	3,6	;RP1=0, select bank0
  2154  0616  00C8               	movwf	analogToString@value
  2155  0617                     l2311:
  2156                           
  2157                           ;main.c: 97:     float valor = value *0.019;
  2158  0617  303C               	movlw	60
  2159  0618  00AD               	movwf	___flmul@b+3
  2160  0619  309B               	movlw	155
  2161  061A  00AC               	movwf	___flmul@b+2
  2162  061B  30A5               	movlw	165
  2163  061C  00AB               	movwf	___flmul@b+1
  2164  061D  30E3               	movlw	227
  2165  061E  00AA               	movwf	___flmul@b
  2166  061F  0848               	movf	analogToString@value,w
  2167  0620  00C4               	movwf	??_analogToString
  2168  0621  01C5               	clrf	??_analogToString+1
  2169  0622  01C6               	clrf	??_analogToString+2
  2170  0623  01C7               	clrf	??_analogToString+3
  2171  0624  0847               	movf	??_analogToString+3,w
  2172  0625  00F8               	movwf	___xxtofl@val+3
  2173  0626  0846               	movf	??_analogToString+2,w
  2174  0627  00F7               	movwf	___xxtofl@val+2
  2175  0628  0845               	movf	??_analogToString+1,w
  2176  0629  00F6               	movwf	___xxtofl@val+1
  2177  062A  0844               	movf	??_analogToString,w
  2178  062B  00F5               	movwf	___xxtofl@val
  2179  062C  3001               	movlw	1
  2180  062D  120A  118A  2740  120A  118A  	fcall	___xxtofl
  2181  0632  0878               	movf	?___xxtofl+3,w
  2182  0633  1283               	bcf	3,5	;RP0=0, select bank0
  2183  0634  1303               	bcf	3,6	;RP1=0, select bank0
  2184  0635  00B1               	movwf	___flmul@a+3
  2185  0636  0877               	movf	?___xxtofl+2,w
  2186  0637  00B0               	movwf	___flmul@a+2
  2187  0638  0876               	movf	?___xxtofl+1,w
  2188  0639  00AF               	movwf	___flmul@a+1
  2189  063A  0875               	movf	?___xxtofl,w
  2190  063B  00AE               	movwf	___flmul@a
  2191  063C  120A  118A  2023  120A  118A  	fcall	___flmul
  2192  0641  1283               	bcf	3,5	;RP0=0, select bank0
  2193  0642  1303               	bcf	3,6	;RP1=0, select bank0
  2194  0643  082D               	movf	?___flmul+3,w
  2195  0644  00D2               	movwf	analogToString@valor+3
  2196  0645  082C               	movf	?___flmul+2,w
  2197  0646  00D1               	movwf	analogToString@valor+2
  2198  0647  082B               	movf	?___flmul+1,w
  2199  0648  00D0               	movwf	analogToString@valor+1
  2200  0649  082A               	movf	?___flmul,w
  2201  064A  00CF               	movwf	analogToString@valor
  2202  064B                     l2313:
  2203                           
  2204                           ;main.c: 98:     char string[5];;main.c: 99:     uint8_t entero = valor;
  2205  064B  0852               	movf	analogToString@valor+3,w
  2206  064C  00F8               	movwf	___fltol@f1+3
  2207  064D  0851               	movf	analogToString@valor+2,w
  2208  064E  00F7               	movwf	___fltol@f1+2
  2209  064F  0850               	movf	analogToString@valor+1,w
  2210  0650  00F6               	movwf	___fltol@f1+1
  2211  0651  084F               	movf	analogToString@valor,w
  2212  0652  00F5               	movwf	___fltol@f1
  2213  0653  120A  158A  25DD  120A  118A  	fcall	___fltol
  2214  0658  0875               	movf	?___fltol,w
  2215  0659  1283               	bcf	3,5	;RP0=0, select bank0
  2216  065A  1303               	bcf	3,6	;RP1=0, select bank0
  2217  065B  00C4               	movwf	??_analogToString
  2218  065C  0844               	movf	??_analogToString,w
  2219  065D  00CE               	movwf	analogToString@entero
  2220  065E                     l2315:
  2221                           
  2222                           ;main.c: 101:     string[0] = entero + 48;
  2223  065E  084E               	movf	analogToString@entero,w
  2224  065F  3E30               	addlw	48
  2225  0660  00C4               	movwf	??_analogToString
  2226  0661  0844               	movf	??_analogToString,w
  2227  0662  00C9               	movwf	analogToString@string
  2228  0663                     l2317:
  2229                           
  2230                           ;main.c: 102:     string[1]= '.';
  2231  0663  302E               	movlw	46
  2232  0664  00C4               	movwf	??_analogToString
  2233  0665  0844               	movf	??_analogToString,w
  2234  0666  00CA               	movwf	analogToString@string+1
  2235  0667                     l2319:
  2236                           
  2237                           ;main.c: 103:     valor =( valor - entero);
  2238  0667  084E               	movf	analogToString@entero,w
  2239  0668  00C4               	movwf	??_analogToString
  2240  0669  01C5               	clrf	??_analogToString+1
  2241  066A  01C6               	clrf	??_analogToString+2
  2242  066B  01C7               	clrf	??_analogToString+3
  2243  066C  0847               	movf	??_analogToString+3,w
  2244  066D  00F8               	movwf	___xxtofl@val+3
  2245  066E  0846               	movf	??_analogToString+2,w
  2246  066F  00F7               	movwf	___xxtofl@val+2
  2247  0670  0845               	movf	??_analogToString+1,w
  2248  0671  00F6               	movwf	___xxtofl@val+1
  2249  0672  0844               	movf	??_analogToString,w
  2250  0673  00F5               	movwf	___xxtofl@val
  2251  0674  3001               	movlw	1
  2252  0675  120A  118A  2740  120A  118A  	fcall	___xxtofl
  2253  067A  0878               	movf	?___xxtofl+3,w
  2254  067B  1283               	bcf	3,5	;RP0=0, select bank0
  2255  067C  1303               	bcf	3,6	;RP1=0, select bank0
  2256  067D  00B3               	movwf	___flsub@a+3
  2257  067E  0877               	movf	?___xxtofl+2,w
  2258  067F  00B2               	movwf	___flsub@a+2
  2259  0680  0876               	movf	?___xxtofl+1,w
  2260  0681  00B1               	movwf	___flsub@a+1
  2261  0682  0875               	movf	?___xxtofl,w
  2262  0683  00B0               	movwf	___flsub@a
  2263  0684  0852               	movf	analogToString@valor+3,w
  2264  0685  00B7               	movwf	___flsub@b+3
  2265  0686  0851               	movf	analogToString@valor+2,w
  2266  0687  00B6               	movwf	___flsub@b+2
  2267  0688  0850               	movf	analogToString@valor+1,w
  2268  0689  00B5               	movwf	___flsub@b+1
  2269  068A  084F               	movf	analogToString@valor,w
  2270  068B  00B4               	movwf	___flsub@b
  2271  068C  120A  158A  2286  120A  118A  	fcall	___flsub
  2272  0691  1283               	bcf	3,5	;RP0=0, select bank0
  2273  0692  1303               	bcf	3,6	;RP1=0, select bank0
  2274  0693  0833               	movf	?___flsub+3,w
  2275  0694  00D2               	movwf	analogToString@valor+3
  2276  0695  0832               	movf	?___flsub+2,w
  2277  0696  00D1               	movwf	analogToString@valor+2
  2278  0697  0831               	movf	?___flsub+1,w
  2279  0698  00D0               	movwf	analogToString@valor+1
  2280  0699  0830               	movf	?___flsub,w
  2281  069A  00CF               	movwf	analogToString@valor
  2282  069B                     l2321:
  2283                           
  2284                           ;main.c: 105:     valor*=10;
  2285  069B  3041               	movlw	65
  2286  069C  00AD               	movwf	___flmul@b+3
  2287  069D  3020               	movlw	32
  2288  069E  00AC               	movwf	___flmul@b+2
  2289  069F  3000               	movlw	0
  2290  06A0  00AB               	movwf	___flmul@b+1
  2291  06A1  3000               	movlw	0
  2292  06A2  00AA               	movwf	___flmul@b
  2293  06A3  0852               	movf	analogToString@valor+3,w
  2294  06A4  00B1               	movwf	___flmul@a+3
  2295  06A5  0851               	movf	analogToString@valor+2,w
  2296  06A6  00B0               	movwf	___flmul@a+2
  2297  06A7  0850               	movf	analogToString@valor+1,w
  2298  06A8  00AF               	movwf	___flmul@a+1
  2299  06A9  084F               	movf	analogToString@valor,w
  2300  06AA  00AE               	movwf	___flmul@a
  2301  06AB  120A  118A  2023  120A  118A  	fcall	___flmul
  2302  06B0  1283               	bcf	3,5	;RP0=0, select bank0
  2303  06B1  1303               	bcf	3,6	;RP1=0, select bank0
  2304  06B2  082D               	movf	?___flmul+3,w
  2305  06B3  00D2               	movwf	analogToString@valor+3
  2306  06B4  082C               	movf	?___flmul+2,w
  2307  06B5  00D1               	movwf	analogToString@valor+2
  2308  06B6  082B               	movf	?___flmul+1,w
  2309  06B7  00D0               	movwf	analogToString@valor+1
  2310  06B8  082A               	movf	?___flmul,w
  2311  06B9  00CF               	movwf	analogToString@valor
  2312  06BA                     l2323:
  2313                           
  2314                           ;main.c: 106:     entero = valor ;
  2315  06BA  0852               	movf	analogToString@valor+3,w
  2316  06BB  00F8               	movwf	___fltol@f1+3
  2317  06BC  0851               	movf	analogToString@valor+2,w
  2318  06BD  00F7               	movwf	___fltol@f1+2
  2319  06BE  0850               	movf	analogToString@valor+1,w
  2320  06BF  00F6               	movwf	___fltol@f1+1
  2321  06C0  084F               	movf	analogToString@valor,w
  2322  06C1  00F5               	movwf	___fltol@f1
  2323  06C2  120A  158A  25DD  120A  118A  	fcall	___fltol
  2324  06C7  0875               	movf	?___fltol,w
  2325  06C8  1283               	bcf	3,5	;RP0=0, select bank0
  2326  06C9  1303               	bcf	3,6	;RP1=0, select bank0
  2327  06CA  00C4               	movwf	??_analogToString
  2328  06CB  0844               	movf	??_analogToString,w
  2329  06CC  00CE               	movwf	analogToString@entero
  2330  06CD                     l2325:
  2331                           
  2332                           ;main.c: 107:     string[2] = entero + 48;
  2333  06CD  084E               	movf	analogToString@entero,w
  2334  06CE  3E30               	addlw	48
  2335  06CF  00C4               	movwf	??_analogToString
  2336  06D0  0844               	movf	??_analogToString,w
  2337  06D1  00CB               	movwf	analogToString@string+2
  2338  06D2                     l2327:
  2339                           
  2340                           ;main.c: 109:     valor -= entero;
  2341  06D2  084E               	movf	analogToString@entero,w
  2342  06D3  00C4               	movwf	??_analogToString
  2343  06D4  01C5               	clrf	??_analogToString+1
  2344  06D5  01C6               	clrf	??_analogToString+2
  2345  06D6  01C7               	clrf	??_analogToString+3
  2346  06D7  0847               	movf	??_analogToString+3,w
  2347  06D8  00F8               	movwf	___xxtofl@val+3
  2348  06D9  0846               	movf	??_analogToString+2,w
  2349  06DA  00F7               	movwf	___xxtofl@val+2
  2350  06DB  0845               	movf	??_analogToString+1,w
  2351  06DC  00F6               	movwf	___xxtofl@val+1
  2352  06DD  0844               	movf	??_analogToString,w
  2353  06DE  00F5               	movwf	___xxtofl@val
  2354  06DF  3001               	movlw	1
  2355  06E0  120A  118A  2740  120A  118A  	fcall	___xxtofl
  2356  06E5  0878               	movf	?___xxtofl+3,w
  2357  06E6  1283               	bcf	3,5	;RP0=0, select bank0
  2358  06E7  1303               	bcf	3,6	;RP1=0, select bank0
  2359  06E8  00B3               	movwf	___flsub@a+3
  2360  06E9  0877               	movf	?___xxtofl+2,w
  2361  06EA  00B2               	movwf	___flsub@a+2
  2362  06EB  0876               	movf	?___xxtofl+1,w
  2363  06EC  00B1               	movwf	___flsub@a+1
  2364  06ED  0875               	movf	?___xxtofl,w
  2365  06EE  00B0               	movwf	___flsub@a
  2366  06EF  0852               	movf	analogToString@valor+3,w
  2367  06F0  00B7               	movwf	___flsub@b+3
  2368  06F1  0851               	movf	analogToString@valor+2,w
  2369  06F2  00B6               	movwf	___flsub@b+2
  2370  06F3  0850               	movf	analogToString@valor+1,w
  2371  06F4  00B5               	movwf	___flsub@b+1
  2372  06F5  084F               	movf	analogToString@valor,w
  2373  06F6  00B4               	movwf	___flsub@b
  2374  06F7  120A  158A  2286  120A  118A  	fcall	___flsub
  2375  06FC  1283               	bcf	3,5	;RP0=0, select bank0
  2376  06FD  1303               	bcf	3,6	;RP1=0, select bank0
  2377  06FE  0833               	movf	?___flsub+3,w
  2378  06FF  00D2               	movwf	analogToString@valor+3
  2379  0700  0832               	movf	?___flsub+2,w
  2380  0701  00D1               	movwf	analogToString@valor+2
  2381  0702  0831               	movf	?___flsub+1,w
  2382  0703  00D0               	movwf	analogToString@valor+1
  2383  0704  0830               	movf	?___flsub,w
  2384  0705  00CF               	movwf	analogToString@valor
  2385  0706                     l2329:
  2386                           
  2387                           ;main.c: 110:     valor*=10;
  2388  0706  3041               	movlw	65
  2389  0707  00AD               	movwf	___flmul@b+3
  2390  0708  3020               	movlw	32
  2391  0709  00AC               	movwf	___flmul@b+2
  2392  070A  3000               	movlw	0
  2393  070B  00AB               	movwf	___flmul@b+1
  2394  070C  3000               	movlw	0
  2395  070D  00AA               	movwf	___flmul@b
  2396  070E  0852               	movf	analogToString@valor+3,w
  2397  070F  00B1               	movwf	___flmul@a+3
  2398  0710  0851               	movf	analogToString@valor+2,w
  2399  0711  00B0               	movwf	___flmul@a+2
  2400  0712  0850               	movf	analogToString@valor+1,w
  2401  0713  00AF               	movwf	___flmul@a+1
  2402  0714  084F               	movf	analogToString@valor,w
  2403  0715  00AE               	movwf	___flmul@a
  2404  0716  120A  118A  2023  120A  118A  	fcall	___flmul
  2405  071B  1283               	bcf	3,5	;RP0=0, select bank0
  2406  071C  1303               	bcf	3,6	;RP1=0, select bank0
  2407  071D  082D               	movf	?___flmul+3,w
  2408  071E  00D2               	movwf	analogToString@valor+3
  2409  071F  082C               	movf	?___flmul+2,w
  2410  0720  00D1               	movwf	analogToString@valor+2
  2411  0721  082B               	movf	?___flmul+1,w
  2412  0722  00D0               	movwf	analogToString@valor+1
  2413  0723  082A               	movf	?___flmul,w
  2414  0724  00CF               	movwf	analogToString@valor
  2415  0725                     l2331:
  2416                           
  2417                           ;main.c: 112:     entero = valor ;
  2418  0725  0852               	movf	analogToString@valor+3,w
  2419  0726  00F8               	movwf	___fltol@f1+3
  2420  0727  0851               	movf	analogToString@valor+2,w
  2421  0728  00F7               	movwf	___fltol@f1+2
  2422  0729  0850               	movf	analogToString@valor+1,w
  2423  072A  00F6               	movwf	___fltol@f1+1
  2424  072B  084F               	movf	analogToString@valor,w
  2425  072C  00F5               	movwf	___fltol@f1
  2426  072D  120A  158A  25DD  120A  118A  	fcall	___fltol
  2427  0732  0875               	movf	?___fltol,w
  2428  0733  1283               	bcf	3,5	;RP0=0, select bank0
  2429  0734  1303               	bcf	3,6	;RP1=0, select bank0
  2430  0735  00C4               	movwf	??_analogToString
  2431  0736  0844               	movf	??_analogToString,w
  2432  0737  00CE               	movwf	analogToString@entero
  2433  0738                     l2333:
  2434                           
  2435                           ;main.c: 113:     string[3] = (entero + 48);
  2436  0738  084E               	movf	analogToString@entero,w
  2437  0739  3E30               	addlw	48
  2438  073A  00C4               	movwf	??_analogToString
  2439  073B  0844               	movf	??_analogToString,w
  2440  073C  00CC               	movwf	analogToString@string+3
  2441  073D                     l2335:
  2442                           
  2443                           ;main.c: 114:     string[4] ='\0';
  2444  073D  01CD               	clrf	analogToString@string+4
  2445  073E                     l2337:
  2446                           
  2447                           ;main.c: 115:     return string;
  2448  073E  3049               	movlw	(low (analogToString@string| 0))& (0+255)
  2449  073F                     l47:
  2450  073F  0008               	return
  2451  0740                     __end_of_analogToString:
  2452                           
  2453                           	psect	text8
  2454  0740                     __ptext8:	
  2455 ;; *************** function ___xxtofl *****************
  2456 ;; Defined at:
  2457 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  2458 ;; Parameters:    Size  Location     Type
  2459 ;;  sign            1    wreg     unsigned char 
  2460 ;;  val             4    5[COMMON] long 
  2461 ;; Auto vars:     Size  Location     Type
  2462 ;;  sign            1    4[BANK0 ] unsigned char 
  2463 ;;  arg             4    6[BANK0 ] unsigned long 
  2464 ;;  exp             1    5[BANK0 ] unsigned char 
  2465 ;; Return value:  Size  Location     Type
  2466 ;;                  4    5[COMMON] unsigned char 
  2467 ;; Registers used:
  2468 ;;		wreg, status,2, status,0
  2469 ;; Tracked objects:
  2470 ;;		On entry : 0/0
  2471 ;;		On exit  : 0/0
  2472 ;;		Unchanged: 0/0
  2473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2474 ;;      Params:         4       0       0       0       0
  2475 ;;      Locals:         0       6       0       0       0
  2476 ;;      Temps:          0       4       0       0       0
  2477 ;;      Totals:         4      10       0       0       0
  2478 ;;Total ram usage:       14 bytes
  2479 ;; Hardware stack levels used:    1
  2480 ;; Hardware stack levels required when called:    2
  2481 ;; This function calls:
  2482 ;;		Nothing
  2483 ;; This function is called by:
  2484 ;;		_analogToString
  2485 ;; This function uses a non-reentrant model
  2486 ;;
  2487                           
  2488                           
  2489                           ;psect for function ___xxtofl
  2490  0740                     ___xxtofl:
  2491                           
  2492                           ;incstack = 0
  2493                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  2494                           ;___xxtofl@sign stored from wreg
  2495  0740  1283               	bcf	3,5	;RP0=0, select bank0
  2496  0741  1303               	bcf	3,6	;RP1=0, select bank0
  2497  0742  00A4               	movwf	___xxtofl@sign
  2498  0743                     l2175:
  2499  0743  0824               	movf	___xxtofl@sign,w
  2500  0744  1903               	btfsc	3,2
  2501  0745  2F47               	goto	u3311
  2502  0746  2F48               	goto	u3310
  2503  0747                     u3311:
  2504  0747  2F5C               	goto	l2181
  2505  0748                     u3310:
  2506  0748                     l2177:
  2507  0748  1FF8               	btfss	___xxtofl@val+3,7
  2508  0749  2F4B               	goto	u3321
  2509  074A  2F4C               	goto	u3320
  2510  074B                     u3321:
  2511  074B  2F5C               	goto	l2181
  2512  074C                     u3320:
  2513  074C                     l2179:
  2514  074C  0975               	comf	___xxtofl@val,w
  2515  074D  00A6               	movwf	___xxtofl@arg
  2516  074E  0976               	comf	___xxtofl@val+1,w
  2517  074F  00A7               	movwf	___xxtofl@arg+1
  2518  0750  0977               	comf	___xxtofl@val+2,w
  2519  0751  00A8               	movwf	___xxtofl@arg+2
  2520  0752  0978               	comf	___xxtofl@val+3,w
  2521  0753  00A9               	movwf	___xxtofl@arg+3
  2522  0754  0AA6               	incf	___xxtofl@arg,f
  2523  0755  1903               	skipnz
  2524  0756  0AA7               	incf	___xxtofl@arg+1,f
  2525  0757  1903               	skipnz
  2526  0758  0AA8               	incf	___xxtofl@arg+2,f
  2527  0759  1903               	skipnz
  2528  075A  0AA9               	incf	___xxtofl@arg+3,f
  2529  075B  2F64               	goto	l708
  2530  075C                     l2181:
  2531  075C  0878               	movf	___xxtofl@val+3,w
  2532  075D  00A9               	movwf	___xxtofl@arg+3
  2533  075E  0877               	movf	___xxtofl@val+2,w
  2534  075F  00A8               	movwf	___xxtofl@arg+2
  2535  0760  0876               	movf	___xxtofl@val+1,w
  2536  0761  00A7               	movwf	___xxtofl@arg+1
  2537  0762  0875               	movf	___xxtofl@val,w
  2538  0763  00A6               	movwf	___xxtofl@arg
  2539  0764                     l708:
  2540  0764  0878               	movf	___xxtofl@val+3,w
  2541  0765  0477               	iorwf	___xxtofl@val+2,w
  2542  0766  0476               	iorwf	___xxtofl@val+1,w
  2543  0767  0475               	iorwf	___xxtofl@val,w
  2544  0768  1D03               	skipz
  2545  0769  2F6B               	goto	u3331
  2546  076A  2F6C               	goto	u3330
  2547  076B                     u3331:
  2548  076B  2F75               	goto	l2187
  2549  076C                     u3330:
  2550  076C                     l2183:
  2551  076C  3000               	movlw	0
  2552  076D  00F8               	movwf	?___xxtofl+3
  2553  076E  3000               	movlw	0
  2554  076F  00F7               	movwf	?___xxtofl+2
  2555  0770  3000               	movlw	0
  2556  0771  00F6               	movwf	?___xxtofl+1
  2557  0772  3000               	movlw	0
  2558  0773  00F5               	movwf	?___xxtofl
  2559  0774  2FFB               	goto	l710
  2560  0775                     l2187:
  2561  0775  3096               	movlw	150
  2562  0776  00A0               	movwf	??___xxtofl
  2563  0777  0820               	movf	??___xxtofl,w
  2564  0778  00A5               	movwf	___xxtofl@exp
  2565  0779  2F87               	goto	l2191
  2566  077A                     l2189:
  2567  077A  3001               	movlw	1
  2568  077B  00A0               	movwf	??___xxtofl
  2569  077C  0820               	movf	??___xxtofl,w
  2570  077D  07A5               	addwf	___xxtofl@exp,f
  2571  077E  3001               	movlw	1
  2572  077F                     u3345:
  2573  077F  1003               	clrc
  2574  0780  0CA9               	rrf	___xxtofl@arg+3,f
  2575  0781  0CA8               	rrf	___xxtofl@arg+2,f
  2576  0782  0CA7               	rrf	___xxtofl@arg+1,f
  2577  0783  0CA6               	rrf	___xxtofl@arg,f
  2578  0784  3EFF               	addlw	-1
  2579  0785  1D03               	skipz
  2580  0786  2F7F               	goto	u3345
  2581  0787                     l2191:
  2582  0787  30FE               	movlw	254
  2583  0788  0529               	andwf	___xxtofl@arg+3,w
  2584  0789  1D03               	btfss	3,2
  2585  078A  2F8C               	goto	u3351
  2586  078B  2F8D               	goto	u3350
  2587  078C                     u3351:
  2588  078C  2F7A               	goto	l2189
  2589  078D                     u3350:
  2590  078D  2FA9               	goto	l714
  2591  078E                     l2193:
  2592  078E  3001               	movlw	1
  2593  078F  00A0               	movwf	??___xxtofl
  2594  0790  0820               	movf	??___xxtofl,w
  2595  0791  07A5               	addwf	___xxtofl@exp,f
  2596  0792                     l2195:
  2597  0792  3001               	movlw	1
  2598  0793  07A6               	addwf	___xxtofl@arg,f
  2599  0794  3000               	movlw	0
  2600  0795  1803               	skipnc
  2601  0796  3001               	movlw	1
  2602  0797  07A7               	addwf	___xxtofl@arg+1,f
  2603  0798  3000               	movlw	0
  2604  0799  1803               	skipnc
  2605  079A  3001               	movlw	1
  2606  079B  07A8               	addwf	___xxtofl@arg+2,f
  2607  079C  3000               	movlw	0
  2608  079D  1803               	skipnc
  2609  079E  3001               	movlw	1
  2610  079F  07A9               	addwf	___xxtofl@arg+3,f
  2611  07A0                     l2197:
  2612  07A0  3001               	movlw	1
  2613  07A1                     u3365:
  2614  07A1  1003               	clrc
  2615  07A2  0CA9               	rrf	___xxtofl@arg+3,f
  2616  07A3  0CA8               	rrf	___xxtofl@arg+2,f
  2617  07A4  0CA7               	rrf	___xxtofl@arg+1,f
  2618  07A5  0CA6               	rrf	___xxtofl@arg,f
  2619  07A6  3EFF               	addlw	-1
  2620  07A7  1D03               	skipz
  2621  07A8  2FA1               	goto	u3365
  2622  07A9                     l714:
  2623  07A9  30FF               	movlw	255
  2624  07AA  0529               	andwf	___xxtofl@arg+3,w
  2625  07AB  1D03               	btfss	3,2
  2626  07AC  2FAE               	goto	u3371
  2627  07AD  2FAF               	goto	u3370
  2628  07AE                     u3371:
  2629  07AE  2F8E               	goto	l2193
  2630  07AF                     u3370:
  2631  07AF  2FBB               	goto	l2201
  2632  07B0                     l2199:
  2633  07B0  3001               	movlw	1
  2634  07B1  02A5               	subwf	___xxtofl@exp,f
  2635  07B2  3001               	movlw	1
  2636  07B3  00A0               	movwf	??___xxtofl
  2637  07B4                     u3385:
  2638  07B4  1003               	clrc
  2639  07B5  0DA6               	rlf	___xxtofl@arg,f
  2640  07B6  0DA7               	rlf	___xxtofl@arg+1,f
  2641  07B7  0DA8               	rlf	___xxtofl@arg+2,f
  2642  07B8  0DA9               	rlf	___xxtofl@arg+3,f
  2643  07B9  0BA0               	decfsz	??___xxtofl,f
  2644  07BA  2FB4               	goto	u3385
  2645  07BB                     l2201:
  2646  07BB  1BA8               	btfsc	___xxtofl@arg+2,7
  2647  07BC  2FBE               	goto	u3391
  2648  07BD  2FBF               	goto	u3390
  2649  07BE                     u3391:
  2650  07BE  2FC5               	goto	l721
  2651  07BF                     u3390:
  2652  07BF                     l2203:
  2653  07BF  3002               	movlw	2
  2654  07C0  0225               	subwf	___xxtofl@exp,w
  2655  07C1  1803               	skipnc
  2656  07C2  2FC4               	goto	u3401
  2657  07C3  2FC5               	goto	u3400
  2658  07C4                     u3401:
  2659  07C4  2FB0               	goto	l2199
  2660  07C5                     u3400:
  2661  07C5                     l721:
  2662  07C5  1825               	btfsc	___xxtofl@exp,0
  2663  07C6  2FC8               	goto	u3411
  2664  07C7  2FC9               	goto	u3410
  2665  07C8                     u3411:
  2666  07C8  2FD1               	goto	l722
  2667  07C9                     u3410:
  2668  07C9                     l2205:
  2669  07C9  30FF               	movlw	255
  2670  07CA  05A6               	andwf	___xxtofl@arg,f
  2671  07CB  30FF               	movlw	255
  2672  07CC  05A7               	andwf	___xxtofl@arg+1,f
  2673  07CD  307F               	movlw	127
  2674  07CE  05A8               	andwf	___xxtofl@arg+2,f
  2675  07CF  30FF               	movlw	255
  2676  07D0  05A9               	andwf	___xxtofl@arg+3,f
  2677  07D1                     l722:
  2678  07D1  1003               	clrc
  2679  07D2  0CA5               	rrf	___xxtofl@exp,f
  2680  07D3                     l2207:
  2681  07D3  0825               	movf	___xxtofl@exp,w
  2682  07D4  00A0               	movwf	??___xxtofl
  2683  07D5  01A1               	clrf	??___xxtofl+1
  2684  07D6  01A2               	clrf	??___xxtofl+2
  2685  07D7  01A3               	clrf	??___xxtofl+3
  2686  07D8  3018               	movlw	24
  2687  07D9                     u3425:
  2688  07D9  1003               	clrc
  2689  07DA  0DA0               	rlf	??___xxtofl,f
  2690  07DB  0DA1               	rlf	??___xxtofl+1,f
  2691  07DC  0DA2               	rlf	??___xxtofl+2,f
  2692  07DD  0DA3               	rlf	??___xxtofl+3,f
  2693  07DE                     u3420:
  2694  07DE  3EFF               	addlw	-1
  2695  07DF  1D03               	skipz
  2696  07E0  2FD9               	goto	u3425
  2697  07E1  0820               	movf	??___xxtofl,w
  2698  07E2  04A6               	iorwf	___xxtofl@arg,f
  2699  07E3  0821               	movf	??___xxtofl+1,w
  2700  07E4  04A7               	iorwf	___xxtofl@arg+1,f
  2701  07E5  0822               	movf	??___xxtofl+2,w
  2702  07E6  04A8               	iorwf	___xxtofl@arg+2,f
  2703  07E7  0823               	movf	??___xxtofl+3,w
  2704  07E8  04A9               	iorwf	___xxtofl@arg+3,f
  2705  07E9                     l2209:
  2706  07E9  0824               	movf	___xxtofl@sign,w
  2707  07EA  1903               	btfsc	3,2
  2708  07EB  2FED               	goto	u3431
  2709  07EC  2FEE               	goto	u3430
  2710  07ED                     u3431:
  2711  07ED  2FF3               	goto	l2215
  2712  07EE                     u3430:
  2713  07EE                     l2211:
  2714  07EE  1FF8               	btfss	___xxtofl@val+3,7
  2715  07EF  2FF1               	goto	u3441
  2716  07F0  2FF2               	goto	u3440
  2717  07F1                     u3441:
  2718  07F1  2FF3               	goto	l2215
  2719  07F2                     u3440:
  2720  07F2                     l2213:
  2721  07F2  17A9               	bsf	___xxtofl@arg+3,7
  2722  07F3                     l2215:
  2723  07F3  0829               	movf	___xxtofl@arg+3,w
  2724  07F4  00F8               	movwf	?___xxtofl+3
  2725  07F5  0828               	movf	___xxtofl@arg+2,w
  2726  07F6  00F7               	movwf	?___xxtofl+2
  2727  07F7  0827               	movf	___xxtofl@arg+1,w
  2728  07F8  00F6               	movwf	?___xxtofl+1
  2729  07F9  0826               	movf	___xxtofl@arg,w
  2730  07FA  00F5               	movwf	?___xxtofl
  2731  07FB                     l710:
  2732  07FB  0008               	return
  2733  07FC                     __end_of___xxtofl:
  2734                           
  2735                           	psect	text9
  2736  0DDD                     __ptext9:	
  2737 ;; *************** function ___fltol *****************
  2738 ;; Defined at:
  2739 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  2740 ;; Parameters:    Size  Location     Type
  2741 ;;  f1              4    5[COMMON] unsigned char 
  2742 ;; Auto vars:     Size  Location     Type
  2743 ;;  exp1            1    6[BANK0 ] unsigned char 
  2744 ;;  sign1           1    5[BANK0 ] unsigned char 
  2745 ;; Return value:  Size  Location     Type
  2746 ;;                  4    5[COMMON] long 
  2747 ;; Registers used:
  2748 ;;		wreg, status,2, status,0
  2749 ;; Tracked objects:
  2750 ;;		On entry : 0/0
  2751 ;;		On exit  : 0/0
  2752 ;;		Unchanged: 0/0
  2753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2754 ;;      Params:         4       0       0       0       0
  2755 ;;      Locals:         0       2       0       0       0
  2756 ;;      Temps:          0       5       0       0       0
  2757 ;;      Totals:         4       7       0       0       0
  2758 ;;Total ram usage:       11 bytes
  2759 ;; Hardware stack levels used:    1
  2760 ;; Hardware stack levels required when called:    2
  2761 ;; This function calls:
  2762 ;;		Nothing
  2763 ;; This function is called by:
  2764 ;;		_analogToString
  2765 ;; This function uses a non-reentrant model
  2766 ;;
  2767                           
  2768                           
  2769                           ;psect for function ___fltol
  2770  0DDD                     ___fltol:
  2771  0DDD                     l1993:	
  2772                           ;incstack = 0
  2773                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  2774                           
  2775  0DDD  1003               	clrc
  2776  0DDE  0D77               	rlf	___fltol@f1+2,w
  2777  0DDF  0D78               	rlf	___fltol@f1+3,w
  2778  0DE0  1283               	bcf	3,5	;RP0=0, select bank0
  2779  0DE1  1303               	bcf	3,6	;RP1=0, select bank0
  2780  0DE2  00A0               	movwf	??___fltol
  2781  0DE3  0820               	movf	??___fltol,w
  2782  0DE4  00A6               	movwf	___fltol@exp1
  2783  0DE5  0826               	movf	___fltol@exp1,w
  2784  0DE6  1D03               	btfss	3,2
  2785  0DE7  2DE9               	goto	u2841
  2786  0DE8  2DEA               	goto	u2840
  2787  0DE9                     u2841:
  2788  0DE9  2DF3               	goto	l1999
  2789  0DEA                     u2840:
  2790  0DEA                     l1995:
  2791  0DEA  3000               	movlw	0
  2792  0DEB  00F8               	movwf	?___fltol+3
  2793  0DEC  3000               	movlw	0
  2794  0DED  00F7               	movwf	?___fltol+2
  2795  0DEE  3000               	movlw	0
  2796  0DEF  00F6               	movwf	?___fltol+1
  2797  0DF0  3000               	movlw	0
  2798  0DF1  00F5               	movwf	?___fltol
  2799  0DF2  2E58               	goto	l461
  2800  0DF3                     l1999:
  2801  0DF3  0875               	movf	___fltol@f1,w
  2802  0DF4  00A0               	movwf	??___fltol
  2803  0DF5  0876               	movf	___fltol@f1+1,w
  2804  0DF6  00A1               	movwf	??___fltol+1
  2805  0DF7  0877               	movf	___fltol@f1+2,w
  2806  0DF8  00A2               	movwf	??___fltol+2
  2807  0DF9  0878               	movf	___fltol@f1+3,w
  2808  0DFA  00A3               	movwf	??___fltol+3
  2809  0DFB  301F               	movlw	31
  2810  0DFC                     u2855:
  2811  0DFC  1003               	clrc
  2812  0DFD  0CA3               	rrf	??___fltol+3,f
  2813  0DFE  0CA2               	rrf	??___fltol+2,f
  2814  0DFF  0CA1               	rrf	??___fltol+1,f
  2815  0E00  0CA0               	rrf	??___fltol,f
  2816  0E01                     u2850:
  2817  0E01  3EFF               	addlw	-1
  2818  0E02  1D03               	skipz
  2819  0E03  2DFC               	goto	u2855
  2820  0E04  0820               	movf	??___fltol,w
  2821  0E05  00A4               	movwf	??___fltol+4
  2822  0E06  0824               	movf	??___fltol+4,w
  2823  0E07  00A5               	movwf	___fltol@sign1
  2824  0E08                     l2001:
  2825  0E08  17F7               	bsf	___fltol@f1+2,7
  2826  0E09                     l2003:
  2827  0E09  30FF               	movlw	255
  2828  0E0A  05F5               	andwf	___fltol@f1,f
  2829  0E0B  30FF               	movlw	255
  2830  0E0C  05F6               	andwf	___fltol@f1+1,f
  2831  0E0D  30FF               	movlw	255
  2832  0E0E  05F7               	andwf	___fltol@f1+2,f
  2833  0E0F  3000               	movlw	0
  2834  0E10  05F8               	andwf	___fltol@f1+3,f
  2835  0E11                     l2005:
  2836  0E11  3096               	movlw	150
  2837  0E12  02A6               	subwf	___fltol@exp1,f
  2838  0E13                     l2007:
  2839  0E13  1FA6               	btfss	___fltol@exp1,7
  2840  0E14  2E16               	goto	u2861
  2841  0E15  2E17               	goto	u2860
  2842  0E16                     u2861:
  2843  0E16  2E31               	goto	l2017
  2844  0E17                     u2860:
  2845  0E17                     l2009:
  2846  0E17  0826               	movf	___fltol@exp1,w
  2847  0E18  3A80               	xorlw	128
  2848  0E19  3E97               	addlw	151
  2849  0E1A  1803               	skipnc
  2850  0E1B  2E1D               	goto	u2871
  2851  0E1C  2E1E               	goto	u2870
  2852  0E1D                     u2871:
  2853  0E1D  2E1F               	goto	l2015
  2854  0E1E                     u2870:
  2855  0E1E  2DEA               	goto	l1995
  2856  0E1F                     l2015:
  2857  0E1F  3001               	movlw	1
  2858  0E20                     u2885:
  2859  0E20  1003               	clrc
  2860  0E21  0CF8               	rrf	___fltol@f1+3,f
  2861  0E22  0CF7               	rrf	___fltol@f1+2,f
  2862  0E23  0CF6               	rrf	___fltol@f1+1,f
  2863  0E24  0CF5               	rrf	___fltol@f1,f
  2864  0E25  3EFF               	addlw	-1
  2865  0E26  1D03               	skipz
  2866  0E27  2E20               	goto	u2885
  2867  0E28  3001               	movlw	1
  2868  0E29  00A0               	movwf	??___fltol
  2869  0E2A  0820               	movf	??___fltol,w
  2870  0E2B  07A6               	addwf	___fltol@exp1,f
  2871  0E2C  1D03               	btfss	3,2
  2872  0E2D  2E2F               	goto	u2891
  2873  0E2E  2E30               	goto	u2890
  2874  0E2F                     u2891:
  2875  0E2F  2E1F               	goto	l2015
  2876  0E30                     u2890:
  2877  0E30  2E48               	goto	l2025
  2878  0E31                     l2017:
  2879  0E31  3020               	movlw	32
  2880  0E32  0226               	subwf	___fltol@exp1,w
  2881  0E33  1C03               	skipc
  2882  0E34  2E36               	goto	u2901
  2883  0E35  2E37               	goto	u2900
  2884  0E36                     u2901:
  2885  0E36  2E43               	goto	l468
  2886  0E37                     u2900:
  2887  0E37  2DEA               	goto	l1995
  2888  0E38                     l2023:
  2889  0E38  3001               	movlw	1
  2890  0E39  00A0               	movwf	??___fltol
  2891  0E3A                     u2915:
  2892  0E3A  1003               	clrc
  2893  0E3B  0DF5               	rlf	___fltol@f1,f
  2894  0E3C  0DF6               	rlf	___fltol@f1+1,f
  2895  0E3D  0DF7               	rlf	___fltol@f1+2,f
  2896  0E3E  0DF8               	rlf	___fltol@f1+3,f
  2897  0E3F  0BA0               	decfsz	??___fltol,f
  2898  0E40  2E3A               	goto	u2915
  2899  0E41  3001               	movlw	1
  2900  0E42  02A6               	subwf	___fltol@exp1,f
  2901  0E43                     l468:
  2902  0E43  0826               	movf	___fltol@exp1,w
  2903  0E44  1D03               	btfss	3,2
  2904  0E45  2E47               	goto	u2921
  2905  0E46  2E48               	goto	u2920
  2906  0E47                     u2921:
  2907  0E47  2E38               	goto	l2023
  2908  0E48                     u2920:
  2909  0E48                     l2025:
  2910  0E48  0825               	movf	___fltol@sign1,w
  2911  0E49  1903               	btfsc	3,2
  2912  0E4A  2E4C               	goto	u2931
  2913  0E4B  2E4D               	goto	u2930
  2914  0E4C                     u2931:
  2915  0E4C  2E58               	goto	l471
  2916  0E4D                     u2930:
  2917  0E4D                     l2027:
  2918  0E4D  09F5               	comf	___fltol@f1,f
  2919  0E4E  09F6               	comf	___fltol@f1+1,f
  2920  0E4F  09F7               	comf	___fltol@f1+2,f
  2921  0E50  09F8               	comf	___fltol@f1+3,f
  2922  0E51  0AF5               	incf	___fltol@f1,f
  2923  0E52  1903               	skipnz
  2924  0E53  0AF6               	incf	___fltol@f1+1,f
  2925  0E54  1903               	skipnz
  2926  0E55  0AF7               	incf	___fltol@f1+2,f
  2927  0E56  1903               	skipnz
  2928  0E57  0AF8               	incf	___fltol@f1+3,f
  2929  0E58                     l471:
  2930  0E58                     l461:
  2931  0E58  0008               	return
  2932  0E59                     __end_of___fltol:
  2933                           
  2934                           	psect	text10
  2935  0A86                     __ptext10:	
  2936 ;; *************** function ___flsub *****************
  2937 ;; Defined at:
  2938 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  2939 ;; Parameters:    Size  Location     Type
  2940 ;;  a               4   16[BANK0 ] long 
  2941 ;;  b               4   20[BANK0 ] long 
  2942 ;; Auto vars:     Size  Location     Type
  2943 ;;		None
  2944 ;; Return value:  Size  Location     Type
  2945 ;;                  4   16[BANK0 ] long 
  2946 ;; Registers used:
  2947 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2948 ;; Tracked objects:
  2949 ;;		On entry : 0/0
  2950 ;;		On exit  : 0/0
  2951 ;;		Unchanged: 0/0
  2952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2953 ;;      Params:         0       8       0       0       0
  2954 ;;      Locals:         0       0       0       0       0
  2955 ;;      Temps:          0       0       0       0       0
  2956 ;;      Totals:         0       8       0       0       0
  2957 ;;Total ram usage:        8 bytes
  2958 ;; Hardware stack levels used:    1
  2959 ;; Hardware stack levels required when called:    3
  2960 ;; This function calls:
  2961 ;;		___fladd
  2962 ;; This function is called by:
  2963 ;;		_analogToString
  2964 ;; This function uses a non-reentrant model
  2965 ;;
  2966                           
  2967                           
  2968                           ;psect for function ___flsub
  2969  0A86                     ___flsub:
  2970  0A86                     l2029:	
  2971                           ;incstack = 0
  2972                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2973                           
  2974  0A86  3080               	movlw	128
  2975  0A87  1283               	bcf	3,5	;RP0=0, select bank0
  2976  0A88  1303               	bcf	3,6	;RP1=0, select bank0
  2977  0A89  06B3               	xorwf	___flsub@a+3,f
  2978  0A8A                     l2031:
  2979  0A8A  0837               	movf	___flsub@b+3,w
  2980  0A8B  00A3               	movwf	___fladd@b+3
  2981  0A8C  0836               	movf	___flsub@b+2,w
  2982  0A8D  00A2               	movwf	___fladd@b+2
  2983  0A8E  0835               	movf	___flsub@b+1,w
  2984  0A8F  00A1               	movwf	___fladd@b+1
  2985  0A90  0834               	movf	___flsub@b,w
  2986  0A91  00A0               	movwf	___fladd@b
  2987  0A92  0833               	movf	___flsub@a+3,w
  2988  0A93  00A7               	movwf	___fladd@a+3
  2989  0A94  0832               	movf	___flsub@a+2,w
  2990  0A95  00A6               	movwf	___fladd@a+2
  2991  0A96  0831               	movf	___flsub@a+1,w
  2992  0A97  00A5               	movwf	___fladd@a+1
  2993  0A98  0830               	movf	___flsub@a,w
  2994  0A99  00A4               	movwf	___fladd@a
  2995  0A9A  120A  118A  2384  120A  158A  	fcall	___fladd
  2996  0A9F  1283               	bcf	3,5	;RP0=0, select bank0
  2997  0AA0  1303               	bcf	3,6	;RP1=0, select bank0
  2998  0AA1  0823               	movf	?___fladd+3,w
  2999  0AA2  00B3               	movwf	?___flsub+3
  3000  0AA3  0822               	movf	?___fladd+2,w
  3001  0AA4  00B2               	movwf	?___flsub+2
  3002  0AA5  0821               	movf	?___fladd+1,w
  3003  0AA6  00B1               	movwf	?___flsub+1
  3004  0AA7  0820               	movf	?___fladd,w
  3005  0AA8  00B0               	movwf	?___flsub
  3006  0AA9                     l614:
  3007  0AA9  0008               	return
  3008  0AAA                     __end_of___flsub:
  3009                           
  3010                           	psect	text11
  3011  0384                     __ptext11:	
  3012 ;; *************** function ___fladd *****************
  3013 ;; Defined at:
  3014 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  3015 ;; Parameters:    Size  Location     Type
  3016 ;;  b               4    0[BANK0 ] long 
  3017 ;;  a               4    4[BANK0 ] long 
  3018 ;; Auto vars:     Size  Location     Type
  3019 ;;  grs             1    8[COMMON] unsigned char 
  3020 ;;  bexp            1    7[COMMON] unsigned char 
  3021 ;;  aexp            1    6[COMMON] unsigned char 
  3022 ;;  signs           1    5[COMMON] unsigned char 
  3023 ;; Return value:  Size  Location     Type
  3024 ;;                  4    0[BANK0 ] unsigned char 
  3025 ;; Registers used:
  3026 ;;		wreg, status,2, status,0, btemp+1
  3027 ;; Tracked objects:
  3028 ;;		On entry : 0/0
  3029 ;;		On exit  : 0/0
  3030 ;;		Unchanged: 0/0
  3031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3032 ;;      Params:         0       8       0       0       0
  3033 ;;      Locals:         4       0       0       0       0
  3034 ;;      Temps:          0       8       0       0       0
  3035 ;;      Totals:         4      16       0       0       0
  3036 ;;Total ram usage:       20 bytes
  3037 ;; Hardware stack levels used:    1
  3038 ;; Hardware stack levels required when called:    2
  3039 ;; This function calls:
  3040 ;;		Nothing
  3041 ;; This function is called by:
  3042 ;;		___flsub
  3043 ;; This function uses a non-reentrant model
  3044 ;;
  3045                           
  3046                           
  3047                           ;psect for function ___fladd
  3048  0384                     ___fladd:
  3049  0384                     l1637:	
  3050                           ;incstack = 0
  3051                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  3052                           
  3053  0384  1283               	bcf	3,5	;RP0=0, select bank0
  3054  0385  1303               	bcf	3,6	;RP1=0, select bank0
  3055  0386  0823               	movf	___fladd@b+3,w
  3056  0387  3980               	andlw	128
  3057  0388  00A8               	movwf	??___fladd
  3058  0389  0828               	movf	??___fladd,w
  3059  038A  00F5               	movwf	___fladd@signs
  3060  038B                     l1639:
  3061  038B  0823               	movf	___fladd@b+3,w
  3062  038C  00A8               	movwf	??___fladd
  3063  038D  0728               	addwf	??___fladd,w
  3064  038E  00A9               	movwf	??___fladd+1
  3065  038F  0829               	movf	??___fladd+1,w
  3066  0390  00F7               	movwf	___fladd@bexp
  3067  0391                     l1641:
  3068  0391  1FA2               	btfss	___fladd@b+2,7
  3069  0392  2B94               	goto	u2061
  3070  0393  2B95               	goto	u2060
  3071  0394                     u2061:
  3072  0394  2B96               	goto	l1645
  3073  0395                     u2060:
  3074  0395                     l1643:
  3075  0395  1477               	bsf	___fladd@bexp,0
  3076  0396                     l1645:
  3077  0396  0877               	movf	___fladd@bexp,w
  3078  0397  1903               	btfsc	3,2
  3079  0398  2B9A               	goto	u2071
  3080  0399  2B9B               	goto	u2070
  3081  039A                     u2071:
  3082  039A  2BAB               	goto	l1655
  3083  039B                     u2070:
  3084  039B                     l1647:
  3085  039B  0A77               	incf	___fladd@bexp,w
  3086  039C  1D03               	btfss	3,2
  3087  039D  2B9F               	goto	u2081
  3088  039E  2BA0               	goto	u2080
  3089  039F                     u2081:
  3090  039F  2BA8               	goto	l1651
  3091  03A0                     u2080:
  3092  03A0                     l1649:
  3093  03A0  3000               	movlw	0
  3094  03A1  00A3               	movwf	___fladd@b+3
  3095  03A2  3000               	movlw	0
  3096  03A3  00A2               	movwf	___fladd@b+2
  3097  03A4  3000               	movlw	0
  3098  03A5  00A1               	movwf	___fladd@b+1
  3099  03A6  3000               	movlw	0
  3100  03A7  00A0               	movwf	___fladd@b
  3101  03A8                     l1651:
  3102  03A8  17A2               	bsf	___fladd@b+2,7
  3103  03A9                     l1653:
  3104  03A9  01A3               	clrf	___fladd@b+3
  3105  03AA  2BB3               	goto	l1657
  3106  03AB                     l1655:
  3107  03AB  3000               	movlw	0
  3108  03AC  00A3               	movwf	___fladd@b+3
  3109  03AD  3000               	movlw	0
  3110  03AE  00A2               	movwf	___fladd@b+2
  3111  03AF  3000               	movlw	0
  3112  03B0  00A1               	movwf	___fladd@b+1
  3113  03B1  3000               	movlw	0
  3114  03B2  00A0               	movwf	___fladd@b
  3115  03B3                     l1657:
  3116  03B3  0827               	movf	___fladd@a+3,w
  3117  03B4  3980               	andlw	128
  3118  03B5  00A8               	movwf	??___fladd
  3119  03B6  0828               	movf	??___fladd,w
  3120  03B7  00F6               	movwf	___fladd@aexp
  3121  03B8                     l1659:
  3122  03B8  0876               	movf	___fladd@aexp,w
  3123  03B9  0675               	xorwf	___fladd@signs,w
  3124  03BA  1903               	skipnz
  3125  03BB  2BBD               	goto	u2091
  3126  03BC  2BBE               	goto	u2090
  3127  03BD                     u2091:
  3128  03BD  2BBF               	goto	l1663
  3129  03BE                     u2090:
  3130  03BE                     l1661:
  3131  03BE  1775               	bsf	___fladd@signs,6
  3132  03BF                     l1663:
  3133  03BF  0827               	movf	___fladd@a+3,w
  3134  03C0  00A8               	movwf	??___fladd
  3135  03C1  0728               	addwf	??___fladd,w
  3136  03C2  00A9               	movwf	??___fladd+1
  3137  03C3  0829               	movf	??___fladd+1,w
  3138  03C4  00F6               	movwf	___fladd@aexp
  3139  03C5                     l1665:
  3140  03C5  1FA6               	btfss	___fladd@a+2,7
  3141  03C6  2BC8               	goto	u2101
  3142  03C7  2BC9               	goto	u2100
  3143  03C8                     u2101:
  3144  03C8  2BCA               	goto	l1669
  3145  03C9                     u2100:
  3146  03C9                     l1667:
  3147  03C9  1476               	bsf	___fladd@aexp,0
  3148  03CA                     l1669:
  3149  03CA  0876               	movf	___fladd@aexp,w
  3150  03CB  1903               	btfsc	3,2
  3151  03CC  2BCE               	goto	u2111
  3152  03CD  2BCF               	goto	u2110
  3153  03CE                     u2111:
  3154  03CE  2BDF               	goto	l1679
  3155  03CF                     u2110:
  3156  03CF                     l1671:
  3157  03CF  0A76               	incf	___fladd@aexp,w
  3158  03D0  1D03               	btfss	3,2
  3159  03D1  2BD3               	goto	u2121
  3160  03D2  2BD4               	goto	u2120
  3161  03D3                     u2121:
  3162  03D3  2BDC               	goto	l1675
  3163  03D4                     u2120:
  3164  03D4                     l1673:
  3165  03D4  3000               	movlw	0
  3166  03D5  00A7               	movwf	___fladd@a+3
  3167  03D6  3000               	movlw	0
  3168  03D7  00A6               	movwf	___fladd@a+2
  3169  03D8  3000               	movlw	0
  3170  03D9  00A5               	movwf	___fladd@a+1
  3171  03DA  3000               	movlw	0
  3172  03DB  00A4               	movwf	___fladd@a
  3173  03DC                     l1675:
  3174  03DC  17A6               	bsf	___fladd@a+2,7
  3175  03DD                     l1677:
  3176  03DD  01A7               	clrf	___fladd@a+3
  3177  03DE  2BE7               	goto	l568
  3178  03DF                     l1679:
  3179  03DF  3000               	movlw	0
  3180  03E0  00A7               	movwf	___fladd@a+3
  3181  03E1  3000               	movlw	0
  3182  03E2  00A6               	movwf	___fladd@a+2
  3183  03E3  3000               	movlw	0
  3184  03E4  00A5               	movwf	___fladd@a+1
  3185  03E5  3000               	movlw	0
  3186  03E6  00A4               	movwf	___fladd@a
  3187  03E7                     l568:
  3188  03E7  0877               	movf	___fladd@bexp,w
  3189  03E8  0276               	subwf	___fladd@aexp,w
  3190  03E9  1803               	skipnc
  3191  03EA  2BEC               	goto	u2131
  3192  03EB  2BED               	goto	u2130
  3193  03EC                     u2131:
  3194  03EC  2C31               	goto	l1715
  3195  03ED                     u2130:
  3196  03ED                     l1681:
  3197  03ED  1F75               	btfss	___fladd@signs,6
  3198  03EE  2BF0               	goto	u2141
  3199  03EF  2BF1               	goto	u2140
  3200  03F0                     u2141:
  3201  03F0  2BF5               	goto	l1685
  3202  03F1                     u2140:
  3203  03F1                     l1683:
  3204  03F1  3080               	movlw	128
  3205  03F2  00A8               	movwf	??___fladd
  3206  03F3  0828               	movf	??___fladd,w
  3207  03F4  06F5               	xorwf	___fladd@signs,f
  3208  03F5                     l1685:
  3209  03F5  0877               	movf	___fladd@bexp,w
  3210  03F6  00A8               	movwf	??___fladd
  3211  03F7  0828               	movf	??___fladd,w
  3212  03F8  00F8               	movwf	___fladd@grs
  3213  03F9                     l1687:
  3214  03F9  0876               	movf	___fladd@aexp,w
  3215  03FA  00A8               	movwf	??___fladd
  3216  03FB  0828               	movf	??___fladd,w
  3217  03FC  00F7               	movwf	___fladd@bexp
  3218  03FD                     l1689:
  3219  03FD  0878               	movf	___fladd@grs,w
  3220  03FE  00A8               	movwf	??___fladd
  3221  03FF  0828               	movf	??___fladd,w
  3222  0400  00F6               	movwf	___fladd@aexp
  3223  0401                     l1691:
  3224  0401  0820               	movf	___fladd@b,w
  3225  0402  00A8               	movwf	??___fladd
  3226  0403  0828               	movf	??___fladd,w
  3227  0404  00F8               	movwf	___fladd@grs
  3228  0405                     l1693:
  3229  0405  0824               	movf	___fladd@a,w
  3230  0406  00A8               	movwf	??___fladd
  3231  0407  0828               	movf	??___fladd,w
  3232  0408  00A0               	movwf	___fladd@b
  3233  0409                     l1695:
  3234  0409  0878               	movf	___fladd@grs,w
  3235  040A  00A8               	movwf	??___fladd
  3236  040B  0828               	movf	??___fladd,w
  3237  040C  00A4               	movwf	___fladd@a
  3238  040D                     l1697:
  3239  040D  0821               	movf	___fladd@b+1,w
  3240  040E  00A8               	movwf	??___fladd
  3241  040F  0828               	movf	??___fladd,w
  3242  0410  00F8               	movwf	___fladd@grs
  3243  0411                     l1699:
  3244  0411  0825               	movf	___fladd@a+1,w
  3245  0412  00A8               	movwf	??___fladd
  3246  0413  0828               	movf	??___fladd,w
  3247  0414  00A1               	movwf	___fladd@b+1
  3248  0415                     l1701:
  3249  0415  0878               	movf	___fladd@grs,w
  3250  0416  00A8               	movwf	??___fladd
  3251  0417  0828               	movf	??___fladd,w
  3252  0418  00A5               	movwf	___fladd@a+1
  3253  0419                     l1703:
  3254  0419  0822               	movf	___fladd@b+2,w
  3255  041A  00A8               	movwf	??___fladd
  3256  041B  0828               	movf	??___fladd,w
  3257  041C  00F8               	movwf	___fladd@grs
  3258  041D                     l1705:
  3259  041D  0826               	movf	___fladd@a+2,w
  3260  041E  00A8               	movwf	??___fladd
  3261  041F  0828               	movf	??___fladd,w
  3262  0420  00A2               	movwf	___fladd@b+2
  3263  0421                     l1707:
  3264  0421  0878               	movf	___fladd@grs,w
  3265  0422  00A8               	movwf	??___fladd
  3266  0423  0828               	movf	??___fladd,w
  3267  0424  00A6               	movwf	___fladd@a+2
  3268  0425                     l1709:
  3269  0425  0823               	movf	___fladd@b+3,w
  3270  0426  00A8               	movwf	??___fladd
  3271  0427  0828               	movf	??___fladd,w
  3272  0428  00F8               	movwf	___fladd@grs
  3273  0429                     l1711:
  3274  0429  0827               	movf	___fladd@a+3,w
  3275  042A  00A8               	movwf	??___fladd
  3276  042B  0828               	movf	??___fladd,w
  3277  042C  00A3               	movwf	___fladd@b+3
  3278  042D                     l1713:
  3279  042D  0878               	movf	___fladd@grs,w
  3280  042E  00A8               	movwf	??___fladd
  3281  042F  0828               	movf	??___fladd,w
  3282  0430  00A7               	movwf	___fladd@a+3
  3283  0431                     l1715:
  3284  0431  01F8               	clrf	___fladd@grs
  3285  0432                     l1717:
  3286  0432  0876               	movf	___fladd@aexp,w
  3287  0433  00A8               	movwf	??___fladd
  3288  0434  01A9               	clrf	??___fladd+1
  3289  0435  0829               	movf	??___fladd+1,w
  3290  0436  00AB               	movwf	??___fladd+3
  3291  0437  0877               	movf	___fladd@bexp,w
  3292  0438  0228               	subwf	??___fladd,w
  3293  0439  00AA               	movwf	??___fladd+2
  3294  043A  1C03               	skipc
  3295  043B  03AB               	decf	??___fladd+3,f
  3296  043C  082B               	movf	??___fladd+3,w
  3297  043D  3A80               	xorlw	128
  3298  043E  00FF               	movwf	btemp+1
  3299  043F  3080               	movlw	128
  3300  0440  027F               	subwf	btemp+1,w
  3301  0441  1D03               	skipz
  3302  0442  2C45               	goto	u2155
  3303  0443  301A               	movlw	26
  3304  0444  022A               	subwf	??___fladd+2,w
  3305  0445                     u2155:
  3306  0445  1C03               	skipc
  3307  0446  2C48               	goto	u2151
  3308  0447  2C49               	goto	u2150
  3309  0448                     u2151:
  3310  0448  2C8A               	goto	l1733
  3311  0449                     u2150:
  3312  0449                     l1719:
  3313  0449  1283               	bcf	3,5	;RP0=0, select bank0
  3314  044A  1303               	bcf	3,6	;RP1=0, select bank0
  3315  044B  0823               	movf	___fladd@b+3,w
  3316  044C  0422               	iorwf	___fladd@b+2,w
  3317  044D  0421               	iorwf	___fladd@b+1,w
  3318  044E  0420               	iorwf	___fladd@b,w
  3319  044F  1D03               	skipz
  3320  0450  2C52               	goto	u2161
  3321  0451  2C54               	goto	u2160
  3322  0452                     u2161:
  3323  0452  3001               	movlw	1
  3324  0453  2C55               	goto	u2170
  3325  0454                     u2160:
  3326  0454  3000               	movlw	0
  3327  0455                     u2170:
  3328  0455  00A8               	movwf	??___fladd
  3329  0456  0828               	movf	??___fladd,w
  3330  0457  00F8               	movwf	___fladd@grs
  3331  0458  3000               	movlw	0
  3332  0459  00A3               	movwf	___fladd@b+3
  3333  045A  3000               	movlw	0
  3334  045B  00A2               	movwf	___fladd@b+2
  3335  045C  3000               	movlw	0
  3336  045D  00A1               	movwf	___fladd@b+1
  3337  045E  3000               	movlw	0
  3338  045F  00A0               	movwf	___fladd@b
  3339  0460  0876               	movf	___fladd@aexp,w
  3340  0461  00A8               	movwf	??___fladd
  3341  0462  0828               	movf	??___fladd,w
  3342  0463  00F7               	movwf	___fladd@bexp
  3343  0464  2C90               	goto	l572
  3344  0465                     l574:
  3345  0465  1C78               	btfss	___fladd@grs,0
  3346  0466  2C68               	goto	u2181
  3347  0467  2C69               	goto	u2180
  3348  0468                     u2181:
  3349  0468  2C74               	goto	l1723
  3350  0469                     u2180:
  3351  0469                     l1721:
  3352  0469  0878               	movf	___fladd@grs,w
  3353  046A  1283               	bcf	3,5	;RP0=0, select bank0
  3354  046B  1303               	bcf	3,6	;RP1=0, select bank0
  3355  046C  00A8               	movwf	??___fladd
  3356  046D  1003               	clrc
  3357  046E  0C28               	rrf	??___fladd,w
  3358  046F  3801               	iorlw	1
  3359  0470  00A9               	movwf	??___fladd+1
  3360  0471  0829               	movf	??___fladd+1,w
  3361  0472  00F8               	movwf	___fladd@grs
  3362  0473  2C76               	goto	l1725
  3363  0474                     l1723:
  3364  0474  1003               	clrc
  3365  0475  0CF8               	rrf	___fladd@grs,f
  3366  0476                     l1725:
  3367  0476  1283               	bcf	3,5	;RP0=0, select bank0
  3368  0477  1303               	bcf	3,6	;RP1=0, select bank0
  3369  0478  1C20               	btfss	___fladd@b,0
  3370  0479  2C7B               	goto	u2191
  3371  047A  2C7C               	goto	u2190
  3372  047B                     u2191:
  3373  047B  2C7D               	goto	l1729
  3374  047C                     u2190:
  3375  047C                     l1727:
  3376  047C  17F8               	bsf	___fladd@grs,7
  3377  047D                     l1729:
  3378  047D  3001               	movlw	1
  3379  047E  00A8               	movwf	??___fladd
  3380  047F                     u2205:
  3381  047F  0D23               	rlf	___fladd@b+3,w
  3382  0480  0CA3               	rrf	___fladd@b+3,f
  3383  0481  0CA2               	rrf	___fladd@b+2,f
  3384  0482  0CA1               	rrf	___fladd@b+1,f
  3385  0483  0CA0               	rrf	___fladd@b,f
  3386  0484  0BA8               	decfsz	??___fladd& (0+127),f
  3387  0485  2C7F               	goto	u2205
  3388  0486                     l1731:
  3389  0486  3001               	movlw	1
  3390  0487  00A8               	movwf	??___fladd
  3391  0488  0828               	movf	??___fladd,w
  3392  0489  07F7               	addwf	___fladd@bexp,f
  3393  048A                     l1733:
  3394  048A  0876               	movf	___fladd@aexp,w
  3395  048B  0277               	subwf	___fladd@bexp,w
  3396  048C  1C03               	skipc
  3397  048D  2C8F               	goto	u2211
  3398  048E  2C90               	goto	u2210
  3399  048F                     u2211:
  3400  048F  2C65               	goto	l574
  3401  0490                     u2210:
  3402  0490                     l572:
  3403  0490  1B75               	btfsc	___fladd@signs,6
  3404  0491  2C93               	goto	u2221
  3405  0492  2C94               	goto	u2220
  3406  0493                     u2221:
  3407  0493  2CE3               	goto	l1759
  3408  0494                     u2220:
  3409  0494                     l1735:
  3410  0494  0877               	movf	___fladd@bexp,w
  3411  0495  1D03               	btfss	3,2
  3412  0496  2C98               	goto	u2231
  3413  0497  2C99               	goto	u2230
  3414  0498                     u2231:
  3415  0498  2CA4               	goto	l1741
  3416  0499                     u2230:
  3417  0499                     l1737:
  3418  0499  3000               	movlw	0
  3419  049A  1283               	bcf	3,5	;RP0=0, select bank0
  3420  049B  1303               	bcf	3,6	;RP1=0, select bank0
  3421  049C  00A3               	movwf	?___fladd+3
  3422  049D  3000               	movlw	0
  3423  049E  00A2               	movwf	?___fladd+2
  3424  049F  3000               	movlw	0
  3425  04A0  00A1               	movwf	?___fladd+1
  3426  04A1  3000               	movlw	0
  3427  04A2  00A0               	movwf	?___fladd
  3428  04A3  2E13               	goto	l581
  3429  04A4                     l1741:
  3430  04A4  1283               	bcf	3,5	;RP0=0, select bank0
  3431  04A5  1303               	bcf	3,6	;RP1=0, select bank0
  3432  04A6  0824               	movf	___fladd@a,w
  3433  04A7  07A0               	addwf	___fladd@b,f
  3434  04A8  0825               	movf	___fladd@a+1,w
  3435  04A9  1103               	clrz
  3436  04AA  1803               	skipnc
  3437  04AB  3E01               	addlw	1
  3438  04AC  1903               	skipnz
  3439  04AD  2CAF               	goto	u2241
  3440  04AE  07A1               	addwf	___fladd@b+1,f
  3441  04AF                     u2241:
  3442  04AF  0826               	movf	___fladd@a+2,w
  3443  04B0  1103               	clrz
  3444  04B1  1803               	skipnc
  3445  04B2  3E01               	addlw	1
  3446  04B3  1903               	skipnz
  3447  04B4  2CB6               	goto	u2242
  3448  04B5  07A2               	addwf	___fladd@b+2,f
  3449  04B6                     u2242:
  3450  04B6  0827               	movf	___fladd@a+3,w
  3451  04B7  1103               	clrz
  3452  04B8  1803               	skipnc
  3453  04B9  3E01               	addlw	1
  3454  04BA  1903               	skipnz
  3455  04BB  2CBD               	goto	u2243
  3456  04BC  07A3               	addwf	___fladd@b+3,f
  3457  04BD                     u2243:
  3458  04BD                     l1743:
  3459  04BD  1C23               	btfss	___fladd@b+3,0
  3460  04BE  2CC0               	goto	u2251
  3461  04BF  2CC1               	goto	u2250
  3462  04C0                     u2251:
  3463  04C0  2D99               	goto	l1793
  3464  04C1                     u2250:
  3465  04C1                     l1745:
  3466  04C1  1C78               	btfss	___fladd@grs,0
  3467  04C2  2CC4               	goto	u2261
  3468  04C3  2CC5               	goto	u2260
  3469  04C4                     u2261:
  3470  04C4  2CCE               	goto	l1749
  3471  04C5                     u2260:
  3472  04C5                     l1747:
  3473  04C5  0878               	movf	___fladd@grs,w
  3474  04C6  00A8               	movwf	??___fladd
  3475  04C7  1003               	clrc
  3476  04C8  0C28               	rrf	??___fladd,w
  3477  04C9  3801               	iorlw	1
  3478  04CA  00A9               	movwf	??___fladd+1
  3479  04CB  0829               	movf	??___fladd+1,w
  3480  04CC  00F8               	movwf	___fladd@grs
  3481  04CD  2CD0               	goto	l1751
  3482  04CE                     l1749:
  3483  04CE  1003               	clrc
  3484  04CF  0CF8               	rrf	___fladd@grs,f
  3485  04D0                     l1751:
  3486  04D0  1C20               	btfss	___fladd@b,0
  3487  04D1  2CD3               	goto	u2271
  3488  04D2  2CD4               	goto	u2270
  3489  04D3                     u2271:
  3490  04D3  2CD5               	goto	l1755
  3491  04D4                     u2270:
  3492  04D4                     l1753:
  3493  04D4  17F8               	bsf	___fladd@grs,7
  3494  04D5                     l1755:
  3495  04D5  3001               	movlw	1
  3496  04D6  00A8               	movwf	??___fladd
  3497  04D7                     u2285:
  3498  04D7  0D23               	rlf	___fladd@b+3,w
  3499  04D8  0CA3               	rrf	___fladd@b+3,f
  3500  04D9  0CA2               	rrf	___fladd@b+2,f
  3501  04DA  0CA1               	rrf	___fladd@b+1,f
  3502  04DB  0CA0               	rrf	___fladd@b,f
  3503  04DC  0BA8               	decfsz	??___fladd& (0+127),f
  3504  04DD  2CD7               	goto	u2285
  3505  04DE                     l1757:
  3506  04DE  3001               	movlw	1
  3507  04DF  00A8               	movwf	??___fladd
  3508  04E0  0828               	movf	??___fladd,w
  3509  04E1  07F7               	addwf	___fladd@bexp,f
  3510  04E2  2D99               	goto	l1793
  3511  04E3                     l1759:
  3512  04E3  1283               	bcf	3,5	;RP0=0, select bank0
  3513  04E4  1303               	bcf	3,6	;RP1=0, select bank0
  3514  04E5  0823               	movf	___fladd@b+3,w
  3515  04E6  3A80               	xorlw	128
  3516  04E7  00FF               	movwf	btemp+1
  3517  04E8  0827               	movf	___fladd@a+3,w
  3518  04E9  3A80               	xorlw	128
  3519  04EA  027F               	subwf	btemp+1,w
  3520  04EB  1D03               	skipz
  3521  04EC  2CF7               	goto	u2293
  3522  04ED  0826               	movf	___fladd@a+2,w
  3523  04EE  0222               	subwf	___fladd@b+2,w
  3524  04EF  1D03               	skipz
  3525  04F0  2CF7               	goto	u2293
  3526  04F1  0825               	movf	___fladd@a+1,w
  3527  04F2  0221               	subwf	___fladd@b+1,w
  3528  04F3  1D03               	skipz
  3529  04F4  2CF7               	goto	u2293
  3530  04F5  0824               	movf	___fladd@a,w
  3531  04F6  0220               	subwf	___fladd@b,w
  3532  04F7                     u2293:
  3533  04F7  1803               	skipnc
  3534  04F8  2CFA               	goto	u2291
  3535  04F9  2CFB               	goto	u2290
  3536  04FA                     u2291:
  3537  04FA  2D53               	goto	l1769
  3538  04FB                     u2290:
  3539  04FB                     l1761:
  3540  04FB  30FF               	movlw	255
  3541  04FC  00A8               	movwf	??___fladd
  3542  04FD  30FF               	movlw	255
  3543  04FE  00A9               	movwf	??___fladd+1
  3544  04FF  30FF               	movlw	255
  3545  0500  00AA               	movwf	??___fladd+2
  3546  0501  30FF               	movlw	255
  3547  0502  00AB               	movwf	??___fladd+3
  3548  0503  0824               	movf	___fladd@a,w
  3549  0504  00AC               	movwf	??___fladd+4
  3550  0505  0825               	movf	___fladd@a+1,w
  3551  0506  00AD               	movwf	??___fladd+5
  3552  0507  0826               	movf	___fladd@a+2,w
  3553  0508  00AE               	movwf	??___fladd+6
  3554  0509  0827               	movf	___fladd@a+3,w
  3555  050A  00AF               	movwf	??___fladd+7
  3556  050B  0820               	movf	___fladd@b,w
  3557  050C  02AC               	subwf	??___fladd+4,f
  3558  050D  0821               	movf	___fladd@b+1,w
  3559  050E  1C03               	skipc
  3560  050F  0F21               	incfsz	___fladd@b+1,w
  3561  0510  2D12               	goto	u2301
  3562  0511  2D13               	goto	u2302
  3563  0512                     u2301:
  3564  0512  02AD               	subwf	??___fladd+5,f
  3565  0513                     u2302:
  3566  0513  0822               	movf	___fladd@b+2,w
  3567  0514  1C03               	skipc
  3568  0515  0F22               	incfsz	___fladd@b+2,w
  3569  0516  2D18               	goto	u2303
  3570  0517  2D19               	goto	u2304
  3571  0518                     u2303:
  3572  0518  02AE               	subwf	??___fladd+6,f
  3573  0519                     u2304:
  3574  0519  0823               	movf	___fladd@b+3,w
  3575  051A  1C03               	skipc
  3576  051B  0F23               	incfsz	___fladd@b+3,w
  3577  051C  2D1E               	goto	u2305
  3578  051D  2D1F               	goto	u2306
  3579  051E                     u2305:
  3580  051E  02AF               	subwf	??___fladd+7,f
  3581  051F                     u2306:
  3582  051F  082C               	movf	??___fladd+4,w
  3583  0520  07A8               	addwf	??___fladd,f
  3584  0521  082D               	movf	??___fladd+5,w
  3585  0522  1803               	skipnc
  3586  0523  0F2D               	incfsz	??___fladd+5,w
  3587  0524  2D26               	goto	u2310
  3588  0525  2D27               	goto	u2311
  3589  0526                     u2310:
  3590  0526  07A9               	addwf	??___fladd+1,f
  3591  0527                     u2311:
  3592  0527  082E               	movf	??___fladd+6,w
  3593  0528  1803               	skipnc
  3594  0529  0F2E               	incfsz	??___fladd+6,w
  3595  052A  2D2C               	goto	u2312
  3596  052B  2D2D               	goto	u2313
  3597  052C                     u2312:
  3598  052C  07AA               	addwf	??___fladd+2,f
  3599  052D                     u2313:
  3600  052D  082F               	movf	??___fladd+7,w
  3601  052E  1803               	skipnc
  3602  052F  0A2F               	incf	??___fladd+7,w
  3603  0530  07AB               	addwf	??___fladd+3,f
  3604  0531  082B               	movf	??___fladd+3,w
  3605  0532  00A3               	movwf	___fladd@b+3
  3606  0533  082A               	movf	??___fladd+2,w
  3607  0534  00A2               	movwf	___fladd@b+2
  3608  0535  0829               	movf	??___fladd+1,w
  3609  0536  00A1               	movwf	___fladd@b+1
  3610  0537  0828               	movf	??___fladd,w
  3611  0538  00A0               	movwf	___fladd@b
  3612  0539                     l1763:
  3613  0539  3080               	movlw	128
  3614  053A  00A8               	movwf	??___fladd
  3615  053B  0828               	movf	??___fladd,w
  3616  053C  06F5               	xorwf	___fladd@signs,f
  3617  053D  09F8               	comf	___fladd@grs,f
  3618  053E  0AF8               	incf	___fladd@grs,f
  3619  053F                     l1765:
  3620  053F  0878               	movf	___fladd@grs,w
  3621  0540  1D03               	btfss	3,2
  3622  0541  2D43               	goto	u2321
  3623  0542  2D44               	goto	u2320
  3624  0543                     u2321:
  3625  0543  2D61               	goto	l589
  3626  0544                     u2320:
  3627  0544                     l1767:
  3628  0544  3001               	movlw	1
  3629  0545  07A0               	addwf	___fladd@b,f
  3630  0546  3000               	movlw	0
  3631  0547  1803               	skipnc
  3632  0548  3001               	movlw	1
  3633  0549  07A1               	addwf	___fladd@b+1,f
  3634  054A  3000               	movlw	0
  3635  054B  1803               	skipnc
  3636  054C  3001               	movlw	1
  3637  054D  07A2               	addwf	___fladd@b+2,f
  3638  054E  3000               	movlw	0
  3639  054F  1803               	skipnc
  3640  0550  3001               	movlw	1
  3641  0551  07A3               	addwf	___fladd@b+3,f
  3642  0552  2D61               	goto	l589
  3643  0553                     l1769:
  3644  0553  0824               	movf	___fladd@a,w
  3645  0554  02A0               	subwf	___fladd@b,f
  3646  0555  0825               	movf	___fladd@a+1,w
  3647  0556  1C03               	skipc
  3648  0557  0F25               	incfsz	___fladd@a+1,w
  3649  0558  02A1               	subwf	___fladd@b+1,f
  3650  0559  0826               	movf	___fladd@a+2,w
  3651  055A  1C03               	skipc
  3652  055B  0F26               	incfsz	___fladd@a+2,w
  3653  055C  02A2               	subwf	___fladd@b+2,f
  3654  055D  0827               	movf	___fladd@a+3,w
  3655  055E  1C03               	skipc
  3656  055F  0F27               	incfsz	___fladd@a+3,w
  3657  0560  02A3               	subwf	___fladd@b+3,f
  3658  0561                     l589:
  3659  0561  0823               	movf	___fladd@b+3,w
  3660  0562  0422               	iorwf	___fladd@b+2,w
  3661  0563  0421               	iorwf	___fladd@b+1,w
  3662  0564  0420               	iorwf	___fladd@b,w
  3663  0565  1D03               	skipz
  3664  0566  2D68               	goto	u2331
  3665  0567  2D69               	goto	u2330
  3666  0568                     u2331:
  3667  0568  2D95               	goto	l1791
  3668  0569                     u2330:
  3669  0569                     l1771:
  3670  0569  0878               	movf	___fladd@grs,w
  3671  056A  1D03               	btfss	3,2
  3672  056B  2D6D               	goto	u2341
  3673  056C  2D6E               	goto	u2340
  3674  056D                     u2341:
  3675  056D  2D95               	goto	l1791
  3676  056E                     u2340:
  3677  056E                     l1773:
  3678  056E  3000               	movlw	0
  3679  056F  00A3               	movwf	?___fladd+3
  3680  0570  3000               	movlw	0
  3681  0571  00A2               	movwf	?___fladd+2
  3682  0572  3000               	movlw	0
  3683  0573  00A1               	movwf	?___fladd+1
  3684  0574  3000               	movlw	0
  3685  0575  00A0               	movwf	?___fladd
  3686  0576  2E13               	goto	l581
  3687  0577                     l1777:
  3688  0577  3001               	movlw	1
  3689  0578  00A8               	movwf	??___fladd
  3690  0579                     u2355:
  3691  0579  1003               	clrc
  3692  057A  0DA0               	rlf	___fladd@b,f
  3693  057B  0DA1               	rlf	___fladd@b+1,f
  3694  057C  0DA2               	rlf	___fladd@b+2,f
  3695  057D  0DA3               	rlf	___fladd@b+3,f
  3696  057E  0BA8               	decfsz	??___fladd,f
  3697  057F  2D79               	goto	u2355
  3698  0580                     l1779:
  3699  0580  1FF8               	btfss	___fladd@grs,7
  3700  0581  2D83               	goto	u2361
  3701  0582  2D84               	goto	u2360
  3702  0583                     u2361:
  3703  0583  2D85               	goto	l593
  3704  0584                     u2360:
  3705  0584                     l1781:
  3706  0584  1420               	bsf	___fladd@b,0
  3707  0585                     l593:
  3708  0585  1C78               	btfss	___fladd@grs,0
  3709  0586  2D88               	goto	u2371
  3710  0587  2D89               	goto	u2370
  3711  0588                     u2371:
  3712  0588  2D8C               	goto	l1785
  3713  0589                     u2370:
  3714  0589                     l1783:
  3715  0589  1403               	setc
  3716  058A  0DF8               	rlf	___fladd@grs,f
  3717  058B  2D8E               	goto	l1787
  3718  058C                     l1785:
  3719  058C  1003               	clrc
  3720  058D  0DF8               	rlf	___fladd@grs,f
  3721  058E                     l1787:
  3722  058E  0877               	movf	___fladd@bexp,w
  3723  058F  1903               	btfsc	3,2
  3724  0590  2D92               	goto	u2381
  3725  0591  2D93               	goto	u2380
  3726  0592                     u2381:
  3727  0592  2D95               	goto	l1791
  3728  0593                     u2380:
  3729  0593                     l1789:
  3730  0593  3001               	movlw	1
  3731  0594  02F7               	subwf	___fladd@bexp,f
  3732  0595                     l1791:
  3733  0595  1FA2               	btfss	___fladd@b+2,7
  3734  0596  2D98               	goto	u2391
  3735  0597  2D99               	goto	u2390
  3736  0598                     u2391:
  3737  0598  2D77               	goto	l1777
  3738  0599                     u2390:
  3739  0599                     l1793:
  3740  0599  01F6               	clrf	___fladd@aexp
  3741  059A                     l1795:
  3742  059A  1FF8               	btfss	___fladd@grs,7
  3743  059B  2D9D               	goto	u2401
  3744  059C  2D9E               	goto	u2400
  3745  059D                     u2401:
  3746  059D  2DAC               	goto	l1803
  3747  059E                     u2400:
  3748  059E                     l1797:
  3749  059E  0878               	movf	___fladd@grs,w
  3750  059F  397F               	andlw	127
  3751  05A0  1903               	btfsc	3,2
  3752  05A1  2DA3               	goto	u2411
  3753  05A2  2DA4               	goto	u2410
  3754  05A3                     u2411:
  3755  05A3  2DA7               	goto	l599
  3756  05A4                     u2410:
  3757  05A4                     l1799:
  3758  05A4  01F6               	clrf	___fladd@aexp
  3759  05A5  0AF6               	incf	___fladd@aexp,f
  3760  05A6  2DAC               	goto	l1803
  3761  05A7                     l599:
  3762  05A7  1C20               	btfss	___fladd@b,0
  3763  05A8  2DAA               	goto	u2421
  3764  05A9  2DAB               	goto	u2420
  3765  05AA                     u2421:
  3766  05AA  2DAC               	goto	l1803
  3767  05AB                     u2420:
  3768  05AB  2DA4               	goto	l1799
  3769  05AC                     l1803:
  3770  05AC  0876               	movf	___fladd@aexp,w
  3771  05AD  1903               	btfsc	3,2
  3772  05AE  2DB0               	goto	u2431
  3773  05AF  2DB1               	goto	u2430
  3774  05B0                     u2431:
  3775  05B0  2DE5               	goto	l602
  3776  05B1                     u2430:
  3777  05B1                     l1805:
  3778  05B1  3001               	movlw	1
  3779  05B2  07A0               	addwf	___fladd@b,f
  3780  05B3  3000               	movlw	0
  3781  05B4  1803               	skipnc
  3782  05B5  3001               	movlw	1
  3783  05B6  07A1               	addwf	___fladd@b+1,f
  3784  05B7  3000               	movlw	0
  3785  05B8  1803               	skipnc
  3786  05B9  3001               	movlw	1
  3787  05BA  07A2               	addwf	___fladd@b+2,f
  3788  05BB  3000               	movlw	0
  3789  05BC  1803               	skipnc
  3790  05BD  3001               	movlw	1
  3791  05BE  07A3               	addwf	___fladd@b+3,f
  3792  05BF                     l1807:
  3793  05BF  1C23               	btfss	___fladd@b+3,0
  3794  05C0  2DC2               	goto	u2441
  3795  05C1  2DC3               	goto	u2440
  3796  05C2                     u2441:
  3797  05C2  2DE5               	goto	l602
  3798  05C3                     u2440:
  3799  05C3                     l1809:
  3800  05C3  0820               	movf	___fladd@b,w
  3801  05C4  00A8               	movwf	??___fladd
  3802  05C5  0821               	movf	___fladd@b+1,w
  3803  05C6  00A9               	movwf	??___fladd+1
  3804  05C7  0822               	movf	___fladd@b+2,w
  3805  05C8  00AA               	movwf	??___fladd+2
  3806  05C9  0823               	movf	___fladd@b+3,w
  3807  05CA  00AB               	movwf	??___fladd+3
  3808  05CB  3001               	movlw	1
  3809  05CC  00AC               	movwf	??___fladd+4
  3810  05CD                     u2455:
  3811  05CD  0D2B               	rlf	??___fladd+3,w
  3812  05CE  0CAB               	rrf	??___fladd+3,f
  3813  05CF  0CAA               	rrf	??___fladd+2,f
  3814  05D0  0CA9               	rrf	??___fladd+1,f
  3815  05D1  0CA8               	rrf	??___fladd,f
  3816  05D2                     u2450:
  3817  05D2  0BAC               	decfsz	??___fladd+4,f
  3818  05D3  2DCD               	goto	u2455
  3819  05D4  082B               	movf	??___fladd+3,w
  3820  05D5  00A3               	movwf	___fladd@b+3
  3821  05D6  082A               	movf	??___fladd+2,w
  3822  05D7  00A2               	movwf	___fladd@b+2
  3823  05D8  0829               	movf	??___fladd+1,w
  3824  05D9  00A1               	movwf	___fladd@b+1
  3825  05DA  0828               	movf	??___fladd,w
  3826  05DB  00A0               	movwf	___fladd@b
  3827  05DC  0A77               	incf	___fladd@bexp,w
  3828  05DD  1903               	btfsc	3,2
  3829  05DE  2DE0               	goto	u2461
  3830  05DF  2DE1               	goto	u2460
  3831  05E0                     u2461:
  3832  05E0  2DE5               	goto	l602
  3833  05E1                     u2460:
  3834  05E1                     l1811:
  3835  05E1  3001               	movlw	1
  3836  05E2  00A8               	movwf	??___fladd
  3837  05E3  0828               	movf	??___fladd,w
  3838  05E4  07F7               	addwf	___fladd@bexp,f
  3839  05E5                     l602:
  3840  05E5  0A77               	incf	___fladd@bexp,w
  3841  05E6  1903               	btfsc	3,2
  3842  05E7  2DE9               	goto	u2471
  3843  05E8  2DEA               	goto	u2470
  3844  05E9                     u2471:
  3845  05E9  2DEF               	goto	l1815
  3846  05EA                     u2470:
  3847  05EA                     l1813:
  3848  05EA  0877               	movf	___fladd@bexp,w
  3849  05EB  1D03               	btfss	3,2
  3850  05EC  2DEE               	goto	u2481
  3851  05ED  2DEF               	goto	u2480
  3852  05EE                     u2481:
  3853  05EE  2DFD               	goto	l1821
  3854  05EF                     u2480:
  3855  05EF                     l1815:
  3856  05EF  3000               	movlw	0
  3857  05F0  00A3               	movwf	___fladd@b+3
  3858  05F1  3000               	movlw	0
  3859  05F2  00A2               	movwf	___fladd@b+2
  3860  05F3  3000               	movlw	0
  3861  05F4  00A1               	movwf	___fladd@b+1
  3862  05F5  3000               	movlw	0
  3863  05F6  00A0               	movwf	___fladd@b
  3864  05F7                     l1817:
  3865  05F7  0877               	movf	___fladd@bexp,w
  3866  05F8  1D03               	btfss	3,2
  3867  05F9  2DFB               	goto	u2491
  3868  05FA  2DFC               	goto	u2490
  3869  05FB                     u2491:
  3870  05FB  2DFD               	goto	l1821
  3871  05FC                     u2490:
  3872  05FC                     l1819:
  3873  05FC  01F5               	clrf	___fladd@signs
  3874  05FD                     l1821:
  3875  05FD  1C77               	btfss	___fladd@bexp,0
  3876  05FE  2E00               	goto	u2501
  3877  05FF  2E01               	goto	u2500
  3878  0600                     u2501:
  3879  0600  2E03               	goto	l1825
  3880  0601                     u2500:
  3881  0601                     l1823:
  3882  0601  17A2               	bsf	___fladd@b+2,7
  3883  0602  2E07               	goto	l610
  3884  0603                     l1825:
  3885  0603  307F               	movlw	127
  3886  0604  00A8               	movwf	??___fladd
  3887  0605  0828               	movf	??___fladd,w
  3888  0606  05A2               	andwf	___fladd@b+2,f
  3889  0607                     l610:
  3890  0607  0877               	movf	___fladd@bexp,w
  3891  0608  00A8               	movwf	??___fladd
  3892  0609  1003               	clrc
  3893  060A  0C28               	rrf	??___fladd,w
  3894  060B  00A9               	movwf	??___fladd+1
  3895  060C  0829               	movf	??___fladd+1,w
  3896  060D  00A3               	movwf	___fladd@b+3
  3897  060E                     l1827:
  3898  060E  1FF5               	btfss	___fladd@signs,7
  3899  060F  2E11               	goto	u2511
  3900  0610  2E12               	goto	u2510
  3901  0611                     u2511:
  3902  0611  2E13               	goto	l611
  3903  0612                     u2510:
  3904  0612                     l1829:
  3905  0612  17A3               	bsf	___fladd@b+3,7
  3906  0613                     l611:
  3907  0613                     l581:
  3908  0613  0008               	return
  3909  0614                     __end_of___fladd:
  3910                           
  3911                           	psect	text12
  3912  0023                     __ptext12:	
  3913 ;; *************** function ___flmul *****************
  3914 ;; Defined at:
  3915 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  3916 ;; Parameters:    Size  Location     Type
  3917 ;;  b               4   10[BANK0 ] unsigned char 
  3918 ;;  a               4   14[BANK0 ] unsigned char 
  3919 ;; Auto vars:     Size  Location     Type
  3920 ;;  prod            4   30[BANK0 ] struct .
  3921 ;;  grs             4   24[BANK0 ] unsigned long 
  3922 ;;  temp            2   34[BANK0 ] struct .
  3923 ;;  bexp            1   29[BANK0 ] unsigned char 
  3924 ;;  aexp            1   28[BANK0 ] unsigned char 
  3925 ;;  sign            1   23[BANK0 ] unsigned char 
  3926 ;; Return value:  Size  Location     Type
  3927 ;;                  4   10[BANK0 ] unsigned char 
  3928 ;; Registers used:
  3929 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3930 ;; Tracked objects:
  3931 ;;		On entry : 0/0
  3932 ;;		On exit  : 0/0
  3933 ;;		Unchanged: 0/0
  3934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3935 ;;      Params:         0       8       0       0       0
  3936 ;;      Locals:         0      13       0       0       0
  3937 ;;      Temps:          0       5       0       0       0
  3938 ;;      Totals:         0      26       0       0       0
  3939 ;;Total ram usage:       26 bytes
  3940 ;; Hardware stack levels used:    1
  3941 ;; Hardware stack levels required when called:    3
  3942 ;; This function calls:
  3943 ;;		__Umul8_16
  3944 ;; This function is called by:
  3945 ;;		_analogToString
  3946 ;; This function uses a non-reentrant model
  3947 ;;
  3948                           
  3949                           
  3950                           ;psect for function ___flmul
  3951  0023                     ___flmul:
  3952  0023                     l2035:	
  3953                           ;incstack = 0
  3954                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3955                           
  3956  0023  1283               	bcf	3,5	;RP0=0, select bank0
  3957  0024  1303               	bcf	3,6	;RP1=0, select bank0
  3958  0025  082D               	movf	___flmul@b+3,w
  3959  0026  3980               	andlw	128
  3960  0027  00B2               	movwf	??___flmul
  3961  0028  0832               	movf	??___flmul,w
  3962  0029  00B7               	movwf	___flmul@sign
  3963  002A                     l2037:
  3964  002A  082D               	movf	___flmul@b+3,w
  3965  002B  00B2               	movwf	??___flmul
  3966  002C  0732               	addwf	??___flmul,w
  3967  002D  00B3               	movwf	??___flmul+1
  3968  002E  0833               	movf	??___flmul+1,w
  3969  002F  00BD               	movwf	___flmul@bexp
  3970  0030                     l2039:
  3971  0030  1FAC               	btfss	___flmul@b+2,7
  3972  0031  2833               	goto	u2941
  3973  0032  2834               	goto	u2940
  3974  0033                     u2941:
  3975  0033  2835               	goto	l2043
  3976  0034                     u2940:
  3977  0034                     l2041:
  3978  0034  143D               	bsf	___flmul@bexp,0
  3979  0035                     l2043:
  3980  0035  083D               	movf	___flmul@bexp,w
  3981  0036  1903               	btfsc	3,2
  3982  0037  2839               	goto	u2951
  3983  0038  283A               	goto	u2950
  3984  0039                     u2951:
  3985  0039  2849               	goto	l2051
  3986  003A                     u2950:
  3987  003A                     l2045:
  3988  003A  0A3D               	incf	___flmul@bexp,w
  3989  003B  1D03               	btfss	3,2
  3990  003C  283E               	goto	u2961
  3991  003D  283F               	goto	u2960
  3992  003E                     u2961:
  3993  003E  2847               	goto	l2049
  3994  003F                     u2960:
  3995  003F                     l2047:
  3996  003F  3000               	movlw	0
  3997  0040  00AD               	movwf	___flmul@b+3
  3998  0041  3000               	movlw	0
  3999  0042  00AC               	movwf	___flmul@b+2
  4000  0043  3000               	movlw	0
  4001  0044  00AB               	movwf	___flmul@b+1
  4002  0045  3000               	movlw	0
  4003  0046  00AA               	movwf	___flmul@b
  4004  0047                     l2049:
  4005  0047  17AC               	bsf	___flmul@b+2,7
  4006  0048  2851               	goto	l2053
  4007  0049                     l2051:
  4008  0049  3000               	movlw	0
  4009  004A  00AD               	movwf	___flmul@b+3
  4010  004B  3000               	movlw	0
  4011  004C  00AC               	movwf	___flmul@b+2
  4012  004D  3000               	movlw	0
  4013  004E  00AB               	movwf	___flmul@b+1
  4014  004F  3000               	movlw	0
  4015  0050  00AA               	movwf	___flmul@b
  4016  0051                     l2053:
  4017  0051  0831               	movf	___flmul@a+3,w
  4018  0052  3980               	andlw	128
  4019  0053  00B2               	movwf	??___flmul
  4020  0054  0832               	movf	??___flmul,w
  4021  0055  06B7               	xorwf	___flmul@sign,f
  4022  0056                     l2055:
  4023  0056  0831               	movf	___flmul@a+3,w
  4024  0057  00B2               	movwf	??___flmul
  4025  0058  0732               	addwf	??___flmul,w
  4026  0059  00B3               	movwf	??___flmul+1
  4027  005A  0833               	movf	??___flmul+1,w
  4028  005B  00BC               	movwf	___flmul@aexp
  4029  005C                     l2057:
  4030  005C  1FB0               	btfss	___flmul@a+2,7
  4031  005D  285F               	goto	u2971
  4032  005E  2860               	goto	u2970
  4033  005F                     u2971:
  4034  005F  2861               	goto	l2061
  4035  0060                     u2970:
  4036  0060                     l2059:
  4037  0060  143C               	bsf	___flmul@aexp,0
  4038  0061                     l2061:
  4039  0061  083C               	movf	___flmul@aexp,w
  4040  0062  1903               	btfsc	3,2
  4041  0063  2865               	goto	u2981
  4042  0064  2866               	goto	u2980
  4043  0065                     u2981:
  4044  0065  2875               	goto	l2069
  4045  0066                     u2980:
  4046  0066                     l2063:
  4047  0066  0A3C               	incf	___flmul@aexp,w
  4048  0067  1D03               	btfss	3,2
  4049  0068  286A               	goto	u2991
  4050  0069  286B               	goto	u2990
  4051  006A                     u2991:
  4052  006A  2873               	goto	l2067
  4053  006B                     u2990:
  4054  006B                     l2065:
  4055  006B  3000               	movlw	0
  4056  006C  00B1               	movwf	___flmul@a+3
  4057  006D  3000               	movlw	0
  4058  006E  00B0               	movwf	___flmul@a+2
  4059  006F  3000               	movlw	0
  4060  0070  00AF               	movwf	___flmul@a+1
  4061  0071  3000               	movlw	0
  4062  0072  00AE               	movwf	___flmul@a
  4063  0073                     l2067:
  4064  0073  17B0               	bsf	___flmul@a+2,7
  4065  0074  287D               	goto	l2071
  4066  0075                     l2069:
  4067  0075  3000               	movlw	0
  4068  0076  00B1               	movwf	___flmul@a+3
  4069  0077  3000               	movlw	0
  4070  0078  00B0               	movwf	___flmul@a+2
  4071  0079  3000               	movlw	0
  4072  007A  00AF               	movwf	___flmul@a+1
  4073  007B  3000               	movlw	0
  4074  007C  00AE               	movwf	___flmul@a
  4075  007D                     l2071:
  4076  007D  083C               	movf	___flmul@aexp,w
  4077  007E  1903               	btfsc	3,2
  4078  007F  2881               	goto	u3001
  4079  0080  2882               	goto	u3000
  4080  0081                     u3001:
  4081  0081  2887               	goto	l2075
  4082  0082                     u3000:
  4083  0082                     l2073:
  4084  0082  083D               	movf	___flmul@bexp,w
  4085  0083  1D03               	btfss	3,2
  4086  0084  2886               	goto	u3011
  4087  0085  2887               	goto	u3010
  4088  0086                     u3011:
  4089  0086  2890               	goto	l2079
  4090  0087                     u3010:
  4091  0087                     l2075:
  4092  0087  3000               	movlw	0
  4093  0088  00AD               	movwf	?___flmul+3
  4094  0089  3000               	movlw	0
  4095  008A  00AC               	movwf	?___flmul+2
  4096  008B  3000               	movlw	0
  4097  008C  00AB               	movwf	?___flmul+1
  4098  008D  3000               	movlw	0
  4099  008E  00AA               	movwf	?___flmul
  4100  008F  2B83               	goto	l664
  4101  0090                     l2079:
  4102  0090  082A               	movf	___flmul@b,w
  4103  0091  00B2               	movwf	??___flmul
  4104  0092  0832               	movf	??___flmul,w
  4105  0093  00F5               	movwf	__Umul8_16@multiplicand
  4106  0094  0830               	movf	___flmul@a+2,w
  4107  0095  120A  158A  22CF  120A  118A  	fcall	__Umul8_16
  4108  009A  0876               	movf	?__Umul8_16+1,w
  4109  009B  1283               	bcf	3,5	;RP0=0, select bank0
  4110  009C  1303               	bcf	3,6	;RP1=0, select bank0
  4111  009D  00C3               	movwf	___flmul@temp+1
  4112  009E  0875               	movf	?__Umul8_16,w
  4113  009F  00C2               	movwf	___flmul@temp
  4114  00A0                     l2081:
  4115  00A0  0842               	movf	___flmul@temp,w
  4116  00A1  00B2               	movwf	??___flmul
  4117  00A2  01B3               	clrf	??___flmul+1
  4118  00A3  01B4               	clrf	??___flmul+2
  4119  00A4  01B5               	clrf	??___flmul+3
  4120  00A5  0835               	movf	??___flmul+3,w
  4121  00A6  00BB               	movwf	___flmul@grs+3
  4122  00A7  0834               	movf	??___flmul+2,w
  4123  00A8  00BA               	movwf	___flmul@grs+2
  4124  00A9  0833               	movf	??___flmul+1,w
  4125  00AA  00B9               	movwf	___flmul@grs+1
  4126  00AB  0832               	movf	??___flmul,w
  4127  00AC  00B8               	movwf	___flmul@grs
  4128  00AD                     l2083:
  4129  00AD  0843               	movf	___flmul@temp+1,w
  4130  00AE  00B2               	movwf	??___flmul
  4131  00AF  01B3               	clrf	??___flmul+1
  4132  00B0  01B4               	clrf	??___flmul+2
  4133  00B1  01B5               	clrf	??___flmul+3
  4134  00B2  0835               	movf	??___flmul+3,w
  4135  00B3  00C1               	movwf	___flmul@prod+3
  4136  00B4  0834               	movf	??___flmul+2,w
  4137  00B5  00C0               	movwf	___flmul@prod+2
  4138  00B6  0833               	movf	??___flmul+1,w
  4139  00B7  00BF               	movwf	___flmul@prod+1
  4140  00B8  0832               	movf	??___flmul,w
  4141  00B9  00BE               	movwf	___flmul@prod
  4142  00BA  082B               	movf	___flmul@b+1,w
  4143  00BB  00B2               	movwf	??___flmul
  4144  00BC  0832               	movf	??___flmul,w
  4145  00BD  00F5               	movwf	__Umul8_16@multiplicand
  4146  00BE  082F               	movf	___flmul@a+1,w
  4147  00BF  120A  158A  22CF  120A  118A  	fcall	__Umul8_16
  4148  00C4  0876               	movf	?__Umul8_16+1,w
  4149  00C5  1283               	bcf	3,5	;RP0=0, select bank0
  4150  00C6  1303               	bcf	3,6	;RP1=0, select bank0
  4151  00C7  00C3               	movwf	___flmul@temp+1
  4152  00C8  0875               	movf	?__Umul8_16,w
  4153  00C9  00C2               	movwf	___flmul@temp
  4154  00CA                     l2085:
  4155  00CA  0842               	movf	___flmul@temp,w
  4156  00CB  00B2               	movwf	??___flmul
  4157  00CC  01B3               	clrf	??___flmul+1
  4158  00CD  01B4               	clrf	??___flmul+2
  4159  00CE  01B5               	clrf	??___flmul+3
  4160  00CF  0832               	movf	??___flmul,w
  4161  00D0  07B8               	addwf	___flmul@grs,f
  4162  00D1  0833               	movf	??___flmul+1,w
  4163  00D2  1103               	clrz
  4164  00D3  1803               	skipnc
  4165  00D4  3E01               	addlw	1
  4166  00D5  1903               	skipnz
  4167  00D6  28D8               	goto	u3021
  4168  00D7  07B9               	addwf	___flmul@grs+1,f
  4169  00D8                     u3021:
  4170  00D8  0834               	movf	??___flmul+2,w
  4171  00D9  1103               	clrz
  4172  00DA  1803               	skipnc
  4173  00DB  3E01               	addlw	1
  4174  00DC  1903               	skipnz
  4175  00DD  28DF               	goto	u3022
  4176  00DE  07BA               	addwf	___flmul@grs+2,f
  4177  00DF                     u3022:
  4178  00DF  0835               	movf	??___flmul+3,w
  4179  00E0  1103               	clrz
  4180  00E1  1803               	skipnc
  4181  00E2  3E01               	addlw	1
  4182  00E3  1903               	skipnz
  4183  00E4  28E6               	goto	u3023
  4184  00E5  07BB               	addwf	___flmul@grs+3,f
  4185  00E6                     u3023:
  4186  00E6                     l2087:
  4187  00E6  0843               	movf	___flmul@temp+1,w
  4188  00E7  00B2               	movwf	??___flmul
  4189  00E8  01B3               	clrf	??___flmul+1
  4190  00E9  01B4               	clrf	??___flmul+2
  4191  00EA  01B5               	clrf	??___flmul+3
  4192  00EB  0832               	movf	??___flmul,w
  4193  00EC  07BE               	addwf	___flmul@prod,f
  4194  00ED  0833               	movf	??___flmul+1,w
  4195  00EE  1103               	clrz
  4196  00EF  1803               	skipnc
  4197  00F0  3E01               	addlw	1
  4198  00F1  1903               	skipnz
  4199  00F2  28F4               	goto	u3031
  4200  00F3  07BF               	addwf	___flmul@prod+1,f
  4201  00F4                     u3031:
  4202  00F4  0834               	movf	??___flmul+2,w
  4203  00F5  1103               	clrz
  4204  00F6  1803               	skipnc
  4205  00F7  3E01               	addlw	1
  4206  00F8  1903               	skipnz
  4207  00F9  28FB               	goto	u3032
  4208  00FA  07C0               	addwf	___flmul@prod+2,f
  4209  00FB                     u3032:
  4210  00FB  0835               	movf	??___flmul+3,w
  4211  00FC  1103               	clrz
  4212  00FD  1803               	skipnc
  4213  00FE  3E01               	addlw	1
  4214  00FF  1903               	skipnz
  4215  0100  2902               	goto	u3033
  4216  0101  07C1               	addwf	___flmul@prod+3,f
  4217  0102                     u3033:
  4218  0102  082C               	movf	___flmul@b+2,w
  4219  0103  00B2               	movwf	??___flmul
  4220  0104  0832               	movf	??___flmul,w
  4221  0105  00F5               	movwf	__Umul8_16@multiplicand
  4222  0106  082E               	movf	___flmul@a,w
  4223  0107  120A  158A  22CF  120A  118A  	fcall	__Umul8_16
  4224  010C  0876               	movf	?__Umul8_16+1,w
  4225  010D  1283               	bcf	3,5	;RP0=0, select bank0
  4226  010E  1303               	bcf	3,6	;RP1=0, select bank0
  4227  010F  00C3               	movwf	___flmul@temp+1
  4228  0110  0875               	movf	?__Umul8_16,w
  4229  0111  00C2               	movwf	___flmul@temp
  4230  0112                     l2089:
  4231  0112  0842               	movf	___flmul@temp,w
  4232  0113  00B2               	movwf	??___flmul
  4233  0114  01B3               	clrf	??___flmul+1
  4234  0115  01B4               	clrf	??___flmul+2
  4235  0116  01B5               	clrf	??___flmul+3
  4236  0117  0832               	movf	??___flmul,w
  4237  0118  07B8               	addwf	___flmul@grs,f
  4238  0119  0833               	movf	??___flmul+1,w
  4239  011A  1103               	clrz
  4240  011B  1803               	skipnc
  4241  011C  3E01               	addlw	1
  4242  011D  1903               	skipnz
  4243  011E  2920               	goto	u3041
  4244  011F  07B9               	addwf	___flmul@grs+1,f
  4245  0120                     u3041:
  4246  0120  0834               	movf	??___flmul+2,w
  4247  0121  1103               	clrz
  4248  0122  1803               	skipnc
  4249  0123  3E01               	addlw	1
  4250  0124  1903               	skipnz
  4251  0125  2927               	goto	u3042
  4252  0126  07BA               	addwf	___flmul@grs+2,f
  4253  0127                     u3042:
  4254  0127  0835               	movf	??___flmul+3,w
  4255  0128  1103               	clrz
  4256  0129  1803               	skipnc
  4257  012A  3E01               	addlw	1
  4258  012B  1903               	skipnz
  4259  012C  292E               	goto	u3043
  4260  012D  07BB               	addwf	___flmul@grs+3,f
  4261  012E                     u3043:
  4262  012E                     l2091:
  4263  012E  0843               	movf	___flmul@temp+1,w
  4264  012F  00B2               	movwf	??___flmul
  4265  0130  01B3               	clrf	??___flmul+1
  4266  0131  01B4               	clrf	??___flmul+2
  4267  0132  01B5               	clrf	??___flmul+3
  4268  0133  0832               	movf	??___flmul,w
  4269  0134  07BE               	addwf	___flmul@prod,f
  4270  0135  0833               	movf	??___flmul+1,w
  4271  0136  1103               	clrz
  4272  0137  1803               	skipnc
  4273  0138  3E01               	addlw	1
  4274  0139  1903               	skipnz
  4275  013A  293C               	goto	u3051
  4276  013B  07BF               	addwf	___flmul@prod+1,f
  4277  013C                     u3051:
  4278  013C  0834               	movf	??___flmul+2,w
  4279  013D  1103               	clrz
  4280  013E  1803               	skipnc
  4281  013F  3E01               	addlw	1
  4282  0140  1903               	skipnz
  4283  0141  2943               	goto	u3052
  4284  0142  07C0               	addwf	___flmul@prod+2,f
  4285  0143                     u3052:
  4286  0143  0835               	movf	??___flmul+3,w
  4287  0144  1103               	clrz
  4288  0145  1803               	skipnc
  4289  0146  3E01               	addlw	1
  4290  0147  1903               	skipnz
  4291  0148  294A               	goto	u3053
  4292  0149  07C1               	addwf	___flmul@prod+3,f
  4293  014A                     u3053:
  4294  014A                     l2093:
  4295  014A  3008               	movlw	8
  4296  014B  00B2               	movwf	??___flmul
  4297  014C                     u3065:
  4298  014C  1003               	clrc
  4299  014D  0DB8               	rlf	___flmul@grs,f
  4300  014E  0DB9               	rlf	___flmul@grs+1,f
  4301  014F  0DBA               	rlf	___flmul@grs+2,f
  4302  0150  0DBB               	rlf	___flmul@grs+3,f
  4303  0151  0BB2               	decfsz	??___flmul,f
  4304  0152  294C               	goto	u3065
  4305  0153                     l2095:
  4306  0153  082B               	movf	___flmul@b+1,w
  4307  0154  00B2               	movwf	??___flmul
  4308  0155  0832               	movf	??___flmul,w
  4309  0156  00F5               	movwf	__Umul8_16@multiplicand
  4310  0157  082E               	movf	___flmul@a,w
  4311  0158  120A  158A  22CF  120A  118A  	fcall	__Umul8_16
  4312  015D  0876               	movf	?__Umul8_16+1,w
  4313  015E  1283               	bcf	3,5	;RP0=0, select bank0
  4314  015F  1303               	bcf	3,6	;RP1=0, select bank0
  4315  0160  00C3               	movwf	___flmul@temp+1
  4316  0161  0875               	movf	?__Umul8_16,w
  4317  0162  00C2               	movwf	___flmul@temp
  4318  0163                     l2097:
  4319  0163  0842               	movf	___flmul@temp,w
  4320  0164  00B2               	movwf	??___flmul
  4321  0165  0843               	movf	___flmul@temp+1,w
  4322  0166  00B3               	movwf	??___flmul+1
  4323  0167  01B4               	clrf	??___flmul+2
  4324  0168  01B5               	clrf	??___flmul+3
  4325  0169  0832               	movf	??___flmul,w
  4326  016A  07B8               	addwf	___flmul@grs,f
  4327  016B  0833               	movf	??___flmul+1,w
  4328  016C  1103               	clrz
  4329  016D  1803               	skipnc
  4330  016E  3E01               	addlw	1
  4331  016F  1903               	skipnz
  4332  0170  2972               	goto	u3071
  4333  0171  07B9               	addwf	___flmul@grs+1,f
  4334  0172                     u3071:
  4335  0172  0834               	movf	??___flmul+2,w
  4336  0173  1103               	clrz
  4337  0174  1803               	skipnc
  4338  0175  3E01               	addlw	1
  4339  0176  1903               	skipnz
  4340  0177  2979               	goto	u3072
  4341  0178  07BA               	addwf	___flmul@grs+2,f
  4342  0179                     u3072:
  4343  0179  0835               	movf	??___flmul+3,w
  4344  017A  1103               	clrz
  4345  017B  1803               	skipnc
  4346  017C  3E01               	addlw	1
  4347  017D  1903               	skipnz
  4348  017E  2980               	goto	u3073
  4349  017F  07BB               	addwf	___flmul@grs+3,f
  4350  0180                     u3073:
  4351  0180                     l2099:
  4352  0180  082A               	movf	___flmul@b,w
  4353  0181  00B2               	movwf	??___flmul
  4354  0182  0832               	movf	??___flmul,w
  4355  0183  00F5               	movwf	__Umul8_16@multiplicand
  4356  0184  082F               	movf	___flmul@a+1,w
  4357  0185  120A  158A  22CF  120A  118A  	fcall	__Umul8_16
  4358  018A  0876               	movf	?__Umul8_16+1,w
  4359  018B  1283               	bcf	3,5	;RP0=0, select bank0
  4360  018C  1303               	bcf	3,6	;RP1=0, select bank0
  4361  018D  00C3               	movwf	___flmul@temp+1
  4362  018E  0875               	movf	?__Umul8_16,w
  4363  018F  00C2               	movwf	___flmul@temp
  4364  0190                     l2101:
  4365  0190  0842               	movf	___flmul@temp,w
  4366  0191  00B2               	movwf	??___flmul
  4367  0192  0843               	movf	___flmul@temp+1,w
  4368  0193  00B3               	movwf	??___flmul+1
  4369  0194  01B4               	clrf	??___flmul+2
  4370  0195  01B5               	clrf	??___flmul+3
  4371  0196  0832               	movf	??___flmul,w
  4372  0197  07B8               	addwf	___flmul@grs,f
  4373  0198  0833               	movf	??___flmul+1,w
  4374  0199  1103               	clrz
  4375  019A  1803               	skipnc
  4376  019B  3E01               	addlw	1
  4377  019C  1903               	skipnz
  4378  019D  299F               	goto	u3081
  4379  019E  07B9               	addwf	___flmul@grs+1,f
  4380  019F                     u3081:
  4381  019F  0834               	movf	??___flmul+2,w
  4382  01A0  1103               	clrz
  4383  01A1  1803               	skipnc
  4384  01A2  3E01               	addlw	1
  4385  01A3  1903               	skipnz
  4386  01A4  29A6               	goto	u3082
  4387  01A5  07BA               	addwf	___flmul@grs+2,f
  4388  01A6                     u3082:
  4389  01A6  0835               	movf	??___flmul+3,w
  4390  01A7  1103               	clrz
  4391  01A8  1803               	skipnc
  4392  01A9  3E01               	addlw	1
  4393  01AA  1903               	skipnz
  4394  01AB  29AD               	goto	u3083
  4395  01AC  07BB               	addwf	___flmul@grs+3,f
  4396  01AD                     u3083:
  4397  01AD                     l2103:
  4398  01AD  3008               	movlw	8
  4399  01AE  00B2               	movwf	??___flmul
  4400  01AF                     u3095:
  4401  01AF  1003               	clrc
  4402  01B0  0DB8               	rlf	___flmul@grs,f
  4403  01B1  0DB9               	rlf	___flmul@grs+1,f
  4404  01B2  0DBA               	rlf	___flmul@grs+2,f
  4405  01B3  0DBB               	rlf	___flmul@grs+3,f
  4406  01B4  0BB2               	decfsz	??___flmul,f
  4407  01B5  29AF               	goto	u3095
  4408  01B6  082A               	movf	___flmul@b,w
  4409  01B7  00B2               	movwf	??___flmul
  4410  01B8  0832               	movf	??___flmul,w
  4411  01B9  00F5               	movwf	__Umul8_16@multiplicand
  4412  01BA  082E               	movf	___flmul@a,w
  4413  01BB  120A  158A  22CF  120A  118A  	fcall	__Umul8_16
  4414  01C0  0876               	movf	?__Umul8_16+1,w
  4415  01C1  1283               	bcf	3,5	;RP0=0, select bank0
  4416  01C2  1303               	bcf	3,6	;RP1=0, select bank0
  4417  01C3  00C3               	movwf	___flmul@temp+1
  4418  01C4  0875               	movf	?__Umul8_16,w
  4419  01C5  00C2               	movwf	___flmul@temp
  4420  01C6                     l2105:
  4421  01C6  0842               	movf	___flmul@temp,w
  4422  01C7  00B2               	movwf	??___flmul
  4423  01C8  0843               	movf	___flmul@temp+1,w
  4424  01C9  00B3               	movwf	??___flmul+1
  4425  01CA  01B4               	clrf	??___flmul+2
  4426  01CB  01B5               	clrf	??___flmul+3
  4427  01CC  0832               	movf	??___flmul,w
  4428  01CD  07B8               	addwf	___flmul@grs,f
  4429  01CE  0833               	movf	??___flmul+1,w
  4430  01CF  1103               	clrz
  4431  01D0  1803               	skipnc
  4432  01D1  3E01               	addlw	1
  4433  01D2  1903               	skipnz
  4434  01D3  29D5               	goto	u3101
  4435  01D4  07B9               	addwf	___flmul@grs+1,f
  4436  01D5                     u3101:
  4437  01D5  0834               	movf	??___flmul+2,w
  4438  01D6  1103               	clrz
  4439  01D7  1803               	skipnc
  4440  01D8  3E01               	addlw	1
  4441  01D9  1903               	skipnz
  4442  01DA  29DC               	goto	u3102
  4443  01DB  07BA               	addwf	___flmul@grs+2,f
  4444  01DC                     u3102:
  4445  01DC  0835               	movf	??___flmul+3,w
  4446  01DD  1103               	clrz
  4447  01DE  1803               	skipnc
  4448  01DF  3E01               	addlw	1
  4449  01E0  1903               	skipnz
  4450  01E1  29E3               	goto	u3103
  4451  01E2  07BB               	addwf	___flmul@grs+3,f
  4452  01E3                     u3103:
  4453  01E3                     l2107:
  4454  01E3  082B               	movf	___flmul@b+1,w
  4455  01E4  00B2               	movwf	??___flmul
  4456  01E5  0832               	movf	??___flmul,w
  4457  01E6  00F5               	movwf	__Umul8_16@multiplicand
  4458  01E7  0830               	movf	___flmul@a+2,w
  4459  01E8  120A  158A  22CF  120A  118A  	fcall	__Umul8_16
  4460  01ED  0876               	movf	?__Umul8_16+1,w
  4461  01EE  1283               	bcf	3,5	;RP0=0, select bank0
  4462  01EF  1303               	bcf	3,6	;RP1=0, select bank0
  4463  01F0  00C3               	movwf	___flmul@temp+1
  4464  01F1  0875               	movf	?__Umul8_16,w
  4465  01F2  00C2               	movwf	___flmul@temp
  4466  01F3  0842               	movf	___flmul@temp,w
  4467  01F4  00B2               	movwf	??___flmul
  4468  01F5  0843               	movf	___flmul@temp+1,w
  4469  01F6  00B3               	movwf	??___flmul+1
  4470  01F7  01B4               	clrf	??___flmul+2
  4471  01F8  01B5               	clrf	??___flmul+3
  4472  01F9  0832               	movf	??___flmul,w
  4473  01FA  07BE               	addwf	___flmul@prod,f
  4474  01FB  0833               	movf	??___flmul+1,w
  4475  01FC  1103               	clrz
  4476  01FD  1803               	skipnc
  4477  01FE  3E01               	addlw	1
  4478  01FF  1903               	skipnz
  4479  0200  2A02               	goto	u3111
  4480  0201  07BF               	addwf	___flmul@prod+1,f
  4481  0202                     u3111:
  4482  0202  0834               	movf	??___flmul+2,w
  4483  0203  1103               	clrz
  4484  0204  1803               	skipnc
  4485  0205  3E01               	addlw	1
  4486  0206  1903               	skipnz
  4487  0207  2A09               	goto	u3112
  4488  0208  07C0               	addwf	___flmul@prod+2,f
  4489  0209                     u3112:
  4490  0209  0835               	movf	??___flmul+3,w
  4491  020A  1103               	clrz
  4492  020B  1803               	skipnc
  4493  020C  3E01               	addlw	1
  4494  020D  1903               	skipnz
  4495  020E  2A10               	goto	u3113
  4496  020F  07C1               	addwf	___flmul@prod+3,f
  4497  0210                     u3113:
  4498  0210                     l2109:
  4499  0210  082C               	movf	___flmul@b+2,w
  4500  0211  00B2               	movwf	??___flmul
  4501  0212  0832               	movf	??___flmul,w
  4502  0213  00F5               	movwf	__Umul8_16@multiplicand
  4503  0214  082F               	movf	___flmul@a+1,w
  4504  0215  120A  158A  22CF  120A  118A  	fcall	__Umul8_16
  4505  021A  0876               	movf	?__Umul8_16+1,w
  4506  021B  1283               	bcf	3,5	;RP0=0, select bank0
  4507  021C  1303               	bcf	3,6	;RP1=0, select bank0
  4508  021D  00C3               	movwf	___flmul@temp+1
  4509  021E  0875               	movf	?__Umul8_16,w
  4510  021F  00C2               	movwf	___flmul@temp
  4511  0220                     l2111:
  4512  0220  0842               	movf	___flmul@temp,w
  4513  0221  00B2               	movwf	??___flmul
  4514  0222  0843               	movf	___flmul@temp+1,w
  4515  0223  00B3               	movwf	??___flmul+1
  4516  0224  01B4               	clrf	??___flmul+2
  4517  0225  01B5               	clrf	??___flmul+3
  4518  0226  0832               	movf	??___flmul,w
  4519  0227  07BE               	addwf	___flmul@prod,f
  4520  0228  0833               	movf	??___flmul+1,w
  4521  0229  1103               	clrz
  4522  022A  1803               	skipnc
  4523  022B  3E01               	addlw	1
  4524  022C  1903               	skipnz
  4525  022D  2A2F               	goto	u3121
  4526  022E  07BF               	addwf	___flmul@prod+1,f
  4527  022F                     u3121:
  4528  022F  0834               	movf	??___flmul+2,w
  4529  0230  1103               	clrz
  4530  0231  1803               	skipnc
  4531  0232  3E01               	addlw	1
  4532  0233  1903               	skipnz
  4533  0234  2A36               	goto	u3122
  4534  0235  07C0               	addwf	___flmul@prod+2,f
  4535  0236                     u3122:
  4536  0236  0835               	movf	??___flmul+3,w
  4537  0237  1103               	clrz
  4538  0238  1803               	skipnc
  4539  0239  3E01               	addlw	1
  4540  023A  1903               	skipnz
  4541  023B  2A3D               	goto	u3123
  4542  023C  07C1               	addwf	___flmul@prod+3,f
  4543  023D                     u3123:
  4544  023D  082C               	movf	___flmul@b+2,w
  4545  023E  00B2               	movwf	??___flmul
  4546  023F  0832               	movf	??___flmul,w
  4547  0240  00F5               	movwf	__Umul8_16@multiplicand
  4548  0241  0830               	movf	___flmul@a+2,w
  4549  0242  120A  158A  22CF  120A  118A  	fcall	__Umul8_16
  4550  0247  0876               	movf	?__Umul8_16+1,w
  4551  0248  1283               	bcf	3,5	;RP0=0, select bank0
  4552  0249  1303               	bcf	3,6	;RP1=0, select bank0
  4553  024A  00C3               	movwf	___flmul@temp+1
  4554  024B  0875               	movf	?__Umul8_16,w
  4555  024C  00C2               	movwf	___flmul@temp
  4556  024D                     l2113:
  4557  024D  0842               	movf	___flmul@temp,w
  4558  024E  00B2               	movwf	??___flmul
  4559  024F  0843               	movf	___flmul@temp+1,w
  4560  0250  00B3               	movwf	??___flmul+1
  4561  0251  01B4               	clrf	??___flmul+2
  4562  0252  01B5               	clrf	??___flmul+3
  4563  0253  3008               	movlw	8
  4564  0254                     u3135:
  4565  0254  1003               	clrc
  4566  0255  0DB2               	rlf	??___flmul,f
  4567  0256  0DB3               	rlf	??___flmul+1,f
  4568  0257  0DB4               	rlf	??___flmul+2,f
  4569  0258  0DB5               	rlf	??___flmul+3,f
  4570  0259                     u3130:
  4571  0259  3EFF               	addlw	-1
  4572  025A  1D03               	skipz
  4573  025B  2A54               	goto	u3135
  4574  025C  0832               	movf	??___flmul,w
  4575  025D  07BE               	addwf	___flmul@prod,f
  4576  025E  0833               	movf	??___flmul+1,w
  4577  025F  1103               	clrz
  4578  0260  1803               	skipnc
  4579  0261  3E01               	addlw	1
  4580  0262  1903               	skipnz
  4581  0263  2A65               	goto	u3141
  4582  0264  07BF               	addwf	___flmul@prod+1,f
  4583  0265                     u3141:
  4584  0265  0834               	movf	??___flmul+2,w
  4585  0266  1103               	clrz
  4586  0267  1803               	skipnc
  4587  0268  3E01               	addlw	1
  4588  0269  1903               	skipnz
  4589  026A  2A6C               	goto	u3142
  4590  026B  07C0               	addwf	___flmul@prod+2,f
  4591  026C                     u3142:
  4592  026C  0835               	movf	??___flmul+3,w
  4593  026D  1103               	clrz
  4594  026E  1803               	skipnc
  4595  026F  3E01               	addlw	1
  4596  0270  1903               	skipnz
  4597  0271  2A73               	goto	u3143
  4598  0272  07C1               	addwf	___flmul@prod+3,f
  4599  0273                     u3143:
  4600  0273                     l2115:
  4601  0273  0838               	movf	___flmul@grs,w
  4602  0274  00B2               	movwf	??___flmul
  4603  0275  0839               	movf	___flmul@grs+1,w
  4604  0276  00B3               	movwf	??___flmul+1
  4605  0277  083A               	movf	___flmul@grs+2,w
  4606  0278  00B4               	movwf	??___flmul+2
  4607  0279  083B               	movf	___flmul@grs+3,w
  4608  027A  00B5               	movwf	??___flmul+3
  4609  027B  3018               	movlw	24
  4610  027C                     u3155:
  4611  027C  1003               	clrc
  4612  027D  0CB5               	rrf	??___flmul+3,f
  4613  027E  0CB4               	rrf	??___flmul+2,f
  4614  027F  0CB3               	rrf	??___flmul+1,f
  4615  0280  0CB2               	rrf	??___flmul,f
  4616  0281                     u3150:
  4617  0281  3EFF               	addlw	-1
  4618  0282  1D03               	skipz
  4619  0283  2A7C               	goto	u3155
  4620  0284  0832               	movf	??___flmul,w
  4621  0285  07BE               	addwf	___flmul@prod,f
  4622  0286  0833               	movf	??___flmul+1,w
  4623  0287  1103               	clrz
  4624  0288  1803               	skipnc
  4625  0289  3E01               	addlw	1
  4626  028A  1903               	skipnz
  4627  028B  2A8D               	goto	u3161
  4628  028C  07BF               	addwf	___flmul@prod+1,f
  4629  028D                     u3161:
  4630  028D  0834               	movf	??___flmul+2,w
  4631  028E  1103               	clrz
  4632  028F  1803               	skipnc
  4633  0290  3E01               	addlw	1
  4634  0291  1903               	skipnz
  4635  0292  2A94               	goto	u3162
  4636  0293  07C0               	addwf	___flmul@prod+2,f
  4637  0294                     u3162:
  4638  0294  0835               	movf	??___flmul+3,w
  4639  0295  1103               	clrz
  4640  0296  1803               	skipnc
  4641  0297  3E01               	addlw	1
  4642  0298  1903               	skipnz
  4643  0299  2A9B               	goto	u3163
  4644  029A  07C1               	addwf	___flmul@prod+3,f
  4645  029B                     u3163:
  4646  029B                     l2117:
  4647  029B  3008               	movlw	8
  4648  029C  00B2               	movwf	??___flmul
  4649  029D                     u3175:
  4650  029D  1003               	clrc
  4651  029E  0DB8               	rlf	___flmul@grs,f
  4652  029F  0DB9               	rlf	___flmul@grs+1,f
  4653  02A0  0DBA               	rlf	___flmul@grs+2,f
  4654  02A1  0DBB               	rlf	___flmul@grs+3,f
  4655  02A2  0BB2               	decfsz	??___flmul,f
  4656  02A3  2A9D               	goto	u3175
  4657  02A4                     l2119:
  4658  02A4  083D               	movf	___flmul@bexp,w
  4659  02A5  073C               	addwf	___flmul@aexp,w
  4660  02A6  00B2               	movwf	??___flmul
  4661  02A7  01B3               	clrf	??___flmul+1
  4662  02A8  0DB3               	rlf	??___flmul+1,f
  4663  02A9  0832               	movf	??___flmul,w
  4664  02AA  3E82               	addlw	130
  4665  02AB  00C2               	movwf	___flmul@temp
  4666  02AC  0833               	movf	??___flmul+1,w
  4667  02AD  1803               	skipnc
  4668  02AE  3E01               	addlw	1
  4669  02AF  3EFF               	addlw	255
  4670  02B0  00C3               	movwf	___flmul@temp+1
  4671  02B1  2ACF               	goto	l2131
  4672  02B2                     l2121:
  4673  02B2  3001               	movlw	1
  4674  02B3  00B2               	movwf	??___flmul
  4675  02B4                     u3185:
  4676  02B4  1003               	clrc
  4677  02B5  0DBE               	rlf	___flmul@prod,f
  4678  02B6  0DBF               	rlf	___flmul@prod+1,f
  4679  02B7  0DC0               	rlf	___flmul@prod+2,f
  4680  02B8  0DC1               	rlf	___flmul@prod+3,f
  4681  02B9  0BB2               	decfsz	??___flmul,f
  4682  02BA  2AB4               	goto	u3185
  4683  02BB                     l2123:
  4684  02BB  1FBB               	btfss	___flmul@grs+3,7
  4685  02BC  2ABE               	goto	u3191
  4686  02BD  2ABF               	goto	u3190
  4687  02BE                     u3191:
  4688  02BE  2AC0               	goto	l2127
  4689  02BF                     u3190:
  4690  02BF                     l2125:
  4691  02BF  143E               	bsf	___flmul@prod,0
  4692  02C0                     l2127:
  4693  02C0  3001               	movlw	1
  4694  02C1  00B2               	movwf	??___flmul
  4695  02C2                     u3205:
  4696  02C2  1003               	clrc
  4697  02C3  0DB8               	rlf	___flmul@grs,f
  4698  02C4  0DB9               	rlf	___flmul@grs+1,f
  4699  02C5  0DBA               	rlf	___flmul@grs+2,f
  4700  02C6  0DBB               	rlf	___flmul@grs+3,f
  4701  02C7  0BB2               	decfsz	??___flmul,f
  4702  02C8  2AC2               	goto	u3205
  4703  02C9                     l2129:
  4704  02C9  30FF               	movlw	255
  4705  02CA  07C2               	addwf	___flmul@temp,f
  4706  02CB  1803               	skipnc
  4707  02CC  0AC3               	incf	___flmul@temp+1,f
  4708  02CD  30FF               	movlw	255
  4709  02CE  07C3               	addwf	___flmul@temp+1,f
  4710  02CF                     l2131:
  4711  02CF  1FC0               	btfss	___flmul@prod+2,7
  4712  02D0  2AD2               	goto	u3211
  4713  02D1  2AD3               	goto	u3210
  4714  02D2                     u3211:
  4715  02D2  2AB2               	goto	l2121
  4716  02D3                     u3210:
  4717  02D3                     l2133:
  4718  02D3  01BC               	clrf	___flmul@aexp
  4719  02D4                     l2135:
  4720  02D4  1FBB               	btfss	___flmul@grs+3,7
  4721  02D5  2AD7               	goto	u3221
  4722  02D6  2AD8               	goto	u3220
  4723  02D7                     u3221:
  4724  02D7  2AF4               	goto	l2143
  4725  02D8                     u3220:
  4726  02D8                     l2137:
  4727  02D8  30FF               	movlw	255
  4728  02D9  0538               	andwf	___flmul@grs,w
  4729  02DA  00B2               	movwf	??___flmul
  4730  02DB  30FF               	movlw	255
  4731  02DC  0539               	andwf	___flmul@grs+1,w
  4732  02DD  00B3               	movwf	??___flmul+1
  4733  02DE  30FF               	movlw	255
  4734  02DF  053A               	andwf	___flmul@grs+2,w
  4735  02E0  00B4               	movwf	??___flmul+2
  4736  02E1  307F               	movlw	127
  4737  02E2  053B               	andwf	___flmul@grs+3,w
  4738  02E3  00B5               	movwf	??___flmul+3
  4739  02E4  0835               	movf	??___flmul+3,w
  4740  02E5  0434               	iorwf	??___flmul+2,w
  4741  02E6  0433               	iorwf	??___flmul+1,w
  4742  02E7  0432               	iorwf	??___flmul,w
  4743  02E8  1903               	skipnz
  4744  02E9  2AEB               	goto	u3231
  4745  02EA  2AEC               	goto	u3230
  4746  02EB                     u3231:
  4747  02EB  2AEF               	goto	l670
  4748  02EC                     u3230:
  4749  02EC                     l2139:
  4750  02EC  01BC               	clrf	___flmul@aexp
  4751  02ED  0ABC               	incf	___flmul@aexp,f
  4752  02EE  2AF4               	goto	l2143
  4753  02EF                     l670:
  4754  02EF  1C3E               	btfss	___flmul@prod,0
  4755  02F0  2AF2               	goto	u3241
  4756  02F1  2AF3               	goto	u3240
  4757  02F2                     u3241:
  4758  02F2  2AF4               	goto	l2143
  4759  02F3                     u3240:
  4760  02F3  2AEC               	goto	l2139
  4761  02F4                     l2143:
  4762  02F4  083C               	movf	___flmul@aexp,w
  4763  02F5  1903               	btfsc	3,2
  4764  02F6  2AF8               	goto	u3251
  4765  02F7  2AF9               	goto	u3250
  4766  02F8                     u3251:
  4767  02F8  2B2A               	goto	l2153
  4768  02F9                     u3250:
  4769  02F9                     l2145:
  4770  02F9  3001               	movlw	1
  4771  02FA  07BE               	addwf	___flmul@prod,f
  4772  02FB  3000               	movlw	0
  4773  02FC  1803               	skipnc
  4774  02FD  3001               	movlw	1
  4775  02FE  07BF               	addwf	___flmul@prod+1,f
  4776  02FF  3000               	movlw	0
  4777  0300  1803               	skipnc
  4778  0301  3001               	movlw	1
  4779  0302  07C0               	addwf	___flmul@prod+2,f
  4780  0303  3000               	movlw	0
  4781  0304  1803               	skipnc
  4782  0305  3001               	movlw	1
  4783  0306  07C1               	addwf	___flmul@prod+3,f
  4784  0307                     l2147:
  4785  0307  1C41               	btfss	___flmul@prod+3,0
  4786  0308  2B0A               	goto	u3261
  4787  0309  2B0B               	goto	u3260
  4788  030A                     u3261:
  4789  030A  2B2A               	goto	l2153
  4790  030B                     u3260:
  4791  030B                     l2149:
  4792  030B  083E               	movf	___flmul@prod,w
  4793  030C  00B2               	movwf	??___flmul
  4794  030D  083F               	movf	___flmul@prod+1,w
  4795  030E  00B3               	movwf	??___flmul+1
  4796  030F  0840               	movf	___flmul@prod+2,w
  4797  0310  00B4               	movwf	??___flmul+2
  4798  0311  0841               	movf	___flmul@prod+3,w
  4799  0312  00B5               	movwf	??___flmul+3
  4800  0313  3001               	movlw	1
  4801  0314  00B6               	movwf	??___flmul+4
  4802  0315                     u3275:
  4803  0315  0D35               	rlf	??___flmul+3,w
  4804  0316  0CB5               	rrf	??___flmul+3,f
  4805  0317  0CB4               	rrf	??___flmul+2,f
  4806  0318  0CB3               	rrf	??___flmul+1,f
  4807  0319  0CB2               	rrf	??___flmul,f
  4808  031A                     u3270:
  4809  031A  0BB6               	decfsz	??___flmul+4,f
  4810  031B  2B15               	goto	u3275
  4811  031C  0835               	movf	??___flmul+3,w
  4812  031D  00C1               	movwf	___flmul@prod+3
  4813  031E  0834               	movf	??___flmul+2,w
  4814  031F  00C0               	movwf	___flmul@prod+2
  4815  0320  0833               	movf	??___flmul+1,w
  4816  0321  00BF               	movwf	___flmul@prod+1
  4817  0322  0832               	movf	??___flmul,w
  4818  0323  00BE               	movwf	___flmul@prod
  4819  0324                     l2151:
  4820  0324  3001               	movlw	1
  4821  0325  07C2               	addwf	___flmul@temp,f
  4822  0326  1803               	skipnc
  4823  0327  0AC3               	incf	___flmul@temp+1,f
  4824  0328  3000               	movlw	0
  4825  0329  07C3               	addwf	___flmul@temp+1,f
  4826  032A                     l2153:
  4827  032A  0843               	movf	___flmul@temp+1,w
  4828  032B  3A80               	xorlw	128
  4829  032C  00FF               	movwf	btemp+1
  4830  032D  3080               	movlw	128
  4831  032E  027F               	subwf	btemp+1,w
  4832  032F  1D03               	skipz
  4833  0330  2B33               	goto	u3285
  4834  0331  30FF               	movlw	255
  4835  0332  0242               	subwf	___flmul@temp,w
  4836  0333                     u3285:
  4837  0333  1C03               	skipc
  4838  0334  2B36               	goto	u3281
  4839  0335  2B37               	goto	u3280
  4840  0336                     u3281:
  4841  0336  2B42               	goto	l2157
  4842  0337                     u3280:
  4843  0337                     l2155:
  4844  0337  307F               	movlw	127
  4845  0338  1283               	bcf	3,5	;RP0=0, select bank0
  4846  0339  1303               	bcf	3,6	;RP1=0, select bank0
  4847  033A  00C1               	movwf	___flmul@prod+3
  4848  033B  3080               	movlw	128
  4849  033C  00C0               	movwf	___flmul@prod+2
  4850  033D  3000               	movlw	0
  4851  033E  00BF               	movwf	___flmul@prod+1
  4852  033F  3000               	movlw	0
  4853  0340  00BE               	movwf	___flmul@prod
  4854  0341  2B77               	goto	l676
  4855  0342                     l2157:
  4856  0342  1283               	bcf	3,5	;RP0=0, select bank0
  4857  0343  1303               	bcf	3,6	;RP1=0, select bank0
  4858  0344  0843               	movf	___flmul@temp+1,w
  4859  0345  3A80               	xorlw	128
  4860  0346  00FF               	movwf	btemp+1
  4861  0347  3080               	movlw	128
  4862  0348  027F               	subwf	btemp+1,w
  4863  0349  1D03               	skipz
  4864  034A  2B4D               	goto	u3295
  4865  034B  3001               	movlw	1
  4866  034C  0242               	subwf	___flmul@temp,w
  4867  034D                     u3295:
  4868  034D  1803               	skipnc
  4869  034E  2B50               	goto	u3291
  4870  034F  2B51               	goto	u3290
  4871  0350                     u3291:
  4872  0350  2B5D               	goto	l2163
  4873  0351                     u3290:
  4874  0351                     l2159:
  4875  0351  3000               	movlw	0
  4876  0352  1283               	bcf	3,5	;RP0=0, select bank0
  4877  0353  1303               	bcf	3,6	;RP1=0, select bank0
  4878  0354  00C1               	movwf	___flmul@prod+3
  4879  0355  3000               	movlw	0
  4880  0356  00C0               	movwf	___flmul@prod+2
  4881  0357  3000               	movlw	0
  4882  0358  00BF               	movwf	___flmul@prod+1
  4883  0359  3000               	movlw	0
  4884  035A  00BE               	movwf	___flmul@prod
  4885  035B                     l2161:
  4886  035B  01B7               	clrf	___flmul@sign
  4887  035C  2B77               	goto	l676
  4888  035D                     l2163:
  4889  035D  1283               	bcf	3,5	;RP0=0, select bank0
  4890  035E  1303               	bcf	3,6	;RP1=0, select bank0
  4891  035F  0842               	movf	___flmul@temp,w
  4892  0360  00B2               	movwf	??___flmul
  4893  0361  0832               	movf	??___flmul,w
  4894  0362  00BD               	movwf	___flmul@bexp
  4895  0363  30FF               	movlw	255
  4896  0364  05BE               	andwf	___flmul@prod,f
  4897  0365  30FF               	movlw	255
  4898  0366  05BF               	andwf	___flmul@prod+1,f
  4899  0367  307F               	movlw	127
  4900  0368  05C0               	andwf	___flmul@prod+2,f
  4901  0369  3000               	movlw	0
  4902  036A  05C1               	andwf	___flmul@prod+3,f
  4903  036B                     l2165:
  4904  036B  1C3D               	btfss	___flmul@bexp,0
  4905  036C  2B6E               	goto	u3301
  4906  036D  2B6F               	goto	u3300
  4907  036E                     u3301:
  4908  036E  2B70               	goto	l2169
  4909  036F                     u3300:
  4910  036F                     l2167:
  4911  036F  17C0               	bsf	___flmul@prod+2,7
  4912  0370                     l2169:
  4913  0370  083D               	movf	___flmul@bexp,w
  4914  0371  00B2               	movwf	??___flmul
  4915  0372  1003               	clrc
  4916  0373  0C32               	rrf	??___flmul,w
  4917  0374  00B3               	movwf	??___flmul+1
  4918  0375  0833               	movf	??___flmul+1,w
  4919  0376  00C1               	movwf	___flmul@prod+3
  4920  0377                     l676:
  4921  0377  0837               	movf	___flmul@sign,w
  4922  0378  00B2               	movwf	??___flmul
  4923  0379  0832               	movf	??___flmul,w
  4924  037A  04C1               	iorwf	___flmul@prod+3,f
  4925  037B                     l2171:
  4926  037B  0841               	movf	___flmul@prod+3,w
  4927  037C  00AD               	movwf	?___flmul+3
  4928  037D  0840               	movf	___flmul@prod+2,w
  4929  037E  00AC               	movwf	?___flmul+2
  4930  037F  083F               	movf	___flmul@prod+1,w
  4931  0380  00AB               	movwf	?___flmul+1
  4932  0381  083E               	movf	___flmul@prod,w
  4933  0382  00AA               	movwf	?___flmul
  4934  0383                     l664:
  4935  0383  0008               	return
  4936  0384                     __end_of___flmul:
  4937                           
  4938                           	psect	text13
  4939  0ACF                     __ptext13:	
  4940 ;; *************** function __Umul8_16 *****************
  4941 ;; Defined at:
  4942 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  4943 ;; Parameters:    Size  Location     Type
  4944 ;;  multiplier      1    wreg     unsigned char 
  4945 ;;  multiplicand    1    5[COMMON] unsigned char 
  4946 ;; Auto vars:     Size  Location     Type
  4947 ;;  multiplier      1    4[BANK0 ] unsigned char 
  4948 ;;  word_mpld       2    2[BANK0 ] unsigned int 
  4949 ;;  product         2    0[BANK0 ] unsigned int 
  4950 ;; Return value:  Size  Location     Type
  4951 ;;                  2    5[COMMON] unsigned int 
  4952 ;; Registers used:
  4953 ;;		wreg, status,2, status,0
  4954 ;; Tracked objects:
  4955 ;;		On entry : 0/0
  4956 ;;		On exit  : 0/0
  4957 ;;		Unchanged: 0/0
  4958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4959 ;;      Params:         2       0       0       0       0
  4960 ;;      Locals:         0       5       0       0       0
  4961 ;;      Temps:          2       0       0       0       0
  4962 ;;      Totals:         4       5       0       0       0
  4963 ;;Total ram usage:        9 bytes
  4964 ;; Hardware stack levels used:    1
  4965 ;; Hardware stack levels required when called:    2
  4966 ;; This function calls:
  4967 ;;		Nothing
  4968 ;; This function is called by:
  4969 ;;		___flmul
  4970 ;; This function uses a non-reentrant model
  4971 ;;
  4972                           
  4973                           
  4974                           ;psect for function __Umul8_16
  4975  0ACF                     __Umul8_16:
  4976                           
  4977                           ;incstack = 0
  4978                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  4979                           ;__Umul8_16@multiplier stored from wreg
  4980  0ACF  1283               	bcf	3,5	;RP0=0, select bank0
  4981  0AD0  1303               	bcf	3,6	;RP1=0, select bank0
  4982  0AD1  00A4               	movwf	__Umul8_16@multiplier
  4983  0AD2                     l1831:
  4984  0AD2  01A0               	clrf	__Umul8_16@product
  4985  0AD3  01A1               	clrf	__Umul8_16@product+1
  4986  0AD4                     l1833:
  4987  0AD4  0875               	movf	__Umul8_16@multiplicand,w
  4988  0AD5  00F7               	movwf	??__Umul8_16
  4989  0AD6  01F8               	clrf	??__Umul8_16+1
  4990  0AD7  0877               	movf	??__Umul8_16,w
  4991  0AD8  00A2               	movwf	__Umul8_16@word_mpld
  4992  0AD9  0878               	movf	??__Umul8_16+1,w
  4993  0ADA  00A3               	movwf	__Umul8_16@word_mpld+1
  4994  0ADB                     l1835:
  4995  0ADB  1C24               	btfss	__Umul8_16@multiplier,0
  4996  0ADC  2ADE               	goto	u2521
  4997  0ADD  2ADF               	goto	u2520
  4998  0ADE                     u2521:
  4999  0ADE  2AE5               	goto	l683
  5000  0ADF                     u2520:
  5001  0ADF                     l1837:
  5002  0ADF  0822               	movf	__Umul8_16@word_mpld,w
  5003  0AE0  07A0               	addwf	__Umul8_16@product,f
  5004  0AE1  1803               	skipnc
  5005  0AE2  0AA1               	incf	__Umul8_16@product+1,f
  5006  0AE3  0823               	movf	__Umul8_16@word_mpld+1,w
  5007  0AE4  07A1               	addwf	__Umul8_16@product+1,f
  5008  0AE5                     l683:
  5009  0AE5  3001               	movlw	1
  5010  0AE6                     u2535:
  5011  0AE6  1003               	clrc
  5012  0AE7  0DA2               	rlf	__Umul8_16@word_mpld,f
  5013  0AE8  0DA3               	rlf	__Umul8_16@word_mpld+1,f
  5014  0AE9  3EFF               	addlw	-1
  5015  0AEA  1D03               	skipz
  5016  0AEB  2AE6               	goto	u2535
  5017  0AEC  1003               	clrc
  5018  0AED  0CA4               	rrf	__Umul8_16@multiplier,f
  5019  0AEE                     l1839:
  5020  0AEE  0824               	movf	__Umul8_16@multiplier,w
  5021  0AEF  1D03               	btfss	3,2
  5022  0AF0  2AF2               	goto	u2541
  5023  0AF1  2AF3               	goto	u2540
  5024  0AF2                     u2541:
  5025  0AF2  2ADB               	goto	l1835
  5026  0AF3                     u2540:
  5027  0AF3                     l1841:
  5028  0AF3  0821               	movf	__Umul8_16@product+1,w
  5029  0AF4  00F6               	movwf	?__Umul8_16+1
  5030  0AF5  0820               	movf	__Umul8_16@product,w
  5031  0AF6  00F5               	movwf	?__Umul8_16
  5032  0AF7                     l685:
  5033  0AF7  0008               	return
  5034  0AF8                     __end_of__Umul8_16:
  5035                           
  5036                           	psect	text14
  5037  0B89                     __ptext14:	
  5038 ;; *************** function _UARTSendString *****************
  5039 ;; Defined at:
  5040 ;;		line 49 in file "USART.c"
  5041 ;; Parameters:    Size  Location     Type
  5042 ;;  str             2    6[COMMON] PTR const unsigned char 
  5043 ;;		 -> analogToString@string(5), STR_5(4), STR_3(3), 
  5044 ;;  max_length      1    8[COMMON] const unsigned char 
  5045 ;; Auto vars:     Size  Location     Type
  5046 ;;  i               2    3[BANK0 ] int 
  5047 ;; Return value:  Size  Location     Type
  5048 ;;                  1    wreg      void 
  5049 ;; Registers used:
  5050 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5051 ;; Tracked objects:
  5052 ;;		On entry : 0/0
  5053 ;;		On exit  : 0/0
  5054 ;;		Unchanged: 0/0
  5055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5056 ;;      Params:         3       0       0       0       0
  5057 ;;      Locals:         0       2       0       0       0
  5058 ;;      Temps:          0       3       0       0       0
  5059 ;;      Totals:         3       5       0       0       0
  5060 ;;Total ram usage:        8 bytes
  5061 ;; Hardware stack levels used:    1
  5062 ;; Hardware stack levels required when called:    3
  5063 ;; This function calls:
  5064 ;;		_UARTSendChar
  5065 ;; This function is called by:
  5066 ;;		_main
  5067 ;; This function uses a non-reentrant model
  5068 ;;
  5069                           
  5070                           
  5071                           ;psect for function _UARTSendString
  5072  0B89                     _UARTSendString:
  5073  0B89                     l2341:	
  5074                           ;incstack = 0
  5075                           ; Regs used in _UARTSendString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5076                           
  5077                           
  5078                           ;USART.c: 50:     int i = 0;
  5079  0B89  1283               	bcf	3,5	;RP0=0, select bank0
  5080  0B8A  1303               	bcf	3,6	;RP1=0, select bank0
  5081  0B8B  01A3               	clrf	UARTSendString@i
  5082  0B8C  01A4               	clrf	UARTSendString@i+1
  5083                           
  5084                           ;USART.c: 51:     for (i=0 ; i<max_length && str[i]!='\0' ; i++) {
  5085  0B8D  01A3               	clrf	UARTSendString@i
  5086  0B8E  01A4               	clrf	UARTSendString@i+1
  5087  0B8F  2BB4               	goto	l2347
  5088  0B90                     l2343:
  5089                           
  5090                           ;USART.c: 52:         UARTSendChar(str[i]);
  5091  0B90  0823               	movf	UARTSendString@i,w
  5092  0B91  0776               	addwf	UARTSendString@str,w
  5093  0B92  00A1               	movwf	??_UARTSendString+1
  5094  0B93  0877               	movf	UARTSendString@str+1,w
  5095  0B94  00A0               	movwf	??_UARTSendString
  5096  0B95  1803               	skipnc
  5097  0B96  0AA0               	incf	??_UARTSendString,f
  5098  0B97  1FA3               	btfss	UARTSendString@i,7
  5099  0B98  2B9A               	goto	u3520
  5100  0B99  03A0               	decf	??_UARTSendString,f
  5101  0B9A                     u3520:
  5102  0B9A  1283               	bcf	3,5	;RP0=0, select bank0
  5103  0B9B  1303               	bcf	3,6	;RP1=0, select bank0
  5104  0B9C  0820               	movf	??_UARTSendString,w
  5105  0B9D  00A2               	movwf	??_UARTSendString+2
  5106  0B9E  0822               	movf	??_UARTSendString+2,w
  5107  0B9F  00FF               	movwf	btemp+1
  5108  0BA0  0821               	movf	??_UARTSendString+1,w
  5109  0BA1  0084               	movwf	4
  5110  0BA2  120A  158A  2000  120A  158A  	fcall	stringtab
  5111  0BA7  120A  158A  21DD  120A  158A  	fcall	_UARTSendChar
  5112  0BAC                     l2345:
  5113                           
  5114                           ;USART.c: 53:     }
  5115  0BAC  3001               	movlw	1
  5116  0BAD  1283               	bcf	3,5	;RP0=0, select bank0
  5117  0BAE  1303               	bcf	3,6	;RP1=0, select bank0
  5118  0BAF  07A3               	addwf	UARTSendString@i,f
  5119  0BB0  1803               	skipnc
  5120  0BB1  0AA4               	incf	UARTSendString@i+1,f
  5121  0BB2  3000               	movlw	0
  5122  0BB3  07A4               	addwf	UARTSendString@i+1,f
  5123  0BB4                     l2347:
  5124  0BB4  0824               	movf	UARTSendString@i+1,w
  5125  0BB5  3A80               	xorlw	128
  5126  0BB6  00A0               	movwf	??_UARTSendString
  5127  0BB7  3080               	movlw	128
  5128  0BB8  0220               	subwf	??_UARTSendString,w
  5129  0BB9  1D03               	skipz
  5130  0BBA  2BBD               	goto	u3535
  5131  0BBB  0878               	movf	UARTSendString@max_length,w
  5132  0BBC  0223               	subwf	UARTSendString@i,w
  5133  0BBD                     u3535:
  5134  0BBD  1803               	skipnc
  5135  0BBE  2BC0               	goto	u3531
  5136  0BBF  2BC1               	goto	u3530
  5137  0BC0                     u3531:
  5138  0BC0  2BDF               	goto	l144
  5139  0BC1                     u3530:
  5140  0BC1                     l2349:
  5141  0BC1  1283               	bcf	3,5	;RP0=0, select bank0
  5142  0BC2  1303               	bcf	3,6	;RP1=0, select bank0
  5143  0BC3  0823               	movf	UARTSendString@i,w
  5144  0BC4  0776               	addwf	UARTSendString@str,w
  5145  0BC5  00A1               	movwf	??_UARTSendString+1
  5146  0BC6  0877               	movf	UARTSendString@str+1,w
  5147  0BC7  00A0               	movwf	??_UARTSendString
  5148  0BC8  1803               	skipnc
  5149  0BC9  0AA0               	incf	??_UARTSendString,f
  5150  0BCA  1FA3               	btfss	UARTSendString@i,7
  5151  0BCB  2BCD               	goto	u3540
  5152  0BCC  03A0               	decf	??_UARTSendString,f
  5153  0BCD                     u3540:
  5154  0BCD  1283               	bcf	3,5	;RP0=0, select bank0
  5155  0BCE  1303               	bcf	3,6	;RP1=0, select bank0
  5156  0BCF  0820               	movf	??_UARTSendString,w
  5157  0BD0  00A2               	movwf	??_UARTSendString+2
  5158  0BD1  0822               	movf	??_UARTSendString+2,w
  5159  0BD2  00FF               	movwf	btemp+1
  5160  0BD3  0821               	movf	??_UARTSendString+1,w
  5161  0BD4  0084               	movwf	4
  5162  0BD5  120A  158A  2000  120A  158A  	fcall	stringtab
  5163  0BDA  3A00               	xorlw	0
  5164  0BDB  1D03               	skipz
  5165  0BDC  2BDE               	goto	u3551
  5166  0BDD  2BDF               	goto	u3550
  5167  0BDE                     u3551:
  5168  0BDE  2B90               	goto	l2343
  5169  0BDF                     u3550:
  5170  0BDF                     l144:
  5171  0BDF  0008               	return
  5172  0BE0                     __end_of_UARTSendString:
  5173                           
  5174                           	psect	text15
  5175  09DD                     __ptext15:	
  5176 ;; *************** function _UARTSendChar *****************
  5177 ;; Defined at:
  5178 ;;		line 39 in file "USART.c"
  5179 ;; Parameters:    Size  Location     Type
  5180 ;;  c               1    wreg     const unsigned char 
  5181 ;; Auto vars:     Size  Location     Type
  5182 ;;  c               1    5[COMMON] const unsigned char 
  5183 ;; Return value:  Size  Location     Type
  5184 ;;                  1    wreg      void 
  5185 ;; Registers used:
  5186 ;;		wreg
  5187 ;; Tracked objects:
  5188 ;;		On entry : 0/0
  5189 ;;		On exit  : 0/0
  5190 ;;		Unchanged: 0/0
  5191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5192 ;;      Params:         0       0       0       0       0
  5193 ;;      Locals:         1       0       0       0       0
  5194 ;;      Temps:          0       0       0       0       0
  5195 ;;      Totals:         1       0       0       0       0
  5196 ;;Total ram usage:        1 bytes
  5197 ;; Hardware stack levels used:    1
  5198 ;; Hardware stack levels required when called:    2
  5199 ;; This function calls:
  5200 ;;		Nothing
  5201 ;; This function is called by:
  5202 ;;		_UARTSendString
  5203 ;; This function uses a non-reentrant model
  5204 ;;
  5205                           
  5206                           
  5207                           ;psect for function _UARTSendChar
  5208  09DD                     _UARTSendChar:
  5209                           
  5210                           ;incstack = 0
  5211                           ; Regs used in _UARTSendChar: [wreg]
  5212                           ;UARTSendChar@c stored from wreg
  5213  09DD  00F5               	movwf	UARTSendChar@c
  5214  09DE                     l1869:
  5215  09DE                     l133:	
  5216                           ;USART.c: 40:     while (TXSTAbits.TRMT == 0);
  5217                           
  5218  09DE  1683               	bsf	3,5	;RP0=1, select bank1
  5219  09DF  1303               	bcf	3,6	;RP1=0, select bank1
  5220  09E0  1C98               	btfss	24,1	;volatile
  5221  09E1  29E3               	goto	u2551
  5222  09E2  29E4               	goto	u2550
  5223  09E3                     u2551:
  5224  09E3  29DE               	goto	l133
  5225  09E4                     u2550:
  5226  09E4                     l1871:
  5227                           
  5228                           ;USART.c: 41:     TXREG = c;
  5229  09E4  0875               	movf	UARTSendChar@c,w
  5230  09E5  1283               	bcf	3,5	;RP0=0, select bank0
  5231  09E6  1303               	bcf	3,6	;RP1=0, select bank0
  5232  09E7  0099               	movwf	25	;volatile
  5233  09E8                     l136:
  5234  09E8  0008               	return
  5235  09E9                     __end_of_UARTSendChar:
  5236                           
  5237                           	psect	text16
  5238  09F7                     __ptext16:	
  5239 ;; *************** function _UARTReadChar *****************
  5240 ;; Defined at:
  5241 ;;		line 68 in file "USART.c"
  5242 ;; Parameters:    Size  Location     Type
  5243 ;;		None
  5244 ;; Auto vars:     Size  Location     Type
  5245 ;;		None
  5246 ;; Return value:  Size  Location     Type
  5247 ;;                  1    wreg      unsigned char 
  5248 ;; Registers used:
  5249 ;;		wreg, status,2, status,0, pclath, cstack
  5250 ;; Tracked objects:
  5251 ;;		On entry : 0/0
  5252 ;;		On exit  : 0/0
  5253 ;;		Unchanged: 0/0
  5254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5255 ;;      Params:         0       0       0       0       0
  5256 ;;      Locals:         0       0       0       0       0
  5257 ;;      Temps:          0       0       0       0       0
  5258 ;;      Totals:         0       0       0       0       0
  5259 ;;Total ram usage:        0 bytes
  5260 ;; Hardware stack levels used:    1
  5261 ;; Hardware stack levels required when called:    3
  5262 ;; This function calls:
  5263 ;;		_UARTDataReady
  5264 ;; This function is called by:
  5265 ;;		_main
  5266 ;;		_UARTReadString
  5267 ;; This function uses a non-reentrant model
  5268 ;;
  5269                           
  5270                           
  5271                           ;psect for function _UARTReadChar
  5272  09F7                     _UARTReadChar:
  5273  09F7                     l2351:	
  5274                           ;incstack = 0
  5275                           ; Regs used in _UARTReadChar: [wreg+status,2+status,0+pclath+cstack]
  5276                           
  5277  09F7                     l2353:	
  5278                           ;USART.c: 69:     while (!UARTDataReady());
  5279                           
  5280  09F7  120A  158A  21D6  120A  158A  	fcall	_UARTDataReady
  5281  09FC  3A00               	xorlw	0
  5282  09FD  1903               	skipnz
  5283  09FE  2A00               	goto	u3561
  5284  09FF  2A01               	goto	u3560
  5285  0A00                     u3561:
  5286  0A00  29F7               	goto	l2353
  5287  0A01                     u3560:
  5288  0A01                     l2355:
  5289                           
  5290                           ;USART.c: 70:     return RCREG;
  5291  0A01  1283               	bcf	3,5	;RP0=0, select bank0
  5292  0A02  1303               	bcf	3,6	;RP1=0, select bank0
  5293  0A03  081A               	movf	26,w	;volatile
  5294  0A04                     l153:
  5295  0A04  0008               	return
  5296  0A05                     __end_of_UARTReadChar:
  5297                           
  5298                           	psect	text17
  5299  09D6                     __ptext17:	
  5300 ;; *************** function _UARTDataReady *****************
  5301 ;; Defined at:
  5302 ;;		line 60 in file "USART.c"
  5303 ;; Parameters:    Size  Location     Type
  5304 ;;		None
  5305 ;; Auto vars:     Size  Location     Type
  5306 ;;		None
  5307 ;; Return value:  Size  Location     Type
  5308 ;;                  1    wreg      unsigned char 
  5309 ;; Registers used:
  5310 ;;		wreg, status,2, status,0
  5311 ;; Tracked objects:
  5312 ;;		On entry : 0/0
  5313 ;;		On exit  : 0/0
  5314 ;;		Unchanged: 0/0
  5315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5316 ;;      Params:         0       0       0       0       0
  5317 ;;      Locals:         0       0       0       0       0
  5318 ;;      Temps:          1       0       0       0       0
  5319 ;;      Totals:         1       0       0       0       0
  5320 ;;Total ram usage:        1 bytes
  5321 ;; Hardware stack levels used:    1
  5322 ;; Hardware stack levels required when called:    2
  5323 ;; This function calls:
  5324 ;;		Nothing
  5325 ;; This function is called by:
  5326 ;;		_main
  5327 ;;		_UARTReadChar
  5328 ;; This function uses a non-reentrant model
  5329 ;;
  5330                           
  5331                           
  5332                           ;psect for function _UARTDataReady
  5333  09D6                     _UARTDataReady:
  5334  09D6                     l1845:	
  5335                           ;incstack = 0
  5336                           ; Regs used in _UARTDataReady: [wreg+status,2+status,0]
  5337                           
  5338                           
  5339                           ;USART.c: 61:     return PIR1bits.RCIF;
  5340  09D6  1283               	bcf	3,5	;RP0=0, select bank0
  5341  09D7  1303               	bcf	3,6	;RP1=0, select bank0
  5342  09D8  0E0C               	swapf	12,w	;volatile
  5343  09D9  00F5               	movwf	??_UARTDataReady
  5344  09DA  0C75               	rrf	??_UARTDataReady,w
  5345  09DB  3901               	andlw	1
  5346  09DC                     l147:
  5347  09DC  0008               	return
  5348  09DD                     __end_of_UARTDataReady:
  5349                           
  5350                           	psect	text18
  5351  0D6A                     __ptext18:	
  5352 ;; *************** function _UARTInit *****************
  5353 ;; Defined at:
  5354 ;;		line 8 in file "USART.c"
  5355 ;; Parameters:    Size  Location     Type
  5356 ;;  baud_rate       4   13[BANK0 ] const unsigned long 
  5357 ;;  BRGH            1   17[BANK0 ] const unsigned char 
  5358 ;; Auto vars:     Size  Location     Type
  5359 ;;		None
  5360 ;; Return value:  Size  Location     Type
  5361 ;;                  1    wreg      void 
  5362 ;; Registers used:
  5363 ;;		wreg, status,2, status,0, pclath, cstack
  5364 ;; Tracked objects:
  5365 ;;		On entry : 0/0
  5366 ;;		On exit  : 0/0
  5367 ;;		Unchanged: 0/0
  5368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5369 ;;      Params:         0       5       0       0       0
  5370 ;;      Locals:         0       0       0       0       0
  5371 ;;      Temps:          0       4       0       0       0
  5372 ;;      Totals:         0       9       0       0       0
  5373 ;;Total ram usage:        9 bytes
  5374 ;; Hardware stack levels used:    1
  5375 ;; Hardware stack levels required when called:    3
  5376 ;; This function calls:
  5377 ;;		___lldiv
  5378 ;; This function is called by:
  5379 ;;		_main
  5380 ;; This function uses a non-reentrant model
  5381 ;;
  5382                           
  5383                           
  5384                           ;psect for function _UARTInit
  5385  0D6A                     _UARTInit:
  5386  0D6A                     l2247:	
  5387                           ;incstack = 0
  5388                           ; Regs used in _UARTInit: [wreg+status,2+status,0+pclath+cstack]
  5389                           
  5390                           
  5391                           ;USART.c: 10:     if (BRGH == 0) {
  5392  0D6A  1283               	bcf	3,5	;RP0=0, select bank0
  5393  0D6B  1303               	bcf	3,6	;RP1=0, select bank0
  5394  0D6C  0831               	movf	UARTInit@BRGH,w
  5395  0D6D  1D03               	btfss	3,2
  5396  0D6E  2D70               	goto	u3451
  5397  0D6F  2D71               	goto	u3450
  5398  0D70                     u3451:
  5399  0D70  2DA0               	goto	l2253
  5400  0D71                     u3450:
  5401  0D71                     l2249:
  5402                           
  5403                           ;USART.c: 11:         SPBRG = 4000000/(64*baud_rate) - 1;
  5404  0D71  082D               	movf	UARTInit@baud_rate,w
  5405  0D72  00B2               	movwf	??_UARTInit
  5406  0D73  082E               	movf	UARTInit@baud_rate+1,w
  5407  0D74  00B3               	movwf	??_UARTInit+1
  5408  0D75  082F               	movf	UARTInit@baud_rate+2,w
  5409  0D76  00B4               	movwf	??_UARTInit+2
  5410  0D77  0830               	movf	UARTInit@baud_rate+3,w
  5411  0D78  00B5               	movwf	??_UARTInit+3
  5412  0D79  3006               	movlw	6
  5413  0D7A                     u3465:
  5414  0D7A  1003               	clrc
  5415  0D7B  0DB2               	rlf	??_UARTInit,f
  5416  0D7C  0DB3               	rlf	??_UARTInit+1,f
  5417  0D7D  0DB4               	rlf	??_UARTInit+2,f
  5418  0D7E  0DB5               	rlf	??_UARTInit+3,f
  5419  0D7F                     u3460:
  5420  0D7F  3EFF               	addlw	-1
  5421  0D80  1D03               	skipz
  5422  0D81  2D7A               	goto	u3465
  5423  0D82  0835               	movf	??_UARTInit+3,w
  5424  0D83  00A3               	movwf	___lldiv@divisor+3
  5425  0D84  0834               	movf	??_UARTInit+2,w
  5426  0D85  00A2               	movwf	___lldiv@divisor+2
  5427  0D86  0833               	movf	??_UARTInit+1,w
  5428  0D87  00A1               	movwf	___lldiv@divisor+1
  5429  0D88  0832               	movf	??_UARTInit,w
  5430  0D89  00A0               	movwf	___lldiv@divisor
  5431  0D8A  3000               	movlw	0
  5432  0D8B  00A7               	movwf	___lldiv@dividend+3
  5433  0D8C  303D               	movlw	61
  5434  0D8D  00A6               	movwf	___lldiv@dividend+2
  5435  0D8E  3009               	movlw	9
  5436  0D8F  00A5               	movwf	___lldiv@dividend+1
  5437  0D90  3000               	movlw	0
  5438  0D91  00A4               	movwf	___lldiv@dividend
  5439  0D92  120A  158A  2499  120A  158A  	fcall	___lldiv
  5440  0D97  1283               	bcf	3,5	;RP0=0, select bank0
  5441  0D98  1303               	bcf	3,6	;RP1=0, select bank0
  5442  0D99  0820               	movf	?___lldiv,w
  5443  0D9A  3EFF               	addlw	255
  5444  0D9B  1683               	bsf	3,5	;RP0=1, select bank1
  5445  0D9C  1303               	bcf	3,6	;RP1=0, select bank1
  5446  0D9D  0099               	movwf	25	;volatile
  5447  0D9E                     l2251:
  5448                           
  5449                           ;USART.c: 12:         TXSTAbits.BRGH = 0;
  5450  0D9E  1118               	bcf	24,2	;volatile
  5451                           
  5452                           ;USART.c: 13:     } else {
  5453  0D9F  2DCE               	goto	l2257
  5454  0DA0                     l2253:
  5455                           
  5456                           ;USART.c: 14:         SPBRG = 4000000/(16*baud_rate) - 1;
  5457  0DA0  082D               	movf	UARTInit@baud_rate,w
  5458  0DA1  00B2               	movwf	??_UARTInit
  5459  0DA2  082E               	movf	UARTInit@baud_rate+1,w
  5460  0DA3  00B3               	movwf	??_UARTInit+1
  5461  0DA4  082F               	movf	UARTInit@baud_rate+2,w
  5462  0DA5  00B4               	movwf	??_UARTInit+2
  5463  0DA6  0830               	movf	UARTInit@baud_rate+3,w
  5464  0DA7  00B5               	movwf	??_UARTInit+3
  5465  0DA8  3004               	movlw	4
  5466  0DA9                     u3475:
  5467  0DA9  1003               	clrc
  5468  0DAA  0DB2               	rlf	??_UARTInit,f
  5469  0DAB  0DB3               	rlf	??_UARTInit+1,f
  5470  0DAC  0DB4               	rlf	??_UARTInit+2,f
  5471  0DAD  0DB5               	rlf	??_UARTInit+3,f
  5472  0DAE                     u3470:
  5473  0DAE  3EFF               	addlw	-1
  5474  0DAF  1D03               	skipz
  5475  0DB0  2DA9               	goto	u3475
  5476  0DB1  0835               	movf	??_UARTInit+3,w
  5477  0DB2  00A3               	movwf	___lldiv@divisor+3
  5478  0DB3  0834               	movf	??_UARTInit+2,w
  5479  0DB4  00A2               	movwf	___lldiv@divisor+2
  5480  0DB5  0833               	movf	??_UARTInit+1,w
  5481  0DB6  00A1               	movwf	___lldiv@divisor+1
  5482  0DB7  0832               	movf	??_UARTInit,w
  5483  0DB8  00A0               	movwf	___lldiv@divisor
  5484  0DB9  3000               	movlw	0
  5485  0DBA  00A7               	movwf	___lldiv@dividend+3
  5486  0DBB  303D               	movlw	61
  5487  0DBC  00A6               	movwf	___lldiv@dividend+2
  5488  0DBD  3009               	movlw	9
  5489  0DBE  00A5               	movwf	___lldiv@dividend+1
  5490  0DBF  3000               	movlw	0
  5491  0DC0  00A4               	movwf	___lldiv@dividend
  5492  0DC1  120A  158A  2499  120A  158A  	fcall	___lldiv
  5493  0DC6  1283               	bcf	3,5	;RP0=0, select bank0
  5494  0DC7  1303               	bcf	3,6	;RP1=0, select bank0
  5495  0DC8  0820               	movf	?___lldiv,w
  5496  0DC9  3EFF               	addlw	255
  5497  0DCA  1683               	bsf	3,5	;RP0=1, select bank1
  5498  0DCB  1303               	bcf	3,6	;RP1=0, select bank1
  5499  0DCC  0099               	movwf	25	;volatile
  5500  0DCD                     l2255:
  5501                           
  5502                           ;USART.c: 15:         TXSTAbits.BRGH = 1;
  5503  0DCD  1518               	bsf	24,2	;volatile
  5504  0DCE                     l2257:
  5505                           
  5506                           ;USART.c: 19:     TXSTAbits.TX9 = 0;
  5507  0DCE  1318               	bcf	24,6	;volatile
  5508  0DCF                     l2259:
  5509                           
  5510                           ;USART.c: 20:     TXSTAbits.TXEN = 1;
  5511  0DCF  1698               	bsf	24,5	;volatile
  5512  0DD0                     l2261:
  5513                           
  5514                           ;USART.c: 21:     TXSTAbits.SYNC = 0;
  5515  0DD0  1218               	bcf	24,4	;volatile
  5516  0DD1                     l2263:
  5517                           
  5518                           ;USART.c: 24:     RCSTAbits.SPEN = 1;
  5519  0DD1  1283               	bcf	3,5	;RP0=0, select bank0
  5520  0DD2  1303               	bcf	3,6	;RP1=0, select bank0
  5521  0DD3  1798               	bsf	24,7	;volatile
  5522  0DD4                     l2265:
  5523                           
  5524                           ;USART.c: 25:     RCSTAbits.RX9 = 0;
  5525  0DD4  1318               	bcf	24,6	;volatile
  5526  0DD5                     l2267:
  5527                           
  5528                           ;USART.c: 26:     RCSTAbits.CREN = 1;
  5529  0DD5  1618               	bsf	24,4	;volatile
  5530  0DD6                     l2269:
  5531                           
  5532                           ;USART.c: 27:     RCSTAbits.FERR = 0;
  5533  0DD6  1118               	bcf	24,2	;volatile
  5534  0DD7                     l2271:
  5535                           
  5536                           ;USART.c: 28:     RCSTAbits.OERR = 0;
  5537  0DD7  1098               	bcf	24,1	;volatile
  5538  0DD8                     l2273:
  5539                           
  5540                           ;USART.c: 31:     TRISCbits.TRISC7 = 1;
  5541  0DD8  1683               	bsf	3,5	;RP0=1, select bank1
  5542  0DD9  1303               	bcf	3,6	;RP1=0, select bank1
  5543  0DDA  1787               	bsf	7,7	;volatile
  5544  0DDB                     l2275:
  5545                           
  5546                           ;USART.c: 32:     TRISCbits.TRISC6 = 0;
  5547  0DDB  1307               	bcf	7,6	;volatile
  5548  0DDC                     l130:
  5549  0DDC  0008               	return
  5550  0DDD                     __end_of_UARTInit:
  5551                           
  5552                           	psect	text19
  5553  0C99                     __ptext19:	
  5554 ;; *************** function ___lldiv *****************
  5555 ;; Defined at:
  5556 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  5557 ;; Parameters:    Size  Location     Type
  5558 ;;  divisor         4    0[BANK0 ] unsigned long 
  5559 ;;  dividend        4    4[BANK0 ] unsigned long 
  5560 ;; Auto vars:     Size  Location     Type
  5561 ;;  quotient        4    8[BANK0 ] unsigned long 
  5562 ;;  counter         1   12[BANK0 ] unsigned char 
  5563 ;; Return value:  Size  Location     Type
  5564 ;;                  4    0[BANK0 ] unsigned long 
  5565 ;; Registers used:
  5566 ;;		wreg, status,2, status,0
  5567 ;; Tracked objects:
  5568 ;;		On entry : 0/0
  5569 ;;		On exit  : 0/0
  5570 ;;		Unchanged: 0/0
  5571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5572 ;;      Params:         0       8       0       0       0
  5573 ;;      Locals:         0       5       0       0       0
  5574 ;;      Temps:          1       0       0       0       0
  5575 ;;      Totals:         1      13       0       0       0
  5576 ;;Total ram usage:       14 bytes
  5577 ;; Hardware stack levels used:    1
  5578 ;; Hardware stack levels required when called:    2
  5579 ;; This function calls:
  5580 ;;		Nothing
  5581 ;; This function is called by:
  5582 ;;		_UARTInit
  5583 ;; This function uses a non-reentrant model
  5584 ;;
  5585                           
  5586                           
  5587                           ;psect for function ___lldiv
  5588  0C99                     ___lldiv:
  5589  0C99                     l1887:	
  5590                           ;incstack = 0
  5591                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5592                           
  5593  0C99  3000               	movlw	0
  5594  0C9A  1283               	bcf	3,5	;RP0=0, select bank0
  5595  0C9B  1303               	bcf	3,6	;RP1=0, select bank0
  5596  0C9C  00AB               	movwf	___lldiv@quotient+3
  5597  0C9D  3000               	movlw	0
  5598  0C9E  00AA               	movwf	___lldiv@quotient+2
  5599  0C9F  3000               	movlw	0
  5600  0CA0  00A9               	movwf	___lldiv@quotient+1
  5601  0CA1  3000               	movlw	0
  5602  0CA2  00A8               	movwf	___lldiv@quotient
  5603  0CA3  0823               	movf	___lldiv@divisor+3,w
  5604  0CA4  0422               	iorwf	___lldiv@divisor+2,w
  5605  0CA5  0421               	iorwf	___lldiv@divisor+1,w
  5606  0CA6  0420               	iorwf	___lldiv@divisor,w
  5607  0CA7  1903               	skipnz
  5608  0CA8  2CAA               	goto	u2581
  5609  0CA9  2CAB               	goto	u2580
  5610  0CAA                     u2581:
  5611  0CAA  2CF8               	goto	l1907
  5612  0CAB                     u2580:
  5613  0CAB                     l1889:
  5614  0CAB  01AC               	clrf	___lldiv@counter
  5615  0CAC  0AAC               	incf	___lldiv@counter,f
  5616  0CAD  2CBB               	goto	l1893
  5617  0CAE                     l1891:
  5618  0CAE  3001               	movlw	1
  5619  0CAF  00F5               	movwf	??___lldiv
  5620  0CB0                     u2595:
  5621  0CB0  1003               	clrc
  5622  0CB1  0DA0               	rlf	___lldiv@divisor,f
  5623  0CB2  0DA1               	rlf	___lldiv@divisor+1,f
  5624  0CB3  0DA2               	rlf	___lldiv@divisor+2,f
  5625  0CB4  0DA3               	rlf	___lldiv@divisor+3,f
  5626  0CB5  0BF5               	decfsz	??___lldiv,f
  5627  0CB6  2CB0               	goto	u2595
  5628  0CB7  3001               	movlw	1
  5629  0CB8  00F5               	movwf	??___lldiv
  5630  0CB9  0875               	movf	??___lldiv,w
  5631  0CBA  07AC               	addwf	___lldiv@counter,f
  5632  0CBB                     l1893:
  5633  0CBB  1FA3               	btfss	___lldiv@divisor+3,7
  5634  0CBC  2CBE               	goto	u2601
  5635  0CBD  2CBF               	goto	u2600
  5636  0CBE                     u2601:
  5637  0CBE  2CAE               	goto	l1891
  5638  0CBF                     u2600:
  5639  0CBF                     l1895:
  5640  0CBF  3001               	movlw	1
  5641  0CC0  00F5               	movwf	??___lldiv
  5642  0CC1                     u2615:
  5643  0CC1  1003               	clrc
  5644  0CC2  0DA8               	rlf	___lldiv@quotient,f
  5645  0CC3  0DA9               	rlf	___lldiv@quotient+1,f
  5646  0CC4  0DAA               	rlf	___lldiv@quotient+2,f
  5647  0CC5  0DAB               	rlf	___lldiv@quotient+3,f
  5648  0CC6  0BF5               	decfsz	??___lldiv,f
  5649  0CC7  2CC1               	goto	u2615
  5650  0CC8                     l1897:
  5651  0CC8  0823               	movf	___lldiv@divisor+3,w
  5652  0CC9  0227               	subwf	___lldiv@dividend+3,w
  5653  0CCA  1D03               	skipz
  5654  0CCB  2CD6               	goto	u2625
  5655  0CCC  0822               	movf	___lldiv@divisor+2,w
  5656  0CCD  0226               	subwf	___lldiv@dividend+2,w
  5657  0CCE  1D03               	skipz
  5658  0CCF  2CD6               	goto	u2625
  5659  0CD0  0821               	movf	___lldiv@divisor+1,w
  5660  0CD1  0225               	subwf	___lldiv@dividend+1,w
  5661  0CD2  1D03               	skipz
  5662  0CD3  2CD6               	goto	u2625
  5663  0CD4  0820               	movf	___lldiv@divisor,w
  5664  0CD5  0224               	subwf	___lldiv@dividend,w
  5665  0CD6                     u2625:
  5666  0CD6  1C03               	skipc
  5667  0CD7  2CD9               	goto	u2621
  5668  0CD8  2CDA               	goto	u2620
  5669  0CD9                     u2621:
  5670  0CD9  2CE9               	goto	l1903
  5671  0CDA                     u2620:
  5672  0CDA                     l1899:
  5673  0CDA  0820               	movf	___lldiv@divisor,w
  5674  0CDB  02A4               	subwf	___lldiv@dividend,f
  5675  0CDC  0821               	movf	___lldiv@divisor+1,w
  5676  0CDD  1C03               	skipc
  5677  0CDE  0F21               	incfsz	___lldiv@divisor+1,w
  5678  0CDF  02A5               	subwf	___lldiv@dividend+1,f
  5679  0CE0  0822               	movf	___lldiv@divisor+2,w
  5680  0CE1  1C03               	skipc
  5681  0CE2  0F22               	incfsz	___lldiv@divisor+2,w
  5682  0CE3  02A6               	subwf	___lldiv@dividend+2,f
  5683  0CE4  0823               	movf	___lldiv@divisor+3,w
  5684  0CE5  1C03               	skipc
  5685  0CE6  0F23               	incfsz	___lldiv@divisor+3,w
  5686  0CE7  02A7               	subwf	___lldiv@dividend+3,f
  5687  0CE8                     l1901:
  5688  0CE8  1428               	bsf	___lldiv@quotient,0
  5689  0CE9                     l1903:
  5690  0CE9  3001               	movlw	1
  5691  0CEA                     u2635:
  5692  0CEA  1003               	clrc
  5693  0CEB  0CA3               	rrf	___lldiv@divisor+3,f
  5694  0CEC  0CA2               	rrf	___lldiv@divisor+2,f
  5695  0CED  0CA1               	rrf	___lldiv@divisor+1,f
  5696  0CEE  0CA0               	rrf	___lldiv@divisor,f
  5697  0CEF  3EFF               	addlw	-1
  5698  0CF0  1D03               	skipz
  5699  0CF1  2CEA               	goto	u2635
  5700  0CF2                     l1905:
  5701  0CF2  3001               	movlw	1
  5702  0CF3  02AC               	subwf	___lldiv@counter,f
  5703  0CF4  1D03               	btfss	3,2
  5704  0CF5  2CF7               	goto	u2641
  5705  0CF6  2CF8               	goto	u2640
  5706  0CF7                     u2641:
  5707  0CF7  2CBF               	goto	l1895
  5708  0CF8                     u2640:
  5709  0CF8                     l1907:
  5710  0CF8  082B               	movf	___lldiv@quotient+3,w
  5711  0CF9  00A3               	movwf	?___lldiv+3
  5712  0CFA  082A               	movf	___lldiv@quotient+2,w
  5713  0CFB  00A2               	movwf	?___lldiv+2
  5714  0CFC  0829               	movf	___lldiv@quotient+1,w
  5715  0CFD  00A1               	movwf	?___lldiv+1
  5716  0CFE  0828               	movf	___lldiv@quotient,w
  5717  0CFF  00A0               	movwf	?___lldiv
  5718  0D00                     l311:
  5719  0D00  0008               	return
  5720  0D01                     __end_of___lldiv:
  5721                           
  5722                           	psect	text20
  5723  0AF8                     __ptext20:	
  5724 ;; *************** function _LcdWriteString *****************
  5725 ;; Defined at:
  5726 ;;		line 64 in file "LCD.c"
  5727 ;; Parameters:    Size  Location     Type
  5728 ;;  value           2    0[BANK0 ] PTR const unsigned char 
  5729 ;;		 -> intToString@valor(4), analogToString@string(5), STR_4(3), STR_2(3), 
  5730 ;;		 -> STR_1(16), 
  5731 ;; Auto vars:     Size  Location     Type
  5732 ;;  i               2    5[BANK0 ] int 
  5733 ;; Return value:  Size  Location     Type
  5734 ;;                  1    wreg      void 
  5735 ;; Registers used:
  5736 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5737 ;; Tracked objects:
  5738 ;;		On entry : 0/0
  5739 ;;		On exit  : 0/0
  5740 ;;		Unchanged: 0/0
  5741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5742 ;;      Params:         0       2       0       0       0
  5743 ;;      Locals:         0       2       0       0       0
  5744 ;;      Temps:          0       3       0       0       0
  5745 ;;      Totals:         0       7       0       0       0
  5746 ;;Total ram usage:        7 bytes
  5747 ;; Hardware stack levels used:    1
  5748 ;; Hardware stack levels required when called:    4
  5749 ;; This function calls:
  5750 ;;		_LcdWriteChar
  5751 ;; This function is called by:
  5752 ;;		_main
  5753 ;; This function uses a non-reentrant model
  5754 ;;
  5755                           
  5756                           
  5757                           ;psect for function _LcdWriteString
  5758  0AF8                     _LcdWriteString:
  5759  0AF8                     l2303:	
  5760                           ;incstack = 0
  5761                           ; Regs used in _LcdWriteString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5762                           
  5763                           
  5764                           ;LCD.c: 66:     for (int i = 0; value[i] != '\0'; i++)
  5765  0AF8  1283               	bcf	3,5	;RP0=0, select bank0
  5766  0AF9  1303               	bcf	3,6	;RP1=0, select bank0
  5767  0AFA  01A5               	clrf	LcdWriteString@i
  5768  0AFB  01A6               	clrf	LcdWriteString@i+1
  5769  0AFC  2B21               	goto	l2309
  5770  0AFD                     l2305:
  5771                           
  5772                           ;LCD.c: 67:         LcdWriteChar(value[i]);
  5773  0AFD  0825               	movf	LcdWriteString@i,w
  5774  0AFE  0720               	addwf	LcdWriteString@value,w
  5775  0AFF  00A3               	movwf	??_LcdWriteString+1
  5776  0B00  0821               	movf	LcdWriteString@value+1,w
  5777  0B01  00A2               	movwf	??_LcdWriteString
  5778  0B02  1803               	skipnc
  5779  0B03  0AA2               	incf	??_LcdWriteString,f
  5780  0B04  1FA5               	btfss	LcdWriteString@i,7
  5781  0B05  2B07               	goto	u3490
  5782  0B06  03A2               	decf	??_LcdWriteString,f
  5783  0B07                     u3490:
  5784  0B07  1283               	bcf	3,5	;RP0=0, select bank0
  5785  0B08  1303               	bcf	3,6	;RP1=0, select bank0
  5786  0B09  0822               	movf	??_LcdWriteString,w
  5787  0B0A  00A4               	movwf	??_LcdWriteString+2
  5788  0B0B  0824               	movf	??_LcdWriteString+2,w
  5789  0B0C  00FF               	movwf	btemp+1
  5790  0B0D  0823               	movf	??_LcdWriteString+1,w
  5791  0B0E  0084               	movwf	4
  5792  0B0F  120A  158A  2000  120A  158A  	fcall	stringtab
  5793  0B14  120A  158A  222A  120A  158A  	fcall	_LcdWriteChar
  5794  0B19                     l2307:
  5795  0B19  3001               	movlw	1
  5796  0B1A  1283               	bcf	3,5	;RP0=0, select bank0
  5797  0B1B  1303               	bcf	3,6	;RP1=0, select bank0
  5798  0B1C  07A5               	addwf	LcdWriteString@i,f
  5799  0B1D  1803               	skipnc
  5800  0B1E  0AA6               	incf	LcdWriteString@i+1,f
  5801  0B1F  3000               	movlw	0
  5802  0B20  07A6               	addwf	LcdWriteString@i+1,f
  5803  0B21                     l2309:
  5804  0B21  0825               	movf	LcdWriteString@i,w
  5805  0B22  0720               	addwf	LcdWriteString@value,w
  5806  0B23  00A3               	movwf	??_LcdWriteString+1
  5807  0B24  0821               	movf	LcdWriteString@value+1,w
  5808  0B25  00A2               	movwf	??_LcdWriteString
  5809  0B26  1803               	skipnc
  5810  0B27  0AA2               	incf	??_LcdWriteString,f
  5811  0B28  1FA5               	btfss	LcdWriteString@i,7
  5812  0B29  2B2B               	goto	u3500
  5813  0B2A  03A2               	decf	??_LcdWriteString,f
  5814  0B2B                     u3500:
  5815  0B2B  1283               	bcf	3,5	;RP0=0, select bank0
  5816  0B2C  1303               	bcf	3,6	;RP1=0, select bank0
  5817  0B2D  0822               	movf	??_LcdWriteString,w
  5818  0B2E  00A4               	movwf	??_LcdWriteString+2
  5819  0B2F  0824               	movf	??_LcdWriteString+2,w
  5820  0B30  00FF               	movwf	btemp+1
  5821  0B31  0823               	movf	??_LcdWriteString+1,w
  5822  0B32  0084               	movwf	4
  5823  0B33  120A  158A  2000  120A  158A  	fcall	stringtab
  5824  0B38  3A00               	xorlw	0
  5825  0B39  1D03               	skipz
  5826  0B3A  2B3C               	goto	u3511
  5827  0B3B  2B3D               	goto	u3510
  5828  0B3C                     u3511:
  5829  0B3C  2AFD               	goto	l2305
  5830  0B3D                     u3510:
  5831  0B3D                     l105:
  5832  0B3D  0008               	return
  5833  0B3E                     __end_of_LcdWriteString:
  5834                           
  5835                           	psect	text21
  5836  0A2A                     __ptext21:	
  5837 ;; *************** function _LcdWriteChar *****************
  5838 ;; Defined at:
  5839 ;;		line 56 in file "LCD.c"
  5840 ;; Parameters:    Size  Location     Type
  5841 ;;  value           1    wreg     unsigned char 
  5842 ;; Auto vars:     Size  Location     Type
  5843 ;;  value           1    8[COMMON] unsigned char 
  5844 ;; Return value:  Size  Location     Type
  5845 ;;                  1    wreg      void 
  5846 ;; Registers used:
  5847 ;;		wreg, status,2, status,0, pclath, cstack
  5848 ;; Tracked objects:
  5849 ;;		On entry : 0/0
  5850 ;;		On exit  : 0/0
  5851 ;;		Unchanged: 0/0
  5852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5853 ;;      Params:         0       0       0       0       0
  5854 ;;      Locals:         1       0       0       0       0
  5855 ;;      Temps:          1       0       0       0       0
  5856 ;;      Totals:         2       0       0       0       0
  5857 ;;Total ram usage:        2 bytes
  5858 ;; Hardware stack levels used:    1
  5859 ;; Hardware stack levels required when called:    3
  5860 ;; This function calls:
  5861 ;;		_LcdPort
  5862 ;; This function is called by:
  5863 ;;		_LcdWriteString
  5864 ;; This function uses a non-reentrant model
  5865 ;;
  5866                           
  5867                           
  5868                           ;psect for function _LcdWriteChar
  5869  0A2A                     _LcdWriteChar:
  5870                           
  5871                           ;incstack = 0
  5872                           ; Regs used in _LcdWriteChar: [wreg+status,2+status,0+pclath+cstack]
  5873                           ;LcdWriteChar@value stored from wreg
  5874  0A2A  00F8               	movwf	LcdWriteChar@value
  5875  0A2B                     l1859:
  5876                           
  5877                           ;LCD.c: 57:     RE2 = 1;
  5878  0A2B  1283               	bcf	3,5	;RP0=0, select bank0
  5879  0A2C  1303               	bcf	3,6	;RP1=0, select bank0
  5880  0A2D  1509               	bsf	9,2	;volatile
  5881  0A2E                     l1861:
  5882                           
  5883                           ;LCD.c: 58:     LcdPort(value);
  5884  0A2E  0878               	movf	LcdWriteChar@value,w
  5885  0A2F  120A  158A  2659  120A  158A  	fcall	_LcdPort
  5886  0A34                     l1863:
  5887                           
  5888                           ;LCD.c: 59:     RE0 = 1;
  5889  0A34  1283               	bcf	3,5	;RP0=0, select bank0
  5890  0A35  1303               	bcf	3,6	;RP1=0, select bank0
  5891  0A36  1409               	bsf	9,0	;volatile
  5892  0A37                     l1865:
  5893                           
  5894                           ;LCD.c: 60:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  5895  0A37  300D               	movlw	13
  5896  0A38  00F7               	movwf	??_LcdWriteChar
  5897  0A39                     u3657:
  5898  0A39  0BF7               	decfsz	??_LcdWriteChar,f
  5899  0A3A  2A39               	goto	u3657
  5900  0A3B                     l1867:
  5901                           
  5902                           ;LCD.c: 61:     RE0 = 0;
  5903  0A3B  1283               	bcf	3,5	;RP0=0, select bank0
  5904  0A3C  1303               	bcf	3,6	;RP1=0, select bank0
  5905  0A3D  1009               	bcf	9,0	;volatile
  5906  0A3E                     l99:
  5907  0A3E  0008               	return
  5908  0A3F                     __end_of_LcdWriteChar:
  5909                           
  5910                           	psect	text22
  5911  0AAA                     __ptext22:	
  5912 ;; *************** function _LcdSetCursor *****************
  5913 ;; Defined at:
  5914 ;;		line 29 in file "LCD.c"
  5915 ;; Parameters:    Size  Location     Type
  5916 ;;  row             1    wreg     unsigned char 
  5917 ;;  column          1    1[BANK0 ] unsigned char 
  5918 ;; Auto vars:     Size  Location     Type
  5919 ;;  row             1    4[BANK0 ] unsigned char 
  5920 ;; Return value:  Size  Location     Type
  5921 ;;                  1    wreg      void 
  5922 ;; Registers used:
  5923 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5924 ;; Tracked objects:
  5925 ;;		On entry : 0/0
  5926 ;;		On exit  : 0/0
  5927 ;;		Unchanged: 0/0
  5928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5929 ;;      Params:         0       1       0       0       0
  5930 ;;      Locals:         0       1       0       0       0
  5931 ;;      Temps:          0       2       0       0       0
  5932 ;;      Totals:         0       4       0       0       0
  5933 ;;Total ram usage:        4 bytes
  5934 ;; Hardware stack levels used:    1
  5935 ;; Hardware stack levels required when called:    4
  5936 ;; This function calls:
  5937 ;;		_LcdCmd
  5938 ;; This function is called by:
  5939 ;;		_main
  5940 ;; This function uses a non-reentrant model
  5941 ;;
  5942                           
  5943                           
  5944                           ;psect for function _LcdSetCursor
  5945  0AAA                     _LcdSetCursor:
  5946                           
  5947                           ;incstack = 0
  5948                           ; Regs used in _LcdSetCursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5949                           ;LcdSetCursor@row stored from wreg
  5950  0AAA  1283               	bcf	3,5	;RP0=0, select bank0
  5951  0AAB  1303               	bcf	3,6	;RP1=0, select bank0
  5952  0AAC  00A4               	movwf	LcdSetCursor@row
  5953  0AAD                     l2287:
  5954                           
  5955                           ;LCD.c: 30:     switch(row){
  5956  0AAD  2ABE               	goto	l2295
  5957  0AAE                     l2289:
  5958                           
  5959                           ;LCD.c: 32:             LcdCmd(0x80 + column - 1);
  5960  0AAE  0821               	movf	LcdSetCursor@column,w
  5961  0AAF  3E7F               	addlw	127
  5962  0AB0  120A  158A  226C  120A  158A  	fcall	_LcdCmd
  5963                           
  5964                           ;LCD.c: 33:             break;
  5965  0AB5  2ACE               	goto	l93
  5966  0AB6                     l2291:
  5967                           
  5968                           ;LCD.c: 35:             LcdCmd(0xC0 + column - 1);
  5969  0AB6  0821               	movf	LcdSetCursor@column,w
  5970  0AB7  3EBF               	addlw	191
  5971  0AB8  120A  158A  226C  120A  158A  	fcall	_LcdCmd
  5972                           
  5973                           ;LCD.c: 36:             break;
  5974  0ABD  2ACE               	goto	l93
  5975  0ABE                     l2295:
  5976  0ABE  0824               	movf	LcdSetCursor@row,w
  5977  0ABF  00A2               	movwf	??_LcdSetCursor
  5978  0AC0  01A3               	clrf	??_LcdSetCursor+1
  5979                           
  5980                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5981                           ; Switch size 1, requested type "simple"
  5982                           ; Number of cases is 1, Range of values is 0 to 0
  5983                           ; switch strategies available:
  5984                           ; Name         Instructions Cycles
  5985                           ; simple_byte            4     3 (average)
  5986                           ; direct_byte           11     8 (fixed)
  5987                           ; jumptable            260     6 (fixed)
  5988                           ;	Chosen strategy is simple_byte
  5989  0AC1  0823               	movf	??_LcdSetCursor+1,w
  5990  0AC2  3A00               	xorlw	0	; case 0
  5991  0AC3  1903               	skipnz
  5992  0AC4  2AC6               	goto	l2497
  5993  0AC5  2ACE               	goto	l93
  5994  0AC6                     l2497:
  5995                           
  5996                           ; Switch size 1, requested type "simple"
  5997                           ; Number of cases is 2, Range of values is 1 to 2
  5998                           ; switch strategies available:
  5999                           ; Name         Instructions Cycles
  6000                           ; simple_byte            7     4 (average)
  6001                           ; direct_byte           17    11 (fixed)
  6002                           ; jumptable            263     9 (fixed)
  6003                           ;	Chosen strategy is simple_byte
  6004  0AC6  0822               	movf	??_LcdSetCursor,w
  6005  0AC7  3A01               	xorlw	1	; case 1
  6006  0AC8  1903               	skipnz
  6007  0AC9  2AAE               	goto	l2289
  6008  0ACA  3A03               	xorlw	3	; case 2
  6009  0ACB  1903               	skipnz
  6010  0ACC  2AB6               	goto	l2291
  6011  0ACD  2ACE               	goto	l93
  6012  0ACE                     l93:
  6013  0ACE  0008               	return
  6014  0ACF                     __end_of_LcdSetCursor:
  6015                           
  6016                           	psect	text23
  6017  0B3E                     __ptext23:	
  6018 ;; *************** function _LcdInit *****************
  6019 ;; Defined at:
  6020 ;;		line 41 in file "LCD.c"
  6021 ;; Parameters:    Size  Location     Type
  6022 ;;		None
  6023 ;; Auto vars:     Size  Location     Type
  6024 ;;		None
  6025 ;; Return value:  Size  Location     Type
  6026 ;;                  1    wreg      void 
  6027 ;; Registers used:
  6028 ;;		wreg, status,2, status,0, pclath, cstack
  6029 ;; Tracked objects:
  6030 ;;		On entry : 0/0
  6031 ;;		On exit  : 0/0
  6032 ;;		Unchanged: 0/0
  6033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6034 ;;      Params:         0       0       0       0       0
  6035 ;;      Locals:         0       0       0       0       0
  6036 ;;      Temps:          0       2       0       0       0
  6037 ;;      Totals:         0       2       0       0       0
  6038 ;;Total ram usage:        2 bytes
  6039 ;; Hardware stack levels used:    1
  6040 ;; Hardware stack levels required when called:    4
  6041 ;; This function calls:
  6042 ;;		_LcdCmd
  6043 ;;		_LcdPort
  6044 ;; This function is called by:
  6045 ;;		_main
  6046 ;; This function uses a non-reentrant model
  6047 ;;
  6048                           
  6049                           
  6050                           ;psect for function _LcdInit
  6051  0B3E                     _LcdInit:
  6052  0B3E                     l2219:	
  6053                           ;incstack = 0
  6054                           ; Regs used in _LcdInit: [wreg+status,2+status,0+pclath+cstack]
  6055                           
  6056                           
  6057                           ;LCD.c: 42:     LcdPort(0x00);
  6058  0B3E  3000               	movlw	0
  6059  0B3F  120A  158A  2659  120A  158A  	fcall	_LcdPort
  6060  0B44                     l2221:
  6061                           
  6062                           ;LCD.c: 43:     _delay((unsigned long)((20)*(4000000/4000.0)));
  6063  0B44  301A               	movlw	26
  6064  0B45  1283               	bcf	3,5	;RP0=0, select bank0
  6065  0B46  1303               	bcf	3,6	;RP1=0, select bank0
  6066  0B47  00A2               	movwf	??_LcdInit+1
  6067  0B48  30F7               	movlw	247
  6068  0B49  00A1               	movwf	??_LcdInit
  6069  0B4A                     u3667:
  6070  0B4A  0BA1               	decfsz	??_LcdInit,f
  6071  0B4B  2B4A               	goto	u3667
  6072  0B4C  0BA2               	decfsz	??_LcdInit+1,f
  6073  0B4D  2B4A               	goto	u3667
  6074  0B4E  2B4F               	nop2
  6075  0B4F                     l2223:
  6076                           
  6077                           ;LCD.c: 44:     LcdCmd(0x30);
  6078  0B4F  3030               	movlw	48
  6079  0B50  120A  158A  226C  120A  158A  	fcall	_LcdCmd
  6080                           
  6081                           ;LCD.c: 45:     _delay((unsigned long)((5)*(4000000/4000.0)));
  6082  0B55  3007               	movlw	7
  6083  0B56  1283               	bcf	3,5	;RP0=0, select bank0
  6084  0B57  1303               	bcf	3,6	;RP1=0, select bank0
  6085  0B58  00A2               	movwf	??_LcdInit+1
  6086  0B59  307C               	movlw	124
  6087  0B5A  00A1               	movwf	??_LcdInit
  6088  0B5B                     u3677:
  6089  0B5B  0BA1               	decfsz	??_LcdInit,f
  6090  0B5C  2B5B               	goto	u3677
  6091  0B5D  0BA2               	decfsz	??_LcdInit+1,f
  6092  0B5E  2B5B               	goto	u3677
  6093  0B5F  0000               	nop
  6094  0B60                     l2225:
  6095                           
  6096                           ;LCD.c: 46:     LcdCmd(0x30);
  6097  0B60  3030               	movlw	48
  6098  0B61  120A  158A  226C  120A  158A  	fcall	_LcdCmd
  6099  0B66                     l2227:
  6100                           
  6101                           ;LCD.c: 47:     _delay((unsigned long)((11)*(4000000/4000.0)));
  6102  0B66  300F               	movlw	15
  6103  0B67  1283               	bcf	3,5	;RP0=0, select bank0
  6104  0B68  1303               	bcf	3,6	;RP1=0, select bank0
  6105  0B69  00A2               	movwf	??_LcdInit+1
  6106  0B6A  3047               	movlw	71
  6107  0B6B  00A1               	movwf	??_LcdInit
  6108  0B6C                     u3687:
  6109  0B6C  0BA1               	decfsz	??_LcdInit,f
  6110  0B6D  2B6C               	goto	u3687
  6111  0B6E  0BA2               	decfsz	??_LcdInit+1,f
  6112  0B6F  2B6C               	goto	u3687
  6113                           
  6114                           ;LCD.c: 48:     LcdCmd(0x30);
  6115  0B70  3030               	movlw	48
  6116  0B71  120A  158A  226C  120A  158A  	fcall	_LcdCmd
  6117                           
  6118                           ;LCD.c: 50:     LcdCmd(0x38);
  6119  0B76  3038               	movlw	56
  6120  0B77  120A  158A  226C  120A  158A  	fcall	_LcdCmd
  6121                           
  6122                           ;LCD.c: 51:     LcdCmd(0x0C);
  6123  0B7C  300C               	movlw	12
  6124  0B7D  120A  158A  226C  120A  158A  	fcall	_LcdCmd
  6125                           
  6126                           ;LCD.c: 52:     LcdCmd(0x6);
  6127  0B82  3006               	movlw	6
  6128  0B83  120A  158A  226C  120A  158A  	fcall	_LcdCmd
  6129  0B88                     l96:
  6130  0B88  0008               	return
  6131  0B89                     __end_of_LcdInit:
  6132                           
  6133                           	psect	text24
  6134  0A6C                     __ptext24:	
  6135 ;; *************** function _LcdCmd *****************
  6136 ;; Defined at:
  6137 ;;		line 16 in file "LCD.c"
  6138 ;; Parameters:    Size  Location     Type
  6139 ;;  value           1    wreg     unsigned char 
  6140 ;; Auto vars:     Size  Location     Type
  6141 ;;  value           1    0[BANK0 ] unsigned char 
  6142 ;; Return value:  Size  Location     Type
  6143 ;;                  1    wreg      void 
  6144 ;; Registers used:
  6145 ;;		wreg, status,2, status,0, pclath, cstack
  6146 ;; Tracked objects:
  6147 ;;		On entry : 0/0
  6148 ;;		On exit  : 0/0
  6149 ;;		Unchanged: 0/0
  6150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6151 ;;      Params:         0       0       0       0       0
  6152 ;;      Locals:         0       1       0       0       0
  6153 ;;      Temps:          2       0       0       0       0
  6154 ;;      Totals:         2       1       0       0       0
  6155 ;;Total ram usage:        3 bytes
  6156 ;; Hardware stack levels used:    1
  6157 ;; Hardware stack levels required when called:    3
  6158 ;; This function calls:
  6159 ;;		_LcdPort
  6160 ;; This function is called by:
  6161 ;;		_LcdSetCursor
  6162 ;;		_LcdInit
  6163 ;;		_LcdClear
  6164 ;;		_LcdShiftRight
  6165 ;;		_LcdShiftLeft
  6166 ;; This function uses a non-reentrant model
  6167 ;;
  6168                           
  6169                           
  6170                           ;psect for function _LcdCmd
  6171  0A6C                     _LcdCmd:
  6172                           
  6173                           ;incstack = 0
  6174                           ; Regs used in _LcdCmd: [wreg+status,2+status,0+pclath+cstack]
  6175                           ;LcdCmd@value stored from wreg
  6176  0A6C  1283               	bcf	3,5	;RP0=0, select bank0
  6177  0A6D  1303               	bcf	3,6	;RP1=0, select bank0
  6178  0A6E  00A0               	movwf	LcdCmd@value
  6179  0A6F                     l1849:
  6180                           
  6181                           ;LCD.c: 17:     RE2 = 0;
  6182  0A6F  1109               	bcf	9,2	;volatile
  6183  0A70                     l1851:
  6184                           
  6185                           ;LCD.c: 18:     LcdPort(value);
  6186  0A70  0820               	movf	LcdCmd@value,w
  6187  0A71  120A  158A  2659  120A  158A  	fcall	_LcdPort
  6188  0A76                     l1853:
  6189                           
  6190                           ;LCD.c: 19:     RE0 = 1;
  6191  0A76  1283               	bcf	3,5	;RP0=0, select bank0
  6192  0A77  1303               	bcf	3,6	;RP1=0, select bank0
  6193  0A78  1409               	bsf	9,0	;volatile
  6194  0A79                     l1855:
  6195                           
  6196                           ;LCD.c: 20:     _delay((unsigned long)((4)*(4000000/4000.0)));
  6197  0A79  3006               	movlw	6
  6198  0A7A  00F8               	movwf	??_LcdCmd+1
  6199  0A7B  3030               	movlw	48
  6200  0A7C  00F7               	movwf	??_LcdCmd
  6201  0A7D                     u3697:
  6202  0A7D  0BF7               	decfsz	??_LcdCmd,f
  6203  0A7E  2A7D               	goto	u3697
  6204  0A7F  0BF8               	decfsz	??_LcdCmd+1,f
  6205  0A80  2A7D               	goto	u3697
  6206  0A81  0000               	nop
  6207  0A82                     l1857:
  6208                           
  6209                           ;LCD.c: 21:     RE0 = 0;
  6210  0A82  1283               	bcf	3,5	;RP0=0, select bank0
  6211  0A83  1303               	bcf	3,6	;RP1=0, select bank0
  6212  0A84  1009               	bcf	9,0	;volatile
  6213  0A85                     l83:
  6214  0A85  0008               	return
  6215  0A86                     __end_of_LcdCmd:
  6216                           
  6217                           	psect	text25
  6218  0E59                     __ptext25:	
  6219 ;; *************** function _LcdPort *****************
  6220 ;; Defined at:
  6221 ;;		line 3 in file "LCD.c"
  6222 ;; Parameters:    Size  Location     Type
  6223 ;;  value           1    wreg     unsigned char 
  6224 ;; Auto vars:     Size  Location     Type
  6225 ;;  value           1    6[COMMON] unsigned char 
  6226 ;; Return value:  Size  Location     Type
  6227 ;;                  1    wreg      void 
  6228 ;; Registers used:
  6229 ;;		wreg, status,2, status,0
  6230 ;; Tracked objects:
  6231 ;;		On entry : 0/0
  6232 ;;		On exit  : 0/0
  6233 ;;		Unchanged: 0/0
  6234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6235 ;;      Params:         0       0       0       0       0
  6236 ;;      Locals:         1       0       0       0       0
  6237 ;;      Temps:          1       0       0       0       0
  6238 ;;      Totals:         2       0       0       0       0
  6239 ;;Total ram usage:        2 bytes
  6240 ;; Hardware stack levels used:    1
  6241 ;; Hardware stack levels required when called:    2
  6242 ;; This function calls:
  6243 ;;		Nothing
  6244 ;; This function is called by:
  6245 ;;		_LcdCmd
  6246 ;;		_LcdInit
  6247 ;;		_LcdWriteChar
  6248 ;; This function uses a non-reentrant model
  6249 ;;
  6250                           
  6251                           
  6252                           ;psect for function _LcdPort
  6253  0E59                     _LcdPort:
  6254                           
  6255                           ;incstack = 0
  6256                           ; Regs used in _LcdPort: [wreg+status,2+status,0]
  6257                           ;LcdPort@value stored from wreg
  6258  0E59  00F6               	movwf	LcdPort@value
  6259  0E5A                     l1633:
  6260                           
  6261                           ;LCD.c: 6:     RD0 = value &1;
  6262  0E5A  1876               	btfsc	LcdPort@value,0
  6263  0E5B  2E5D               	goto	u1831
  6264  0E5C  2E61               	goto	u1830
  6265  0E5D                     u1831:
  6266  0E5D  1283               	bcf	3,5	;RP0=0, select bank0
  6267  0E5E  1303               	bcf	3,6	;RP1=0, select bank0
  6268  0E5F  1408               	bsf	8,0	;volatile
  6269  0E60  2E64               	goto	u1844
  6270  0E61                     u1830:
  6271  0E61  1283               	bcf	3,5	;RP0=0, select bank0
  6272  0E62  1303               	bcf	3,6	;RP1=0, select bank0
  6273  0E63  1008               	bcf	8,0	;volatile
  6274  0E64                     u1844:
  6275  0E64                     l1635:
  6276                           
  6277                           ;LCD.c: 7:     RD1 = (value & 2) >> 1;
  6278  0E64  0876               	movf	LcdPort@value,w
  6279  0E65  00F5               	movwf	??_LcdPort
  6280  0E66  3001               	movlw	1
  6281  0E67                     u1855:
  6282  0E67  1003               	clrc
  6283  0E68  0CF5               	rrf	??_LcdPort,f
  6284  0E69  3EFF               	addlw	-1
  6285  0E6A  1D03               	skipz
  6286  0E6B  2E67               	goto	u1855
  6287  0E6C  1875               	btfsc	??_LcdPort,0
  6288  0E6D  2E6F               	goto	u1861
  6289  0E6E  2E73               	goto	u1860
  6290  0E6F                     u1861:
  6291  0E6F  1283               	bcf	3,5	;RP0=0, select bank0
  6292  0E70  1303               	bcf	3,6	;RP1=0, select bank0
  6293  0E71  1488               	bsf	8,1	;volatile
  6294  0E72  2E76               	goto	u1874
  6295  0E73                     u1860:
  6296  0E73  1283               	bcf	3,5	;RP0=0, select bank0
  6297  0E74  1303               	bcf	3,6	;RP1=0, select bank0
  6298  0E75  1088               	bcf	8,1	;volatile
  6299  0E76                     u1874:
  6300                           
  6301                           ;LCD.c: 8:     RD2 = (value & 4) >> 2;
  6302  0E76  0876               	movf	LcdPort@value,w
  6303  0E77  00F5               	movwf	??_LcdPort
  6304  0E78  3002               	movlw	2
  6305  0E79                     u1885:
  6306  0E79  1003               	clrc
  6307  0E7A  0CF5               	rrf	??_LcdPort,f
  6308  0E7B  3EFF               	addlw	-1
  6309  0E7C  1D03               	skipz
  6310  0E7D  2E79               	goto	u1885
  6311  0E7E  1875               	btfsc	??_LcdPort,0
  6312  0E7F  2E81               	goto	u1891
  6313  0E80  2E85               	goto	u1890
  6314  0E81                     u1891:
  6315  0E81  1283               	bcf	3,5	;RP0=0, select bank0
  6316  0E82  1303               	bcf	3,6	;RP1=0, select bank0
  6317  0E83  1508               	bsf	8,2	;volatile
  6318  0E84  2E88               	goto	u1904
  6319  0E85                     u1890:
  6320  0E85  1283               	bcf	3,5	;RP0=0, select bank0
  6321  0E86  1303               	bcf	3,6	;RP1=0, select bank0
  6322  0E87  1108               	bcf	8,2	;volatile
  6323  0E88                     u1904:
  6324                           
  6325                           ;LCD.c: 9:     RD3 = (value &8) >> 3;
  6326  0E88  0876               	movf	LcdPort@value,w
  6327  0E89  00F5               	movwf	??_LcdPort
  6328  0E8A  3003               	movlw	3
  6329  0E8B                     u1915:
  6330  0E8B  1003               	clrc
  6331  0E8C  0CF5               	rrf	??_LcdPort,f
  6332  0E8D  3EFF               	addlw	-1
  6333  0E8E  1D03               	skipz
  6334  0E8F  2E8B               	goto	u1915
  6335  0E90  1875               	btfsc	??_LcdPort,0
  6336  0E91  2E93               	goto	u1921
  6337  0E92  2E97               	goto	u1920
  6338  0E93                     u1921:
  6339  0E93  1283               	bcf	3,5	;RP0=0, select bank0
  6340  0E94  1303               	bcf	3,6	;RP1=0, select bank0
  6341  0E95  1588               	bsf	8,3	;volatile
  6342  0E96  2E9A               	goto	u1934
  6343  0E97                     u1920:
  6344  0E97  1283               	bcf	3,5	;RP0=0, select bank0
  6345  0E98  1303               	bcf	3,6	;RP1=0, select bank0
  6346  0E99  1188               	bcf	8,3	;volatile
  6347  0E9A                     u1934:
  6348                           
  6349                           ;LCD.c: 10:     RD4 = (value & 16)>>4;
  6350  0E9A  0876               	movf	LcdPort@value,w
  6351  0E9B  00F5               	movwf	??_LcdPort
  6352  0E9C  3004               	movlw	4
  6353  0E9D                     u1945:
  6354  0E9D  1003               	clrc
  6355  0E9E  0CF5               	rrf	??_LcdPort,f
  6356  0E9F  3EFF               	addlw	-1
  6357  0EA0  1D03               	skipz
  6358  0EA1  2E9D               	goto	u1945
  6359  0EA2  1875               	btfsc	??_LcdPort,0
  6360  0EA3  2EA5               	goto	u1951
  6361  0EA4  2EA9               	goto	u1950
  6362  0EA5                     u1951:
  6363  0EA5  1283               	bcf	3,5	;RP0=0, select bank0
  6364  0EA6  1303               	bcf	3,6	;RP1=0, select bank0
  6365  0EA7  1608               	bsf	8,4	;volatile
  6366  0EA8  2EAC               	goto	u1964
  6367  0EA9                     u1950:
  6368  0EA9  1283               	bcf	3,5	;RP0=0, select bank0
  6369  0EAA  1303               	bcf	3,6	;RP1=0, select bank0
  6370  0EAB  1208               	bcf	8,4	;volatile
  6371  0EAC                     u1964:
  6372                           
  6373                           ;LCD.c: 11:     RD5 = (value & 32) >> 5 ;
  6374  0EAC  0876               	movf	LcdPort@value,w
  6375  0EAD  00F5               	movwf	??_LcdPort
  6376  0EAE  3005               	movlw	5
  6377  0EAF                     u1975:
  6378  0EAF  1003               	clrc
  6379  0EB0  0CF5               	rrf	??_LcdPort,f
  6380  0EB1  3EFF               	addlw	-1
  6381  0EB2  1D03               	skipz
  6382  0EB3  2EAF               	goto	u1975
  6383  0EB4  1875               	btfsc	??_LcdPort,0
  6384  0EB5  2EB7               	goto	u1981
  6385  0EB6  2EBB               	goto	u1980
  6386  0EB7                     u1981:
  6387  0EB7  1283               	bcf	3,5	;RP0=0, select bank0
  6388  0EB8  1303               	bcf	3,6	;RP1=0, select bank0
  6389  0EB9  1688               	bsf	8,5	;volatile
  6390  0EBA  2EBE               	goto	u1994
  6391  0EBB                     u1980:
  6392  0EBB  1283               	bcf	3,5	;RP0=0, select bank0
  6393  0EBC  1303               	bcf	3,6	;RP1=0, select bank0
  6394  0EBD  1288               	bcf	8,5	;volatile
  6395  0EBE                     u1994:
  6396                           
  6397                           ;LCD.c: 12:     RD6 = (value & 64) >> 6;
  6398  0EBE  0876               	movf	LcdPort@value,w
  6399  0EBF  00F5               	movwf	??_LcdPort
  6400  0EC0  3006               	movlw	6
  6401  0EC1                     u2005:
  6402  0EC1  1003               	clrc
  6403  0EC2  0CF5               	rrf	??_LcdPort,f
  6404  0EC3  3EFF               	addlw	-1
  6405  0EC4  1D03               	skipz
  6406  0EC5  2EC1               	goto	u2005
  6407  0EC6  1875               	btfsc	??_LcdPort,0
  6408  0EC7  2EC9               	goto	u2011
  6409  0EC8  2ECD               	goto	u2010
  6410  0EC9                     u2011:
  6411  0EC9  1283               	bcf	3,5	;RP0=0, select bank0
  6412  0ECA  1303               	bcf	3,6	;RP1=0, select bank0
  6413  0ECB  1708               	bsf	8,6	;volatile
  6414  0ECC  2ED0               	goto	u2024
  6415  0ECD                     u2010:
  6416  0ECD  1283               	bcf	3,5	;RP0=0, select bank0
  6417  0ECE  1303               	bcf	3,6	;RP1=0, select bank0
  6418  0ECF  1308               	bcf	8,6	;volatile
  6419  0ED0                     u2024:
  6420                           
  6421                           ;LCD.c: 13:     RD7 = (value & 128) >> 7;
  6422  0ED0  0876               	movf	LcdPort@value,w
  6423  0ED1  00F5               	movwf	??_LcdPort
  6424  0ED2  3007               	movlw	7
  6425  0ED3                     u2035:
  6426  0ED3  1003               	clrc
  6427  0ED4  0CF5               	rrf	??_LcdPort,f
  6428  0ED5  3EFF               	addlw	-1
  6429  0ED6  1D03               	skipz
  6430  0ED7  2ED3               	goto	u2035
  6431  0ED8  1875               	btfsc	??_LcdPort,0
  6432  0ED9  2EDB               	goto	u2041
  6433  0EDA  2EDF               	goto	u2040
  6434  0EDB                     u2041:
  6435  0EDB  1283               	bcf	3,5	;RP0=0, select bank0
  6436  0EDC  1303               	bcf	3,6	;RP1=0, select bank0
  6437  0EDD  1788               	bsf	8,7	;volatile
  6438  0EDE  2EE2               	goto	u2054
  6439  0EDF                     u2040:
  6440  0EDF  1283               	bcf	3,5	;RP0=0, select bank0
  6441  0EE0  1303               	bcf	3,6	;RP1=0, select bank0
  6442  0EE1  1388               	bcf	8,7	;volatile
  6443  0EE2                     u2054:
  6444  0EE2                     l80:
  6445  0EE2  0008               	return
  6446  0EE3                     __end_of_LcdPort:
  6447                           
  6448                           	psect	text26
  6449  09E9                     __ptext26:	
  6450 ;; *************** function _isr *****************
  6451 ;; Defined at:
  6452 ;;		line 138 in file "main.c"
  6453 ;; Parameters:    Size  Location     Type
  6454 ;;		None
  6455 ;; Auto vars:     Size  Location     Type
  6456 ;;		None
  6457 ;; Return value:  Size  Location     Type
  6458 ;;                  1    wreg      void 
  6459 ;; Registers used:
  6460 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6461 ;; Tracked objects:
  6462 ;;		On entry : 0/0
  6463 ;;		On exit  : 0/0
  6464 ;;		Unchanged: 0/0
  6465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6466 ;;      Params:         0       0       0       0       0
  6467 ;;      Locals:         0       0       0       0       0
  6468 ;;      Temps:          3       0       0       0       0
  6469 ;;      Totals:         3       0       0       0       0
  6470 ;;Total ram usage:        3 bytes
  6471 ;; Hardware stack levels used:    1
  6472 ;; Hardware stack levels required when called:    1
  6473 ;; This function calls:
  6474 ;;		_isrADC
  6475 ;; This function is called by:
  6476 ;;		Interrupt level 1
  6477 ;; This function uses a non-reentrant model
  6478 ;;
  6479                           
  6480                           
  6481                           ;psect for function _isr
  6482  09E9                     _isr:
  6483  09E9                     i1l2443:
  6484                           
  6485                           ;main.c: 139:     isrADC();
  6486  09E9  120A  158A  2217  120A  158A  	fcall	_isrADC
  6487  09EE                     i1l55:
  6488  09EE  0874               	movf	??_isr+2,w
  6489  09EF  008A               	movwf	10
  6490  09F0  0873               	movf	??_isr+1,w
  6491  09F1  0084               	movwf	4
  6492  09F2  0E72               	swapf	??_isr,w
  6493  09F3  0083               	movwf	3
  6494  09F4  0EFE               	swapf	btemp,f
  6495  09F5  0E7E               	swapf	btemp,w
  6496  09F6  0009               	retfie
  6497  09F7                     __end_of_isr:
  6498                           
  6499                           	psect	intentry
  6500  0004                     __pintentry:	
  6501                           ;incstack = 0
  6502                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6503                           
  6504  0004                     interrupt_function:
  6505  007E                     saved_w	set	btemp
  6506  0004  00FE               	movwf	btemp
  6507  0005  0E03               	swapf	3,w
  6508  0006  00F2               	movwf	??_isr
  6509  0007  0804               	movf	4,w
  6510  0008  00F3               	movwf	??_isr+1
  6511  0009  080A               	movf	10,w
  6512  000A  00F4               	movwf	??_isr+2
  6513  000B  120A  158A  29E9   	ljmp	_isr
  6514                           
  6515                           	psect	text27
  6516  0A17                     __ptext27:	
  6517 ;; *************** function _isrADC *****************
  6518 ;; Defined at:
  6519 ;;		line 57 in file "ADC.c"
  6520 ;; Parameters:    Size  Location     Type
  6521 ;;		None
  6522 ;; Auto vars:     Size  Location     Type
  6523 ;;		None
  6524 ;; Return value:  Size  Location     Type
  6525 ;;                  1    wreg      void 
  6526 ;; Registers used:
  6527 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6528 ;; Tracked objects:
  6529 ;;		On entry : 0/0
  6530 ;;		On exit  : 0/0
  6531 ;;		Unchanged: 0/0
  6532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6533 ;;      Params:         0       0       0       0       0
  6534 ;;      Locals:         0       0       0       0       0
  6535 ;;      Temps:          2       0       0       0       0
  6536 ;;      Totals:         2       0       0       0       0
  6537 ;;Total ram usage:        2 bytes
  6538 ;; Hardware stack levels used:    1
  6539 ;; This function calls:
  6540 ;;		Nothing
  6541 ;; This function is called by:
  6542 ;;		_isr
  6543 ;; This function uses a non-reentrant model
  6544 ;;
  6545                           
  6546                           
  6547                           ;psect for function _isrADC
  6548  0A17                     _isrADC:
  6549  0A17                     i1l2375:	
  6550                           ;incstack = 0
  6551                           ; Regs used in _isrADC: [wreg-fsr0h+status,2+status,0]
  6552                           
  6553                           
  6554                           ;ADC.c: 58:     if(PIR1bits.ADIF){
  6555  0A17  1283               	bcf	3,5	;RP0=0, select bank0
  6556  0A18  1303               	bcf	3,6	;RP1=0, select bank0
  6557  0A19  1F0C               	btfss	12,6	;volatile
  6558  0A1A  2A1C               	goto	u357_21
  6559  0A1B  2A1D               	goto	u357_20
  6560  0A1C                     u357_21:
  6561  0A1C  2A29               	goto	i1l189
  6562  0A1D                     u357_20:
  6563  0A1D                     i1l2377:
  6564                           
  6565                           ;ADC.c: 59:         ADC_VALUE[ADCON0bits.CHS] = ADRESH;
  6566  0A1D  081E               	movf	30,w	;volatile
  6567  0A1E  00F0               	movwf	??_isrADC
  6568  0A1F  0C1F               	rrf	31,w	;volatile
  6569  0A20  00F1               	movwf	??_isrADC+1
  6570  0A21  0C71               	rrf	??_isrADC+1,w
  6571  0A22  390F               	andlw	15
  6572  0A23  3E5B               	addlw	(low (_ADC_VALUE| 0))& (0+255)
  6573  0A24  0084               	movwf	4
  6574  0A25  0870               	movf	??_isrADC,w
  6575  0A26  1383               	bcf	3,7	;select IRP bank0
  6576  0A27  0080               	movwf	0
  6577  0A28                     i1l2379:
  6578                           
  6579                           ;ADC.c: 60:         PIR1bits.ADIF = 0;
  6580  0A28  130C               	bcf	12,6	;volatile
  6581  0A29                     i1l189:
  6582  0A29  0008               	return
  6583  0A2A                     __end_of_isrADC:
  6584  007E                     btemp	set	126	;btemp
  6585  007E                     wtemp0	set	126
  6586                           
  6587                           	psect	config
  6588                           
  6589                           ;Config register CONFIG1 @ 0x2007
  6590                           ;	Oscillator Selection bits
  6591                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  6592                           ;	Watchdog Timer Enable bit
  6593                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  6594                           ;	Power-up Timer Enable bit
  6595                           ;	PWRTE = OFF, PWRT disabled
  6596                           ;	RE3/MCLR pin function select bit
  6597                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  6598                           ;	Code Protection bit
  6599                           ;	CP = OFF, Program memory code protection is disabled
  6600                           ;	Data Code Protection bit
  6601                           ;	CPD = OFF, Data memory code protection is disabled
  6602                           ;	Brown Out Reset Selection bits
  6603                           ;	BOREN = OFF, BOR disabled
  6604                           ;	Internal External Switchover bit
  6605                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  6606                           ;	Fail-Safe Clock Monitor Enabled bit
  6607                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  6608                           ;	Low Voltage Programming Enable bit
  6609                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  6610                           ;	In-Circuit Debugger Mode bit
  6611                           ;	DEBUG = 0x1, unprogrammed default
  6612  2007                     	org	8199
  6613  2007  20D4               	dw	8404
  6614                           
  6615                           ;Config register CONFIG2 @ 0x2008
  6616                           ;	Brown-out Reset Selection bit
  6617                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  6618                           ;	Flash Program Memory Self Write Enable bits
  6619                           ;	WRT = OFF, Write protection off
  6620  2008                     	org	8200
  6621  2008  3FFF               	dw	16383

Data Sizes:
    Strings     23
    Constant    0
    Data        0
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9       9
    BANK0            80     59      71
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    UARTSendString@str	PTR const unsigned char  size(2) Largest target is 5
		 -> analogToString@string(BANK0[5]), STR_5(CODE[4]), STR_3(CODE[3]), 

    LcdWriteString@value	PTR const unsigned char  size(2) Largest target is 16
		 -> intToString@valor(BANK0[4]), analogToString@string(BANK0[5]), STR_4(CODE[3]), STR_2(CODE[3]), 
		 -> STR_1(CODE[16]), 

    sp__intToString	PTR unsigned char  size(1) Largest target is 4
		 -> intToString@valor(BANK0[4]), 

    main@contadorString	PTR unsigned char  size(1) Largest target is 4
		 -> intToString@valor(BANK0[4]), 

    main@val2	PTR volatile unsigned char  size(1) Largest target is 5
		 -> analogToString@string(BANK0[5]), 

    sp__analogToString	PTR unsigned char  size(1) Largest target is 5
		 -> analogToString@string(BANK0[5]), 

    main@val	PTR volatile unsigned char  size(1) Largest target is 5
		 -> analogToString@string(BANK0[5]), 

    main@adc2	PTR unsigned char  size(1) Largest target is 12
		 -> ADC_VALUE(BANK0[12]), 

    sp__readADC	PTR unsigned char  size(1) Largest target is 12
		 -> ADC_VALUE(BANK0[12]), 

    main@adc1	PTR unsigned char  size(1) Largest target is 12
		 -> ADC_VALUE(BANK0[12]), 


Critical Paths under _main in COMMON

    _main->_UARTSendString
    _intToString->___awdiv
    _intToString->___awmod
    _intToString->___bmul
    _analogToString->___fltol
    _analogToString->___xxtofl
    ___flsub->___fladd
    ___flsub->___xxtofl
    ___flmul->__Umul8_16
    ___flmul->___xxtofl
    _UARTSendString->_UARTSendChar
    _UARTReadChar->_UARTDataReady
    _UARTInit->___lldiv
    _LcdWriteString->_LcdWriteChar
    _LcdWriteChar->_LcdPort
    _LcdSetCursor->_LcdCmd
    _LcdInit->_LcdCmd
    _LcdCmd->_LcdPort

Critical Paths under _isr in COMMON

    _isr->_isrADC

Critical Paths under _main in BANK0

    _main->_analogToString
    _intToString->___awdiv
    _analogToString->___flmul
    ___flsub->___fladd
    ___flmul->___xxtofl
    _UARTInit->___lldiv
    _LcdSetCursor->_LcdCmd
    _LcdInit->_LcdCmd

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0   11315
                                             51 BANK0      8     8      0
                            _LcdInit
                       _LcdSetCursor
                     _LcdWriteString
                      _UARTDataReady
                           _UARTInit
                       _UARTReadChar
                     _UARTSendString
                     _analogToString
                            _initADC
                        _intToString
                            _readADC
 ---------------------------------------------------------------------------------
 (1) _readADC                                              2     2      0      44
                                              5 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _intToString                                          9     9      0    1429
                                              5 BANK0      9     9      0
                            ___awdiv
                            ___awmod
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     168
                                              5 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     448
                                              5 COMMON     4     0      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     604
                                              5 COMMON     4     0      4
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _initADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _analogToString                                      15    15      0    6630
                                             36 BANK0     15    15      0
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     550
                                              5 COMMON     4     0      4
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                              5 COMMON     4     0      4
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                             16 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2136
                                              5 COMMON     4     4      0
                                              0 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    2721
                                             10 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     799
                                              5 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _UARTSendString                                       8     5      3     765
                                              6 COMMON     3     0      3
                                              0 BANK0      5     5      0
                       _UARTSendChar
 ---------------------------------------------------------------------------------
 (2) _UARTSendChar                                         1     1      0      22
                                              5 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UARTReadChar                                         0     0      0       0
                      _UARTDataReady
 ---------------------------------------------------------------------------------
 (2) _UARTDataReady                                        1     1      0       0
                                              5 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UARTInit                                             9     4      5     684
                                             13 BANK0      9     4      5
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     466
                                              5 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _LcdWriteString                                       7     5      2     744
                                              0 BANK0      7     5      2
                       _LcdWriteChar
 ---------------------------------------------------------------------------------
 (2) _LcdWriteChar                                         2     2      0     198
                                              7 COMMON     2     2      0
                            _LcdPort
 ---------------------------------------------------------------------------------
 (1) _LcdSetCursor                                         4     3      1     416
                                              1 BANK0      4     3      1
                             _LcdCmd
 ---------------------------------------------------------------------------------
 (1) _LcdInit                                              2     2      0     374
                                              1 BANK0      2     2      0
                             _LcdCmd
                            _LcdPort
 ---------------------------------------------------------------------------------
 (2) _LcdCmd                                               3     3      0     198
                                              7 COMMON     2     2      0
                                              0 BANK0      1     1      0
                            _LcdPort
 ---------------------------------------------------------------------------------
 (3) _LcdPort                                              2     2      0     176
                                              5 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  3     3      0       0
                                              2 COMMON     3     3      0
                             _isrADC
 ---------------------------------------------------------------------------------
 (5) _isrADC                                               2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LcdInit
     _LcdCmd
       _LcdPort
     _LcdPort
   _LcdSetCursor
     _LcdCmd
       _LcdPort
   _LcdWriteString
     _LcdWriteChar
       _LcdPort
   _UARTDataReady
   _UARTInit
     ___lldiv
   _UARTReadChar
     _UARTDataReady
   _UARTSendString
     _UARTSendChar
   _analogToString
     ___flmul
       __Umul8_16
       ___xxtofl (ARG)
     ___flsub
       ___fladd
       ___xxtofl (ARG)
     ___fltol
     ___xxtofl
   _initADC
   _intToString
     ___awdiv
     ___awmod
     ___bmul
   _readADC

 _isr (ROOT)
   _isrADC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      50       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3B      47       5       88.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      50      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Jul 23 13:17:10 2021

 __size_of_analogToString 012C         UARTInit@baud_rate 002D                         pc 0002  
          ___bmul@product 0077                        l50 0C98                        l47 073F  
                      l80 0EE2                        l83 0A85                        l93 0ACE  
                      l96 0B88                        l99 0A3E              ___awdiv@sign 0022  
                      fsr 0004       __Umul8_16@word_mpld 0022                       l105 0B3D  
                     l130 0DDC                       l133 09DE                       l301 0A53  
                     l311 0D00                       l136 09E8                       l144 0BDF  
                     l153 0A04                       l147 09DC                       l181 0A16  
                     l184 0A69                       l441 0C3A                       l185 0A6B  
                     l610 0607                       l602 05E5                       l611 0613  
                     l428 0D69                       l461 0E58                       l614 0AA9  
                     l710 07FB                       l471 0E58                       l721 07C5  
                     l722 07D1                       l714 07A9                       l572 0490  
                     l468 0E43                       l708 0764                       l581 0613  
                     l670 02EF                       l574 0465                       l664 0383  
                     l568 03E7                       l593 0585                       l683 0AE5  
                     l676 0377                       l685 0AF7                       l589 0561  
                     l599 05A7                       _RD0 0040                       _RD1 0041  
                     _RD2 0042                       _RE0 0048                       _RD3 0043  
                     _RD4 0044                       _RE2 004A                       _RD5 0045  
                     _RD6 0046                       _RD7 0047                       _isr 09E9  
                     fsr0 0004                       indf 0000              ___awmod@sign 0022  
            ___flmul@aexp 003C              ___flmul@bexp 003D              ___flmul@sign 0037  
            ___flmul@temp 0042              ___flmul@prod 003E              ___fltol@exp1 0026  
                    l2001 0E08                      l2003 0E09                      l2101 0190  
                    l2005 0E11                      l2111 0220                      l2103 01AD  
                    l2031 0A8A                      l2023 0E38                      l2015 0E1F  
                    l2007 0E13                      l2121 02B2                      l2113 024D  
                    l2105 01C6                      l2041 0034                      l2025 0E48  
                    l2009 0E17                      l2017 0E31                      l2201 07BB  
                    l2123 02BB                      l2131 02CF                      l2115 0273  
                    l2107 01E3                      l2051 0049                      l2043 0035  
                    l2035 0023                      l2027 0E4D                      l2211 07EE  
                    l2203 07BF                      l2221 0B44                      l2133 02D3  
                    l2125 02BF                      l2117 029B                      l2109 0210  
                    l2061 0061                      l2053 0051                      l2045 003A  
                    l2037 002A                      l2029 0A86                      l2213 07F2  
                    l2205 07C9                      l2223 0B4F                      l2303 0AF8  
                    l2151 0324                      l2143 02F4                      l2135 02D4  
                    l2127 02C0                      l2119 02A4                      l2071 007D  
                    l2063 0066                      l2055 0056                      l2047 003F  
                    l2039 0030                      l2215 07F3                      l2207 07D3  
                    l2311 0617                      l2231 0A0B                      l2225 0B60  
                    l2305 0AFD                      l2161 035B                      l2145 02F9  
                    l2153 032A                      l2137 02D8                      l2129 02C9  
                    l2081 00A0                      l2073 0082                      l2065 006B  
                    l2057 005C                      l2049 0047                      l2209 07E9  
                    l2321 069B                      l2313 064B                      l2241 0A12  
                    l2233 0A0C                      l2401 0F1D                      l2227 0B66  
                    l2219 0B3E                      l2307 0B19                      l2251 0D9E  
                    l2171 037B                      l2163 035D                      l2155 0337  
                    l2147 0307                      l2139 02EC                      l2091 012E  
                    l2083 00AD                      l2075 0087                      l2067 0073  
                    l2059 0060                      l2331 0725                      l2323 06BA  
                    l2315 065E                      l2243 0A13                      l2235 0A0D  
                    l2411 0F54                      l2403 0F28                      l2309 0B21  
                    l2261 0DD0                      l2253 0DA0                      l2341 0B89  
                    l2165 036B                      l2157 0342                      l2149 030B  
                    l2093 014A                      l2085 00CA                      l2069 0075  
                    l1701 0415                      l2181 075C                      l2333 0738  
                    l2325 06CD                      l2317 0663                      l2237 0A10  
                    l2229 0A05                      l2421 0F96                      l2413 0F5F  
                    l2405 0F31                      l2271 0DD7                      l2263 0DD1  
                    l2255 0DCD                      l2247 0D6A                      l2351 09F7  
                    l2343 0B90                      l2167 036F                      l2159 0351  
                    l2095 0153                      l2087 00E6                      l2079 0090  
                    l1711 0429                      l1703 0419                      l2191 0787  
                    l2183 076C                      l2175 0743                      l2335 073D  
                    l2327 06D2                      l2319 0667                      l2239 0A11  
                    l2431 0FD3                      l2423 0FA1                      l2415 0F6E  
                    l2407 0F3B                      l1633 0E5A                      l2273 0DD8  
                    l2265 0DD4                      l2257 0DCE                      l2249 0D71  
                    l2353 09F7                      l2345 0BAC                      l2169 0370  
                    l2097 0163                      l2089 0112                      l1721 0469  
                    l1713 042D                      l1705 041D                      l1641 0391  
                    l2193 078E                      l2177 0748                      l2337 073E  
                    l2329 0706                      l2361 0C54                      l2281 0A64  
                    l2441 0FF3                      l2433 0FD9                      l2425 0FB0  
                    l2417 0F7D                      l2409 0F4B                      l1635 0E64  
                    l2291 0AB6                      l2275 0DDB                      l2267 0DD5  
                    l2259 0DCF                      l2355 0A01                      l2347 0BB4  
                    l2099 0180                      l1811 05E1                      l1803 05AC  
                    l1731 0486                      l1723 0474                      l1707 0421  
                    l1715 0431                      l1651 03A8                      l1643 0395  
                    l2195 0792                      l2187 0775                      l2179 074C  
                    l2371 0C97                      l2363 0C59                      l2283 0A66  
                    l2435 0FDE                      l2427 0FBF                      l2419 0F8D  
                    l1901 0CE8                      l2269 0DD6                      l2349 0BC1  
                    l1821 05FD                      l1813 05EA                      l1805 05B1  
                    l1741 04A4                      l1725 0476                      l1733 048A  
                    l1717 0432                      l1709 0425                      l1661 03BE  
                    l1653 03A9                      l1645 0396                      l1637 0384  
                    l2197 07A0                      l2189 077A                      l2365 0C68  
                    l2277 0A55                      l2437 0FE4                      l2429 0FC9  
                    l2295 0ABE                      l2287 0AAD                      l1903 0CE9  
                    l1831 0AD2                      l1823 0601                      l1815 05EF  
                    l1807 05BF                      l1751 04D0                      l1743 04BD  
                    l1735 0494                      l1727 047C                      l1719 0449  
                    l1671 03CF                      l1663 03BF                      l1647 039B  
                    l1655 03AB                      l1639 038B                      l2199 07B0  
                    l1911 0D01                      l2367 0C7F                      l2359 0C3E  
                    l2279 0A5B                      l2439 0FE6                      l2391 0EF1  
                    l2383 0EE3                      l2289 0AAE                      l1905 0CF2  
                    l1841 0AF3                      l1833 0AD4                      l1825 0603  
                    l1817 05F7                      l1809 05C3                      l1761 04FB  
                    l1753 04D4                      l1745 04C1                      l1737 0499  
                    l1729 047D                      l1681 03ED                      l1673 03D4  
                    l1665 03C5                      l1657 03B3                      l1649 03A0  
                    l1921 0D13                      l1913 0D04                      l2369 0C96  
                    l2393 0EF6                      l2385 0EE7                      l1851 0A70  
                    l1907 0CF8                      l1835 0ADB                      l1827 060E  
                    l1819 05FC                      l1771 0569                      l1763 0539  
                    l1755 04D5                      l1747 04C5                      l1691 0401  
                    l1683 03F1                      l1675 03DC                      l1667 03C9  
                    l1659 03B8                      l1931 0D27                      l1923 0D18  
                    l1915 0D08                      l2395 0F07                      l2387 0EEB  
                    l1853 0A76                      l1861 0A2E                      l1845 09D6  
                    l1837 0ADF                      l1829 0612                      l1781 0584  
                    l1773 056E                      l1765 053F                      l1757 04DE  
                    l1749 04CE                      l1693 0405                      l1685 03F5  
                    l1677 03DD                      l1669 03CA                      l1941 0D4D  
                    l1933 0D2E                      l1925 0D1C                      l1917 0D0D  
                    l2397 0F0A                      l2389 0EEC                      l1855 0A79  
                    l1863 0A34                      l1871 09E4                      l1839 0AEE  
                    l1783 0589                      l1791 0595                      l1767 0544  
                    l1759 04E3                      l1695 0409                      l1687 03F9  
                    l1679 03DF                      l1951 0D65                      l1943 0D4E  
                    l1935 0D32                      l1927 0D1E                      l1919 0D0F  
                    l2399 0F15                      l1857 0A82                      l1849 0A6F  
                    l2497 0AC6                      l1865 0A37                      l1785 058C  
                    l1777 0577                      l1769 0553                      l1793 0599  
                    l1697 040D                      l1689 03FD                      l1945 0D55  
                    l1937 0D36                      l1929 0D24                      l1961 0BEC  
                    l1881 0A4B                      l1873 0A40                      l1867 0A3B  
                    l1859 0A2B                      l1891 0CAE                      l1795 059A  
                    l1787 058E                      l1779 0580                      l1699 0411  
                    l1939 0D47                      l1947 0D5B                      l1971 0C00  
                    l1963 0BEE                      l1955 0BE0                      l1883 0A52  
                    l1875 0A41                      l1893 0CBB                      l1869 09DE  
                    l1797 059E                      l1789 0593                      l1949 0D60  
                    l1981 0C1F                      l1973 0C07                      l1965 0BF2  
                    l1957 0BE3                      l1877 0A45                      l1895 0CBF  
                    l1887 0C99                      l1799 05A4                      l1983 0C26  
                    l1975 0C0B                      l1967 0BF7                      l1959 0BE7  
                    l1879 0A49                      l1897 0CC8                      l1889 0CAB  
                    l1993 0DDD                      l1977 0C0F                      l1969 0BFD  
                    l1985 0C2C                      l1899 0CDA                      l1995 0DEA  
                    l1987 0C31                      l1979 0C19                      l1989 0C36  
                    l1999 0DF3                      ?_isr 0070                      STR_1 0810  
                    STR_2 0824                      STR_3 0824                      STR_4 0824  
                    STR_5 0820                      u2010 0ECD                      u2011 0EC9  
                    u2100 03C9                      u2005 0EC1                      u2101 03C8  
                    u2110 03CF                      u2111 03CE                      u2040 0EDF  
                    u2024 0ED0                      u3000 0082                      u2120 03D4  
                    u2041 0EDB                      u3001 0081                      u2121 03D3  
                    u3010 0087                      u2210 0490                      u2130 03ED  
                    u2035 0ED3                      u3011 0086                      u2211 048F  
                    u2131 03EC                      u2220 0494                      u2140 03F1  
                    u2060 0395                      u3101 01D5                      u3021 00D8  
                    u2301 0512                      u2221 0493                      u2205 047F  
                    u2141 03F0                      u2061 0394                      u2054 0EE2  
                    u3102 01DC                      u3022 00DF                      u2310 0526  
                    u2302 0513                      u2230 0499                      u2150 0449  
                    u2070 039B                      u3111 0202                      u3103 01E3  
                    u3031 00F4                      u3023 00E6                      u2311 0527  
                    u2303 0518                      u2231 0498                      u2151 0448  
                    u2071 039A                      u3112 0209                      u3032 00FB  
                    u2400 059E                      u2320 0544                      u2312 052C  
                    u2304 0519                      u2160 0454                      u2080 03A0  
                    u3121 022F                      u3113 0210                      u3041 0120  
                    u3033 0102                      u2401 059D                      u2321 0543  
                    u2313 052D                      u2305 051E                      u2241 04AF  
                    u2161 0452                      u2081 039F                      u3210 02D3  
                    u3130 0259                      u3122 0236                      u3042 0127  
                    u2410 05A4                      u2330 0569                      u2306 051F  
                    u2250 04C1                      u2242 04B6                      u2170 0455  
                    u2090 03BE                      u3211 02D2                      u3123 023D  
                    u3051 013C                      u3043 012E                      u2411 05A3  
                    u2331 0568                      u2251 04C0                      u2243 04BD  
                    u2155 0445                      u2091 03BD                      u3300 036F  
                    u3220 02D8                      u3052 0143                      u2500 0601  
                    u2420 05AB                      u2340 056E                      u2260 04C5  
                    u2180 0469                      u3301 036E                      u3221 02D7  
                    u3205 02C2                      u3141 0265                      u3053 014A  
                    u2501 0600                      u2421 05AA                      u2341 056D  
                    u2261 04C4                      u2181 0468                      u3230 02EC  
                    u3150 0281                      u3142 026C                      u2510 0612  
                    u2430 05B1                      u2270 04D4                      u2190 047C  
                    u3310 0748                      u3231 02EB                      u3143 0273  
                    u3135 0254                      u3071 0172                      u2511 0611  
                    u2431 05B0                      u2271 04D3                      u2191 047B  
                    u3311 0747                      u2600 0CBF                      u2520 0ADF  
                    u3240 02F3                      u3072 0179                      u2440 05C3  
                    u2360 0584                      u3400 07C5                      u3320 074C  
                    u2601 0CBE                      u2521 0ADE                      u3241 02F2  
                    u3161 028D                      u3081 019F                      u3073 0180  
                    u3065 014C                      u2441 05C2                      u2361 0583  
                    u3401 07C4                      u3321 074B                      u3250 02F9  
                    u3162 0294                      u3082 01A6                      u2450 05D2  
                    u2370 0589                      u2290 04FB                      u3410 07C9  
                    u3330 076C                      u3251 02F8                      u3163 029B  
                    u3155 027C                      u3083 01AD                      u2371 0588  
                    u2355 0579                      u2291 04FA                      u3411 07C8  
                    u3331 076B                      u3500 0B2B                      u2620 0CDA  
                    u2540 0AF3                      u3260 030B                      u2460 05E1  
                    u2380 0593                      u3420 07DE                      u2621 0CD9  
                    u2541 0AF2                      u3261 030A                      u2461 05E0  
                    u2381 0592                      u2293 04F7                      u2285 04D7  
                    u1830 0E61                      u3510 0B3D                      u2550 09E4  
                    u3270 031A                      u3190 02BF                      u2470 05EA  
                    u2390 0599                      u3430 07EE                      u3350 078D  
                    u2710 0D47                      u1831 0E5D                      u3511 0B3C  
                    u2615 0CC1                      u2551 09E3                      u2535 0AE6  
                    u3191 02BE                      u3175 029D                      u3095 01AF  
                    u2471 05E9                      u2455 05CD                      u2391 0598  
                    u3431 07ED                      u3351 078C                      u2711 0D46  
                    u1920 0E97                      u1904 0E88                      u2640 0CF8  
                    u3520 0B9A                      u3280 0337                      u2480 05EF  
                    u3440 07F2                      u2800 0C19                      u2560 0A45  
                    u3600 0FE4                      u1921 0E93                      u2641 0CF7  
                    u2625 0CD6                      u3281 0336                      u3185 02B4  
                    u2481 05EE                      u3441 07F1                      u3425 07D9  
                    u3345 077F                      u2705 0D37                      u2801 0C18  
                    u2561 0A44                      u3601 0FE3                      u3450 0D71  
                    u3530 0BC1                      u3290 0351                      u2490 05FC  
                    u3370 07AF                      u2730 0D5B                      u2650 0D08  
                    u2570 0A52                      u1915 0E8B                      u2635 0CEA  
                    u3451 0D70                      u3531 0BC0                      u3291 0350  
                    u3275 0315                      u2491 05FB                      u3371 07AE  
                    u2731 0D5A                      u2715 0D43                      u2651 0D07  
                    u2571 0A51                      u1860 0E73                      u1844 0E64  
                    u2580 0CAB                      u3460 0D7F                      u3540 0BCD  
                    u2900 0E37                      u2740 0D60                      u2660 0D13  
                    u2820 0C2C                      u1861 0E6F                      u2581 0CAA  
                    u3285 0333                      u2901 0E36                      u3365 07A1  
                    u2741 0D5F                      u2725 0D4F                      u2661 0D12  
                    u2821 0C2B                      u2805 0C15                      u1950 0EA9  
                    u1934 0E9A                      u3470 0DAE                      u3550 0BDF  
                    u3390 07BF                      u2670 0D24                      u2830 0C31  
                    u2750 0BE7                      u1951 0EA5                      u1855 0E67  
                    u3551 0BDE                      u3535 0BBD                      u3295 034D  
                    u3391 07BE                      u2671 0D23                      u2831 0C30  
                    u2815 0C20                      u2751 0BE6                      u3560 0A01  
                    u2920 0E48                      u2840 0DEA                      u2760 0BF2  
                    u3480 0A5B                      u1945 0E9D                      u3465 0D7A  
                    u3561 0A00                      u2921 0E47                      u2841 0DE9  
                    u3385 07B4                      u2761 0BF1                      u3481 0A5A  
                    u1890 0E85                      u1874 0E76                      u3490 0B07  
                    u2930 0E4D                      u2850 0E01                      u2690 0D36  
                    u2770 0BFD                      u1891 0E81                      u2595 0CB0  
                    u3475 0DA9                      u2931 0E4C                      u2915 0E3A  
                    u2691 0D35                      u2771 0BFC                      u1980 0EBB  
                    u1964 0EAC                      u2940 0034                      u2860 0E17  
                    u3580 0FC9                      u1981 0EB7                      u1885 0E79  
                    u2941 0033                      u2861 0E16                      u2685 0D28  
                    u3581 0FC8                      u2950 003A                      u2870 0E1E  
                    u2790 0C0F                      u3590 0FD9                      u1975 0EAF  
                    u2951 0039                      u2871 0E1D                      u2855 0DFC  
                    u2791 0C0E                      u3591 0FD8                      u2960 003F  
                    u3657 0A39                      u2961 003E                      u2785 0C01  
                    u1994 0EBE                      u2970 0060                      u2890 0E30  
             main@entrada 0059                      u3667 0B4A                      u2971 005F  
                    u2891 0E2F                      u2980 0066                      u3677 0B5B  
                    u2981 0065                      u2885 0E20                      u2990 006B  
                    i1l55 09EE                      u3687 0B6C                      u2991 006A  
                    u3697 0A7D                      _main 0EE3                      btemp 007E  
                    start 000E           LcdSetCursor@row 0024           __end_of_LcdInit 0B89  
         __end_of_LcdPort 0EE3         ___bmul@multiplier 0078      __end_of_LcdSetCursor 0ACF  
                   ??_isr 0072       analogToString@value 0048       analogToString@valor 004F  
            ?_intToString 0070             ___fltol@sign1 0025              main@contador 0058  
         __end_of___fladd 0614                     ?_main 0070           __end_of___awdiv 0D6A  
         __end_of___awmod 0C3B           __end_of___flmul 0384           __end_of___flsub 0AAA  
         __end_of___fltol 0E59                     _ANSEL 0188           __end_of___lldiv 0D01  
         ___awdiv@divisor 0075                     i1l189 0A29           ___awdiv@counter 0021  
                   _RCREG 001A                     _SPBRG 0099                     _TRISD 0088  
                   _TRISE 0089                     _TXREG 0019          __end_of_UARTInit 0DDD  
         __end_of_initADC 0A17           __end_of_readADC 0A6C                     pclath 000A  
                   status 0003                     wtemp0 007E      __end_of_LcdWriteChar 0A3F  
         __initialization 0011              __end_of_main 1000                    ??_main 0053  
    analogToString@entero 004E      analogToString@string 0049     __end_of_UARTDataReady 09DD  
                  _ADRESH 001E          ___awdiv@dividend 0077                    _ANSELH 0189  
                  i1l2443 09E9                    i1l2375 0A17                    i1l2377 0A1D  
                  i1l2379 0A28                    u357_20 0A1D                    u357_21 0A1C  
               ??_LcdInit 0021                 ??_LcdPort 0075          __end_of___xxtofl 07FC  
                  _LcdCmd 0A6C            _analogToString 0614                    ___bmul 0A3F  
               ??___fladd 0028                 ??___awdiv 0020                 ??___awmod 0020  
               ??___flmul 0032                 ??___flsub 0079                 ??___fltol 0020  
               ??___lldiv 0075                    _isrADC 0A17   __size_of_UARTSendString 0057  
        ___awdiv@quotient 0023           ___awmod@divisor 0075           ___awmod@counter 0021  
               ??_initADC 0075                 ??_readADC 0075        __size_of__Umul8_16 0029  
                  saved_w 007E              ___xxtofl@arg 0026              ___xxtofl@exp 0025  
            ___xxtofl@val 0075   __end_of__initialization 001F   __size_of_LcdWriteString 0046  
  __end_of_analogToString 0740                ___fltol@f1 0075     __size_of_LcdSetCursor 0025  
     ___bmul@multiplicand 0075          intToString@value 002D          intToString@valor 0028  
       LcdWriteChar@value 0078            __pcstackCOMMON 0070                 ?_UARTInit 002D  
    __size_of_intToString 005E  UARTSendString@max_length 0078     __size_of_LcdWriteChar 0015  
            _LcdSetCursor 0AAA                __pbssBANK0 005B                   ?_LcdCmd 0070  
         ?_analogToString 0070         __end_of__Umul8_16 0AF8                __pmaintext 0EE3  
                 ?___bmul 0075                ??_UARTInit 0032                __pintentry 0004  
                 ?_isrADC 0070              _LcdWriteChar 0A2A                 ?___xxtofl 0075  
           ?_UARTReadChar 0070                __stringtab 0800             ?_UARTSendChar 0070  
                 _LcdInit 0B3E                   _LcdPort 0E59                 _ADC_VALUE 005B  
         __size_of_LcdCmd 001A           __size_of___bmul 0015                   ___fladd 0384  
                 ___awdiv 0D01                   ___awmod 0BE0                   ___flmul 0023  
                 ___flsub 0A86                   ___fltol 0DDD                   ___lldiv 0C99  
          _UARTSendString 0B89           __size_of_isrADC 0013                   __ptext1 0A54  
                 __ptext2 0C3B                   __ptext3 0A3F                   __ptext4 0BE0  
                 __ptext5 0D01                   __ptext6 0A05                   __ptext7 0614  
                 __ptext8 0740                   __ptext9 0DDD                   _initADC 0A05  
                 _readADC 0A54              __size_of_isr 000E                ??___xxtofl 0020  
        ___awmod@dividend 0077            ??_UARTReadChar 0076                   main@val 005A  
    end_of_initialization 001F            ??_UARTSendChar 0075            _LcdWriteString 0AF8  
         ___lldiv@divisor 0020           ___lldiv@counter 002C                 _RCSTAbits 0018  
  __end_of_UARTSendString 0BE0               ___fladd@grs 0078             ___xxtofl@sign 0024  
               _TRISCbits 0087        LcdSetCursor@column 0021        main@contadorString 0055  
  __end_of_LcdWriteString 0B3E               ___flmul@grs 0038                 _TXSTAbits 0098  
       intToString@entero 002C            __end_of_LcdCmd 0A86    __size_of_UARTDataReady 0007  
         ?_UARTSendString 0076            __end_of___bmul 0A54         __size_of_UARTInit 0073  
          __end_of_isrADC 0A2A                readADC@pin 0076       start_initialization 0011  
             __end_of_isr 09F7           ?_LcdWriteString 0020          ??_analogToString 0044  
                ??_LcdCmd 0077                  ??___bmul 0076      __end_of_UARTReadChar 0A05  
               __Umul8_16 0ACF                  ??_isrADC 0070             ??_intToString 0025  
    __end_of_UARTSendChar 09E9                 ___fladd@a 0024                 ___fladd@b 0020  
               ___flmul@a 002E                 ___flmul@b 002A                 ___flsub@a 0030  
               ___flsub@b 0034                 ___latbits 0002             __pcstackBANK0 0020  
           _UARTDataReady 09D6         __size_of___xxtofl 00BC                  ?_LcdInit 0070  
                ?_LcdPort 0070             UARTSendChar@c 0075                  ?___fladd 0020  
                ?___awdiv 0075                  ?___awmod 0075                  ?___flmul 002A  
                ?___flsub 0030                  ?___fltol 0075                  ?___lldiv 0020  
              ?__Umul8_16 0075                 __pstrings 0800                  ?_initADC 0070  
                ?_readADC 0070       __end_of_intToString 0C99            ?_UARTDataReady 0070  
       interrupt_function 0004                  _PIE1bits 008C           UARTSendString@i 0023  
                _PIR1bits 000C                  _UARTInit 0D6A                _ADCON0bits 001F  
             __stringbase 080F                _ADCON1bits 009F          __size_of_LcdInit 004B  
        ??_UARTSendString 0020          __size_of_LcdPort 008A     __size_of_UARTReadChar 000E  
            LcdPort@value 0076     __size_of_UARTSendChar 000C              UARTInit@BRGH 0031  
             LcdCmd@value 0020               ??__Umul8_16 0077          __size_of___fladd 0290  
        __size_of___awdiv 0069          __size_of___awmod 005B          __size_of___flmul 0361  
        __size_of___flsub 0024          __size_of___fltol 007C          __size_of___lldiv 0068  
             _intToString 0C3B        __end_of__stringtab 0810           ??_UARTDataReady 0075  
        ??_LcdWriteString 0022          __size_of_initADC 0012          __size_of_readADC 0018  
                ___xxtofl 0740                  __ptext10 0A86                  __ptext11 0384  
                __ptext20 0AF8                  __ptext12 0023                  __ptext21 0A2A  
                __ptext13 0ACF                  __ptext22 0AAA                  __ptext14 0B89  
                __ptext23 0B3E                  __ptext15 09DD                  __ptext24 0A6C  
                __ptext16 09F7                  __ptext25 0E59                  __ptext17 09D6  
                __ptext26 09E9                  __ptext18 0D6A                  __ptext27 0A17  
                __ptext19 0C99              _UARTReadChar 09F7             ?_LcdSetCursor 0021  
            _UARTSendChar 09DD             __size_of_main 011D           LcdWriteString@i 0025  
                main@adc1 0056                  main@adc2 0057                  main@val2 0054  
           ?_LcdWriteChar 0070                _INTCONbits 000B            ??_LcdSetCursor 0022  
       UARTSendString@str 0076                  intlevel1 0000          ___lldiv@dividend 0024  
               stringcode 080A            ??_LcdWriteChar 0077    __Umul8_16@multiplicand 0075  
        ___lldiv@quotient 0028                  stringdir 080A                  stringtab 0800  
           ___fladd@signs 0075       LcdWriteString@value 0020              ___fladd@aexp 0076  
            ___fladd@bexp 0077      __Umul8_16@multiplier 0024         __Umul8_16@product 0020  
