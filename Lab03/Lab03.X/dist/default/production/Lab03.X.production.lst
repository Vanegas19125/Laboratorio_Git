

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Jul 30 11:19:21 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.20
    21                           ; Generated 12/02/2020 GMT
    22                           ; 
    23                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F887 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  008F                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  0105                     	;# 
   118  0107                     	;# 
   119  0108                     	;# 
   120  0109                     	;# 
   121  010C                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010F                     	;# 
   126  0185                     	;# 
   127  0187                     	;# 
   128  0188                     	;# 
   129  0189                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  008F                     	;# 
   177  0090                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0095                     	;# 
   185  0096                     	;# 
   186  0097                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009A                     	;# 
   190  009B                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  0105                     	;# 
   196  0107                     	;# 
   197  0108                     	;# 
   198  0109                     	;# 
   199  010C                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  0185                     	;# 
   205  0187                     	;# 
   206  0188                     	;# 
   207  0189                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210  0000                     	;# 
   211  0001                     	;# 
   212  0002                     	;# 
   213  0003                     	;# 
   214  0004                     	;# 
   215  0005                     	;# 
   216  0006                     	;# 
   217  0007                     	;# 
   218  0008                     	;# 
   219  0009                     	;# 
   220  000A                     	;# 
   221  000B                     	;# 
   222  000C                     	;# 
   223  000D                     	;# 
   224  000E                     	;# 
   225  000E                     	;# 
   226  000F                     	;# 
   227  0010                     	;# 
   228  0011                     	;# 
   229  0012                     	;# 
   230  0013                     	;# 
   231  0014                     	;# 
   232  0015                     	;# 
   233  0015                     	;# 
   234  0016                     	;# 
   235  0017                     	;# 
   236  0018                     	;# 
   237  0019                     	;# 
   238  001A                     	;# 
   239  001B                     	;# 
   240  001B                     	;# 
   241  001C                     	;# 
   242  001D                     	;# 
   243  001E                     	;# 
   244  001F                     	;# 
   245  0081                     	;# 
   246  0085                     	;# 
   247  0086                     	;# 
   248  0087                     	;# 
   249  0088                     	;# 
   250  0089                     	;# 
   251  008C                     	;# 
   252  008D                     	;# 
   253  008E                     	;# 
   254  008F                     	;# 
   255  0090                     	;# 
   256  0091                     	;# 
   257  0092                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0094                     	;# 
   262  0095                     	;# 
   263  0096                     	;# 
   264  0097                     	;# 
   265  0098                     	;# 
   266  0099                     	;# 
   267  009A                     	;# 
   268  009B                     	;# 
   269  009C                     	;# 
   270  009D                     	;# 
   271  009E                     	;# 
   272  009F                     	;# 
   273  0105                     	;# 
   274  0107                     	;# 
   275  0108                     	;# 
   276  0109                     	;# 
   277  010C                     	;# 
   278  010C                     	;# 
   279  010D                     	;# 
   280  010E                     	;# 
   281  010F                     	;# 
   282  0185                     	;# 
   283  0187                     	;# 
   284  0188                     	;# 
   285  0189                     	;# 
   286  018C                     	;# 
   287  018D                     	;# 
   288  0000                     	;# 
   289  0001                     	;# 
   290  0002                     	;# 
   291  0003                     	;# 
   292  0004                     	;# 
   293  0005                     	;# 
   294  0006                     	;# 
   295  0007                     	;# 
   296  0008                     	;# 
   297  0009                     	;# 
   298  000A                     	;# 
   299  000B                     	;# 
   300  000C                     	;# 
   301  000D                     	;# 
   302  000E                     	;# 
   303  000E                     	;# 
   304  000F                     	;# 
   305  0010                     	;# 
   306  0011                     	;# 
   307  0012                     	;# 
   308  0013                     	;# 
   309  0014                     	;# 
   310  0015                     	;# 
   311  0015                     	;# 
   312  0016                     	;# 
   313  0017                     	;# 
   314  0018                     	;# 
   315  0019                     	;# 
   316  001A                     	;# 
   317  001B                     	;# 
   318  001B                     	;# 
   319  001C                     	;# 
   320  001D                     	;# 
   321  001E                     	;# 
   322  001F                     	;# 
   323  0081                     	;# 
   324  0085                     	;# 
   325  0086                     	;# 
   326  0087                     	;# 
   327  0088                     	;# 
   328  0089                     	;# 
   329  008C                     	;# 
   330  008D                     	;# 
   331  008E                     	;# 
   332  008F                     	;# 
   333  0090                     	;# 
   334  0091                     	;# 
   335  0092                     	;# 
   336  0093                     	;# 
   337  0093                     	;# 
   338  0093                     	;# 
   339  0094                     	;# 
   340  0095                     	;# 
   341  0096                     	;# 
   342  0097                     	;# 
   343  0098                     	;# 
   344  0099                     	;# 
   345  009A                     	;# 
   346  009B                     	;# 
   347  009C                     	;# 
   348  009D                     	;# 
   349  009E                     	;# 
   350  009F                     	;# 
   351  0105                     	;# 
   352  0107                     	;# 
   353  0108                     	;# 
   354  0109                     	;# 
   355  010C                     	;# 
   356  010C                     	;# 
   357  010D                     	;# 
   358  010E                     	;# 
   359  010F                     	;# 
   360  0185                     	;# 
   361  0187                     	;# 
   362  0188                     	;# 
   363  0189                     	;# 
   364  018C                     	;# 
   365  018D                     	;# 
   366  0000                     	;# 
   367  0001                     	;# 
   368  0002                     	;# 
   369  0003                     	;# 
   370  0004                     	;# 
   371  0005                     	;# 
   372  0006                     	;# 
   373  0007                     	;# 
   374  0008                     	;# 
   375  0009                     	;# 
   376  000A                     	;# 
   377  000B                     	;# 
   378  000C                     	;# 
   379  000D                     	;# 
   380  000E                     	;# 
   381  000E                     	;# 
   382  000F                     	;# 
   383  0010                     	;# 
   384  0011                     	;# 
   385  0012                     	;# 
   386  0013                     	;# 
   387  0014                     	;# 
   388  0015                     	;# 
   389  0015                     	;# 
   390  0016                     	;# 
   391  0017                     	;# 
   392  0018                     	;# 
   393  0019                     	;# 
   394  001A                     	;# 
   395  001B                     	;# 
   396  001B                     	;# 
   397  001C                     	;# 
   398  001D                     	;# 
   399  001E                     	;# 
   400  001F                     	;# 
   401  0081                     	;# 
   402  0085                     	;# 
   403  0086                     	;# 
   404  0087                     	;# 
   405  0088                     	;# 
   406  0089                     	;# 
   407  008C                     	;# 
   408  008D                     	;# 
   409  008E                     	;# 
   410  008F                     	;# 
   411  0090                     	;# 
   412  0091                     	;# 
   413  0092                     	;# 
   414  0093                     	;# 
   415  0093                     	;# 
   416  0093                     	;# 
   417  0094                     	;# 
   418  0095                     	;# 
   419  0096                     	;# 
   420  0097                     	;# 
   421  0098                     	;# 
   422  0099                     	;# 
   423  009A                     	;# 
   424  009B                     	;# 
   425  009C                     	;# 
   426  009D                     	;# 
   427  009E                     	;# 
   428  009F                     	;# 
   429  0105                     	;# 
   430  0107                     	;# 
   431  0108                     	;# 
   432  0109                     	;# 
   433  010C                     	;# 
   434  010C                     	;# 
   435  010D                     	;# 
   436  010E                     	;# 
   437  010F                     	;# 
   438  0185                     	;# 
   439  0187                     	;# 
   440  0188                     	;# 
   441  0189                     	;# 
   442  018C                     	;# 
   443  018D                     	;# 
   444  001E                     _ADRESH	set	30
   445  001F                     _ADCON0bits	set	31
   446  0013                     _SSPBUF	set	19
   447  0014                     _SSPCON	set	20
   448  001A                     _RCREG	set	26
   449  0019                     _TXREG	set	25
   450  0018                     _RCSTAbits	set	24
   451  000C                     _PIR1bits	set	12
   452  000B                     _INTCONbits	set	11
   453  009F                     _ADCON1bits	set	159
   454  0094                     _SSPSTATbits	set	148
   455  0094                     _SSPSTAT	set	148
   456  0087                     _TRISCbits	set	135
   457  0098                     _TXSTAbits	set	152
   458  0099                     _SPBRG	set	153
   459  008C                     _PIE1bits	set	140
   460  043B                     _TRISC3	set	1083
   461  043D                     _TRISC5	set	1085
   462  0189                     _ANSELH	set	393
   463  0188                     _ANSEL	set	392
   464                           
   465                           	psect	cinit
   466  000F                     start_initialization:	
   467                           ; #config settings
   468                           
   469  000F                     __initialization:
   470                           
   471                           ; Clear objects allocated to COMMON
   472  000F  01F6               	clrf	__pbssCOMMON& (0+127)
   473  0010  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   474  0011  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   475  0012  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   476  0013                     end_of_initialization:	
   477                           ;End of C runtime variable initialization code
   478                           
   479  0013                     __end_of__initialization:
   480  0013  0183               	clrf	3
   481  0014  120A  118A  2817   	ljmp	_main	;jump to C main() function
   482                           
   483                           	psect	bssCOMMON
   484  0076                     __pbssCOMMON:
   485  0076                     _cadena:
   486  0076                     	ds	1
   487  0077                     _valor:
   488  0077                     	ds	1
   489  0078                     _adcValue2:
   490  0078                     	ds	1
   491  0079                     _adcValue:
   492  0079                     	ds	1
   493                           
   494                           	psect	cstackCOMMON
   495  0070                     __pcstackCOMMON:
   496  0070                     ?_initADC:
   497  0070                     ?_readADC:	
   498                           ; 1 bytes @ 0x0
   499                           
   500  0070                     ?_spiRead:	
   501                           ; 1 bytes @ 0x0
   502                           
   503  0070                     ??_spiRead:	
   504                           ; 1 bytes @ 0x0
   505                           
   506  0070                     ?_spiWrite:	
   507                           ; 1 bytes @ 0x0
   508                           
   509  0070                     ??_spiWrite:	
   510                           ; 1 bytes @ 0x0
   511                           
   512  0070                     ?_main:	
   513                           ; 1 bytes @ 0x0
   514                           
   515  0070                     ?_isr:	
   516                           ; 1 bytes @ 0x0
   517                           
   518  0070                     ?_spiReceiveWait:	
   519                           ; 1 bytes @ 0x0
   520                           
   521  0070                     ??_spiReceiveWait:	
   522                           ; 1 bytes @ 0x0
   523                           
   524  0070                     spiWrite@dat:	
   525                           ; 1 bytes @ 0x0
   526                           
   527                           
   528                           ; 1 bytes @ 0x0
   529  0070                     	ds	1
   530  0071                     ??_isr:
   531                           
   532                           ; 1 bytes @ 0x1
   533  0071                     	ds	3
   534  0074                     ??_spiInit:
   535  0074                     ??_initADC:	
   536                           ; 1 bytes @ 0x4
   537                           
   538  0074                     ??_readADC:	
   539                           ; 1 bytes @ 0x4
   540                           
   541  0074                     spiInit@sType:	
   542                           ; 1 bytes @ 0x4
   543                           
   544                           
   545                           ; 1 bytes @ 0x4
   546  0074                     	ds	1
   547  0075                     readADC@pin:
   548                           
   549                           ; 1 bytes @ 0x5
   550  0075                     	ds	1
   551                           
   552                           	psect	cstackBANK0
   553  0020                     __pcstackBANK0:
   554  0020                     ?_spiInit:
   555  0020                     spiInit@sDataSample:	
   556                           ; 1 bytes @ 0x0
   557                           
   558                           
   559                           ; 1 bytes @ 0x0
   560  0020                     	ds	1
   561  0021                     spiInit@sClockIdle:
   562                           
   563                           ; 1 bytes @ 0x1
   564  0021                     	ds	1
   565  0022                     spiInit@sTransmitEdge:
   566                           
   567                           ; 1 bytes @ 0x2
   568  0022                     	ds	1
   569  0023                     ??_main:
   570                           
   571                           ; 1 bytes @ 0x3
   572  0023                     	ds	1
   573                           
   574                           	psect	maintext
   575  0017                     __pmaintext:	
   576 ;;
   577 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   578 ;;
   579 ;; *************** function _main *****************
   580 ;; Defined at:
   581 ;;		line 39 in file "main.c"
   582 ;; Parameters:    Size  Location     Type
   583 ;;		None
   584 ;; Auto vars:     Size  Location     Type
   585 ;;		None
   586 ;; Return value:  Size  Location     Type
   587 ;;                  1    wreg      void 
   588 ;; Registers used:
   589 ;;		wreg, status,2, status,0, pclath, cstack
   590 ;; Tracked objects:
   591 ;;		On entry : B00/0
   592 ;;		On exit  : 0/0
   593 ;;		Unchanged: 0/0
   594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   595 ;;      Params:         0       0       0       0       0
   596 ;;      Locals:         0       0       0       0       0
   597 ;;      Temps:          0       1       0       0       0
   598 ;;      Totals:         0       1       0       0       0
   599 ;;Total ram usage:        1 bytes
   600 ;; Hardware stack levels required when called:    4
   601 ;; This function calls:
   602 ;;		_initADC
   603 ;;		_readADC
   604 ;;		_spiInit
   605 ;; This function is called by:
   606 ;;		Startup code after reset
   607 ;; This function uses a non-reentrant model
   608 ;;
   609                           
   610                           
   611                           ;psect for function _main
   612  0017                     _main:
   613  0017                     l925:	
   614                           ;incstack = 0
   615                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   616                           
   617                           
   618                           ;main.c: 40:     ANSEL = 3;
   619  0017  3003               	movlw	3
   620  0018  1683               	bsf	3,5	;RP0=1, select bank3
   621  0019  1703               	bsf	3,6	;RP1=1, select bank3
   622  001A  0088               	movwf	8	;volatile
   623  001B                     l927:
   624                           
   625                           ;main.c: 41:     ANSELH= 0;
   626  001B  0189               	clrf	9	;volatile
   627  001C                     l929:
   628                           
   629                           ;main.c: 42:     INTCONbits.GIE =1;
   630  001C  178B               	bsf	11,7	;volatile
   631  001D                     l931:
   632                           
   633                           ;main.c: 43:     INTCONbits.PEIE =1;
   634  001D  170B               	bsf	11,6	;volatile
   635  001E                     l933:
   636                           
   637                           ;main.c: 44:     PIE1bits.SSPIE = 1;
   638  001E  1683               	bsf	3,5	;RP0=1, select bank1
   639  001F  1303               	bcf	3,6	;RP1=0, select bank1
   640  0020  158C               	bsf	12,3	;volatile
   641  0021                     l935:
   642                           
   643                           ;main.c: 47:     spiInit(SPI_SLAVE_SS_DIS,SPI_DATA_SAMPLE_MIDDLE,
   644  0021  1283               	bcf	3,5	;RP0=0, select bank0
   645  0022  1303               	bcf	3,6	;RP1=0, select bank0
   646  0023  01A0               	clrf	spiInit@sDataSample
   647  0024  01A1               	clrf	spiInit@sClockIdle
   648  0025  01A2               	clrf	spiInit@sTransmitEdge
   649  0026  3025               	movlw	37
   650  0027  120A  118A  207C  120A  118A  	fcall	_spiInit
   651  002C                     l937:
   652                           
   653                           ;main.c: 49:     initADC();
   654  002C  120A  118A  20AD  120A  118A  	fcall	_initADC
   655  0031                     l939:
   656                           
   657                           ;main.c: 52:         adcValue = readADC(0);
   658  0031  3000               	movlw	0
   659  0032  120A  118A  209A  120A  118A  	fcall	_readADC
   660  0037  1283               	bcf	3,5	;RP0=0, select bank0
   661  0038  1303               	bcf	3,6	;RP1=0, select bank0
   662  0039  00A3               	movwf	??_main
   663  003A  0823               	movf	??_main,w
   664  003B  00F9               	movwf	_adcValue
   665  003C                     l941:
   666                           
   667                           ;main.c: 53:         adcValue2 = readADC(1);
   668  003C  3001               	movlw	1
   669  003D  120A  118A  209A  120A  118A  	fcall	_readADC
   670  0042  1283               	bcf	3,5	;RP0=0, select bank0
   671  0043  1303               	bcf	3,6	;RP1=0, select bank0
   672  0044  00A3               	movwf	??_main
   673  0045  0823               	movf	??_main,w
   674  0046  00F8               	movwf	_adcValue2
   675  0047  2831               	goto	l939
   676  0048  120A  118A  280C   	ljmp	start
   677  004B                     __end_of_main:
   678                           
   679                           	psect	text1
   680  007C                     __ptext1:	
   681 ;; *************** function _spiInit *****************
   682 ;; Defined at:
   683 ;;		line 12 in file "spi.c"
   684 ;; Parameters:    Size  Location     Type
   685 ;;  sType           1    wreg     enum E1264
   686 ;;  sDataSample     1    0[BANK0 ] enum E1272
   687 ;;  sClockIdle      1    1[BANK0 ] enum E1276
   688 ;;  sTransmitEdg    1    2[BANK0 ] enum E1280
   689 ;; Auto vars:     Size  Location     Type
   690 ;;  sType           1    4[COMMON] enum E1264
   691 ;; Return value:  Size  Location     Type
   692 ;;                  1    wreg      void 
   693 ;; Registers used:
   694 ;;		wreg, status,2, status,0
   695 ;; Tracked objects:
   696 ;;		On entry : 0/0
   697 ;;		On exit  : 0/0
   698 ;;		Unchanged: 0/0
   699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   700 ;;      Params:         0       3       0       0       0
   701 ;;      Locals:         1       0       0       0       0
   702 ;;      Temps:          0       0       0       0       0
   703 ;;      Totals:         1       3       0       0       0
   704 ;;Total ram usage:        4 bytes
   705 ;; Hardware stack levels used:    1
   706 ;; Hardware stack levels required when called:    3
   707 ;; This function calls:
   708 ;;		Nothing
   709 ;; This function is called by:
   710 ;;		_main
   711 ;; This function uses a non-reentrant model
   712 ;;
   713                           
   714                           
   715                           ;psect for function _spiInit
   716  007C                     _spiInit:
   717                           
   718                           ;incstack = 0
   719                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   720                           ;spiInit@sType stored from wreg
   721  007C  00F4               	movwf	spiInit@sType
   722  007D                     l915:
   723                           
   724                           ;spi.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);spi.c: 13: {;spi.c: 14:     TRISC5 = 0;
   725  007D  1683               	bsf	3,5	;RP0=1, select bank1
   726  007E  1303               	bcf	3,6	;RP1=0, select bank1
   727  007F  1287               	bcf	7,5	;volatile
   728                           
   729                           ;spi.c: 15:     if(sType & 0b00000100)
   730  0080  1D74               	btfss	spiInit@sType,2
   731  0081  2883               	goto	u191
   732  0082  2884               	goto	u190
   733  0083                     u191:
   734  0083  288C               	goto	l921
   735  0084                     u190:
   736  0084                     l917:
   737                           
   738                           ;spi.c: 16:     {;spi.c: 17:         SSPSTAT = sTransmitEdge;
   739  0084  1283               	bcf	3,5	;RP0=0, select bank0
   740  0085  1303               	bcf	3,6	;RP1=0, select bank0
   741  0086  0822               	movf	spiInit@sTransmitEdge,w
   742  0087  1683               	bsf	3,5	;RP0=1, select bank1
   743  0088  1303               	bcf	3,6	;RP1=0, select bank1
   744  0089  0094               	movwf	20	;volatile
   745  008A                     l919:
   746                           
   747                           ;spi.c: 18:         TRISC3 = 1;
   748  008A  1587               	bsf	7,3	;volatile
   749                           
   750                           ;spi.c: 19:     }
   751  008B  2894               	goto	l112
   752  008C                     l921:
   753                           
   754                           ;spi.c: 21:     {;spi.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   755  008C  1283               	bcf	3,5	;RP0=0, select bank0
   756  008D  1303               	bcf	3,6	;RP1=0, select bank0
   757  008E  0820               	movf	spiInit@sDataSample,w
   758  008F  0422               	iorwf	spiInit@sTransmitEdge,w
   759  0090  1683               	bsf	3,5	;RP0=1, select bank1
   760  0091  1303               	bcf	3,6	;RP1=0, select bank1
   761  0092  0094               	movwf	20	;volatile
   762  0093                     l923:
   763                           
   764                           ;spi.c: 23:         TRISC3 = 0;
   765  0093  1187               	bcf	7,3	;volatile
   766  0094                     l112:	
   767                           ;spi.c: 24:     }
   768                           
   769                           
   770                           ;spi.c: 26:     SSPCON = sType | sClockIdle;
   771  0094  0874               	movf	spiInit@sType,w
   772  0095  1283               	bcf	3,5	;RP0=0, select bank0
   773  0096  1303               	bcf	3,6	;RP1=0, select bank0
   774  0097  0421               	iorwf	spiInit@sClockIdle,w
   775  0098  0094               	movwf	20	;volatile
   776  0099                     l113:
   777  0099  0008               	return
   778  009A                     __end_of_spiInit:
   779                           
   780                           	psect	text2
   781  009A                     __ptext2:	
   782 ;; *************** function _readADC *****************
   783 ;; Defined at:
   784 ;;		line 32 in file "ADC.c"
   785 ;; Parameters:    Size  Location     Type
   786 ;;  pin             1    wreg     unsigned char 
   787 ;; Auto vars:     Size  Location     Type
   788 ;;  pin             1    5[COMMON] unsigned char 
   789 ;; Return value:  Size  Location     Type
   790 ;;                  1    wreg      unsigned char 
   791 ;; Registers used:
   792 ;;		wreg, status,2, status,0
   793 ;; Tracked objects:
   794 ;;		On entry : 0/0
   795 ;;		On exit  : 0/0
   796 ;;		Unchanged: 0/0
   797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   798 ;;      Params:         0       0       0       0       0
   799 ;;      Locals:         1       0       0       0       0
   800 ;;      Temps:          1       0       0       0       0
   801 ;;      Totals:         2       0       0       0       0
   802 ;;Total ram usage:        2 bytes
   803 ;; Hardware stack levels used:    1
   804 ;; Hardware stack levels required when called:    3
   805 ;; This function calls:
   806 ;;		Nothing
   807 ;; This function is called by:
   808 ;;		_main
   809 ;; This function uses a non-reentrant model
   810 ;;
   811                           
   812                           
   813                           ;psect for function _readADC
   814  009A                     _readADC:
   815                           
   816                           ;incstack = 0
   817                           ; Regs used in _readADC: [wreg+status,2+status,0]
   818                           ;readADC@pin stored from wreg
   819  009A  00F5               	movwf	readADC@pin
   820  009B                     l765:
   821                           
   822                           ;ADC.c: 33:     ADCON0bits.CHS = pin;
   823  009B  0875               	movf	readADC@pin,w
   824  009C  00F4               	movwf	??_readADC
   825  009D  0DF4               	rlf	??_readADC,f
   826  009E  0DF4               	rlf	??_readADC,f
   827  009F  1283               	bcf	3,5	;RP0=0, select bank0
   828  00A0  1303               	bcf	3,6	;RP1=0, select bank0
   829  00A1  081F               	movf	31,w	;volatile
   830  00A2  0674               	xorwf	??_readADC,w
   831  00A3  39C3               	andlw	-61
   832  00A4  0674               	xorwf	??_readADC,w
   833  00A5  009F               	movwf	31	;volatile
   834  00A6                     l767:
   835                           
   836                           ;ADC.c: 34:     ADCON0bits.GO = 1;
   837  00A6  149F               	bsf	31,1	;volatile
   838  00A7                     l142:	
   839                           ;ADC.c: 35:     while(ADCON0bits.GO);
   840                           
   841  00A7  189F               	btfsc	31,1	;volatile
   842  00A8  28AA               	goto	u31
   843  00A9  28AB               	goto	u30
   844  00AA                     u31:
   845  00AA  28A7               	goto	l142
   846  00AB                     u30:
   847  00AB                     l769:
   848                           
   849                           ;ADC.c: 36:     return ADRESH;
   850  00AB  081E               	movf	30,w	;volatile
   851  00AC                     l145:
   852  00AC  0008               	return
   853  00AD                     __end_of_readADC:
   854                           
   855                           	psect	text3
   856  00AD                     __ptext3:	
   857 ;; *************** function _initADC *****************
   858 ;; Defined at:
   859 ;;		line 11 in file "ADC.c"
   860 ;; Parameters:    Size  Location     Type
   861 ;;		None
   862 ;; Auto vars:     Size  Location     Type
   863 ;;		None
   864 ;; Return value:  Size  Location     Type
   865 ;;                  1    wreg      void 
   866 ;; Registers used:
   867 ;;		wreg, status,2, status,0
   868 ;; Tracked objects:
   869 ;;		On entry : 0/0
   870 ;;		On exit  : 0/0
   871 ;;		Unchanged: 0/0
   872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   873 ;;      Params:         0       0       0       0       0
   874 ;;      Locals:         0       0       0       0       0
   875 ;;      Temps:          0       0       0       0       0
   876 ;;      Totals:         0       0       0       0       0
   877 ;;Total ram usage:        0 bytes
   878 ;; Hardware stack levels used:    1
   879 ;; Hardware stack levels required when called:    3
   880 ;; This function calls:
   881 ;;		Nothing
   882 ;; This function is called by:
   883 ;;		_main
   884 ;; This function uses a non-reentrant model
   885 ;;
   886                           
   887                           
   888                           ;psect for function _initADC
   889  00AD                     _initADC:
   890  00AD                     l753:	
   891                           ;incstack = 0
   892                           ; Regs used in _initADC: [wreg+status,2+status,0]
   893                           
   894                           
   895                           ;ADC.c: 18:     ADCON0bits.ADCS = 1;
   896  00AD  1283               	bcf	3,5	;RP0=0, select bank0
   897  00AE  1303               	bcf	3,6	;RP1=0, select bank0
   898  00AF  081F               	movf	31,w	;volatile
   899  00B0  393F               	andlw	-193
   900  00B1  3840               	iorlw	64
   901  00B2  009F               	movwf	31	;volatile
   902  00B3                     l755:
   903                           
   904                           ;ADC.c: 24:     ADCON1bits.ADFM = 0;
   905  00B3  1683               	bsf	3,5	;RP0=1, select bank1
   906  00B4  1303               	bcf	3,6	;RP1=0, select bank1
   907  00B5  139F               	bcf	31,7	;volatile
   908  00B6                     l757:
   909                           
   910                           ;ADC.c: 25:     ADCON1bits.VCFG1 = 0;
   911  00B6  129F               	bcf	31,5	;volatile
   912  00B7                     l759:
   913                           
   914                           ;ADC.c: 26:     ADCON1bits.VCFG0 = 0;
   915  00B7  121F               	bcf	31,4	;volatile
   916  00B8                     l761:
   917                           
   918                           ;ADC.c: 27:     ADCON0bits.ADON = 1;
   919  00B8  1283               	bcf	3,5	;RP0=0, select bank0
   920  00B9  1303               	bcf	3,6	;RP1=0, select bank0
   921  00BA  141F               	bsf	31,0	;volatile
   922  00BB                     l139:
   923  00BB  0008               	return
   924  00BC                     __end_of_initADC:
   925                           
   926                           	psect	text4
   927  004B                     __ptext4:	
   928 ;; *************** function _isr *****************
   929 ;; Defined at:
   930 ;;		line 60 in file "main.c"
   931 ;; Parameters:    Size  Location     Type
   932 ;;		None
   933 ;; Auto vars:     Size  Location     Type
   934 ;;		None
   935 ;; Return value:  Size  Location     Type
   936 ;;                  1    wreg      void 
   937 ;; Registers used:
   938 ;;		wreg, status,2, status,0, pclath, cstack
   939 ;; Tracked objects:
   940 ;;		On entry : 0/0
   941 ;;		On exit  : 0/0
   942 ;;		Unchanged: 0/0
   943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   944 ;;      Params:         0       0       0       0       0
   945 ;;      Locals:         0       0       0       0       0
   946 ;;      Temps:          3       0       0       0       0
   947 ;;      Totals:         3       0       0       0       0
   948 ;;Total ram usage:        3 bytes
   949 ;; Hardware stack levels used:    1
   950 ;; Hardware stack levels required when called:    2
   951 ;; This function calls:
   952 ;;		_spiRead
   953 ;;		_spiWrite
   954 ;; This function is called by:
   955 ;;		Interrupt level 1
   956 ;; This function uses a non-reentrant model
   957 ;;
   958                           
   959                           
   960                           ;psect for function _isr
   961  004B                     _isr:
   962  004B                     i1l811:
   963                           
   964                           ;main.c: 61:     if(PIR1bits.SSPIF ==1){
   965  004B  1283               	bcf	3,5	;RP0=0, select bank0
   966  004C  1303               	bcf	3,6	;RP1=0, select bank0
   967  004D  1D8C               	btfss	12,3	;volatile
   968  004E  2850               	goto	u6_21
   969  004F  2851               	goto	u6_20
   970  0050                     u6_21:
   971  0050  2875               	goto	i1l45
   972  0051                     u6_20:
   973  0051                     i1l813:
   974                           
   975                           ;main.c: 63:         valor = spiRead();
   976  0051  120A  118A  20BC  120A  118A  	fcall	_spiRead
   977  0056  00F1               	movwf	??_isr
   978  0057  0871               	movf	??_isr,w
   979  0058  00F7               	movwf	_valor
   980  0059                     i1l815:
   981                           
   982                           ;main.c: 64:         if (valor=='A') spiWrite(adcValue);
   983  0059  3041               	movlw	65
   984  005A  0677               	xorwf	_valor,w
   985  005B  1D03               	btfss	3,2
   986  005C  285E               	goto	u7_21
   987  005D  285F               	goto	u7_20
   988  005E                     u7_21:
   989  005E  2866               	goto	i1l819
   990  005F                     u7_20:
   991  005F                     i1l817:
   992  005F  0879               	movf	_adcValue,w
   993  0060  120A  118A  20CC  120A  118A  	fcall	_spiWrite
   994  0065  2872               	goto	i1l823
   995  0066                     i1l819:
   996  0066  3042               	movlw	66
   997  0067  0677               	xorwf	_valor,w
   998  0068  1D03               	btfss	3,2
   999  0069  286B               	goto	u8_21
  1000  006A  286C               	goto	u8_20
  1001  006B                     u8_21:
  1002  006B  2872               	goto	i1l823
  1003  006C                     u8_20:
  1004  006C                     i1l821:
  1005  006C  0878               	movf	_adcValue2,w
  1006  006D  120A  118A  20CC  120A  118A  	fcall	_spiWrite
  1007  0072                     i1l823:
  1008                           
  1009                           ;main.c: 67:         PIR1bits.SSPIF = 0;
  1010  0072  1283               	bcf	3,5	;RP0=0, select bank0
  1011  0073  1303               	bcf	3,6	;RP1=0, select bank0
  1012  0074  118C               	bcf	12,3	;volatile
  1013  0075                     i1l45:
  1014  0075  0873               	movf	??_isr+2,w
  1015  0076  008A               	movwf	10
  1016  0077  0E72               	swapf	??_isr+1,w
  1017  0078  0083               	movwf	3
  1018  0079  0EFE               	swapf	btemp,f
  1019  007A  0E7E               	swapf	btemp,w
  1020  007B  0009               	retfie
  1021  007C                     __end_of_isr:
  1022                           
  1023                           	psect	intentry
  1024  0004                     __pintentry:	
  1025                           ;incstack = 0
  1026                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1027                           
  1028  0004                     interrupt_function:
  1029  007E                     saved_w	set	btemp
  1030  0004  00FE               	movwf	btemp
  1031  0005  0E03               	swapf	3,w
  1032  0006  00F2               	movwf	??_isr+1
  1033  0007  080A               	movf	10,w
  1034  0008  00F3               	movwf	??_isr+2
  1035  0009  120A  118A  284B   	ljmp	_isr
  1036                           
  1037                           	psect	text5
  1038  00CC                     __ptext5:	
  1039 ;; *************** function _spiWrite *****************
  1040 ;; Defined at:
  1041 ;;		line 34 in file "spi.c"
  1042 ;; Parameters:    Size  Location     Type
  1043 ;;  dat             1    wreg     unsigned char 
  1044 ;; Auto vars:     Size  Location     Type
  1045 ;;  dat             1    0[COMMON] unsigned char 
  1046 ;; Return value:  Size  Location     Type
  1047 ;;                  1    wreg      void 
  1048 ;; Registers used:
  1049 ;;		wreg
  1050 ;; Tracked objects:
  1051 ;;		On entry : 0/0
  1052 ;;		On exit  : 0/0
  1053 ;;		Unchanged: 0/0
  1054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1055 ;;      Params:         0       0       0       0       0
  1056 ;;      Locals:         1       0       0       0       0
  1057 ;;      Temps:          0       0       0       0       0
  1058 ;;      Totals:         1       0       0       0       0
  1059 ;;Total ram usage:        1 bytes
  1060 ;; Hardware stack levels used:    1
  1061 ;; This function calls:
  1062 ;;		Nothing
  1063 ;; This function is called by:
  1064 ;;		_isr
  1065 ;; This function uses a non-reentrant model
  1066 ;;
  1067                           
  1068                           
  1069                           ;psect for function _spiWrite
  1070  00CC                     _spiWrite:
  1071                           
  1072                           ;incstack = 0
  1073                           ; Regs used in _spiWrite: [wreg]
  1074                           ;spiWrite@dat stored from wreg
  1075  00CC  00F0               	movwf	spiWrite@dat
  1076  00CD                     i1l779:
  1077                           
  1078                           ;spi.c: 34: void spiWrite(char dat);spi.c: 35: {;spi.c: 36:     SSPBUF = dat;
  1079  00CD  0870               	movf	spiWrite@dat,w
  1080  00CE  1283               	bcf	3,5	;RP0=0, select bank0
  1081  00CF  1303               	bcf	3,6	;RP1=0, select bank0
  1082  00D0  0093               	movwf	19	;volatile
  1083  00D1                     i1l122:
  1084  00D1  0008               	return
  1085  00D2                     __end_of_spiWrite:
  1086                           
  1087                           	psect	text6
  1088  00BC                     __ptext6:	
  1089 ;; *************** function _spiRead *****************
  1090 ;; Defined at:
  1091 ;;		line 47 in file "spi.c"
  1092 ;; Parameters:    Size  Location     Type
  1093 ;;		None
  1094 ;; Auto vars:     Size  Location     Type
  1095 ;;		None
  1096 ;; Return value:  Size  Location     Type
  1097 ;;                  1    wreg      unsigned char 
  1098 ;; Registers used:
  1099 ;;		wreg, status,2, status,0, pclath, cstack
  1100 ;; Tracked objects:
  1101 ;;		On entry : 0/0
  1102 ;;		On exit  : 0/0
  1103 ;;		Unchanged: 0/0
  1104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1105 ;;      Params:         0       0       0       0       0
  1106 ;;      Locals:         0       0       0       0       0
  1107 ;;      Temps:          0       0       0       0       0
  1108 ;;      Totals:         0       0       0       0       0
  1109 ;;Total ram usage:        0 bytes
  1110 ;; Hardware stack levels used:    1
  1111 ;; Hardware stack levels required when called:    1
  1112 ;; This function calls:
  1113 ;;		_spiReceiveWait
  1114 ;; This function is called by:
  1115 ;;		_isr
  1116 ;; This function uses a non-reentrant model
  1117 ;;
  1118                           
  1119                           
  1120                           ;psect for function _spiRead
  1121  00BC                     _spiRead:
  1122  00BC                     i1l773:	
  1123                           ;incstack = 0
  1124                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1125                           
  1126                           
  1127                           ;spi.c: 49:     spiReceiveWait();
  1128  00BC  120A  118A  20C5  120A  118A  	fcall	_spiReceiveWait
  1129  00C1                     i1l775:
  1130                           
  1131                           ;spi.c: 50:     return(SSPBUF);
  1132  00C1  1283               	bcf	3,5	;RP0=0, select bank0
  1133  00C2  1303               	bcf	3,6	;RP1=0, select bank0
  1134  00C3  0813               	movf	19,w	;volatile
  1135  00C4                     i1l130:
  1136  00C4  0008               	return
  1137  00C5                     __end_of_spiRead:
  1138                           
  1139                           	psect	text7
  1140  00C5                     __ptext7:	
  1141 ;; *************** function _spiReceiveWait *****************
  1142 ;; Defined at:
  1143 ;;		line 29 in file "spi.c"
  1144 ;; Parameters:    Size  Location     Type
  1145 ;;		None
  1146 ;; Auto vars:     Size  Location     Type
  1147 ;;		None
  1148 ;; Return value:  Size  Location     Type
  1149 ;;                  1    wreg      void 
  1150 ;; Registers used:
  1151 ;;		None
  1152 ;; Tracked objects:
  1153 ;;		On entry : 0/0
  1154 ;;		On exit  : 0/0
  1155 ;;		Unchanged: 0/0
  1156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1157 ;;      Params:         0       0       0       0       0
  1158 ;;      Locals:         0       0       0       0       0
  1159 ;;      Temps:          0       0       0       0       0
  1160 ;;      Totals:         0       0       0       0       0
  1161 ;;Total ram usage:        0 bytes
  1162 ;; Hardware stack levels used:    1
  1163 ;; This function calls:
  1164 ;;		Nothing
  1165 ;; This function is called by:
  1166 ;;		_spiRead
  1167 ;; This function uses a non-reentrant model
  1168 ;;
  1169                           
  1170                           
  1171                           ;psect for function _spiReceiveWait
  1172  00C5                     _spiReceiveWait:
  1173  00C5                     i1l741:	
  1174                           ;incstack = 0
  1175                           ; Regs used in _spiReceiveWait: []
  1176                           
  1177  00C5                     i1l116:	
  1178                           ;spi.c: 31:     while ( !SSPSTATbits.BF );
  1179                           
  1180  00C5  1683               	bsf	3,5	;RP0=1, select bank1
  1181  00C6  1303               	bcf	3,6	;RP1=0, select bank1
  1182  00C7  1C14               	btfss	20,0	;volatile
  1183  00C8  28CA               	goto	u1_21
  1184  00C9  28CB               	goto	u1_20
  1185  00CA                     u1_21:
  1186  00CA  28C5               	goto	i1l116
  1187  00CB                     u1_20:
  1188  00CB                     i1l119:
  1189  00CB  0008               	return
  1190  00CC                     __end_of_spiReceiveWait:
  1191  007E                     btemp	set	126	;btemp
  1192  007E                     wtemp0	set	126
  1193                           
  1194                           	psect	config
  1195                           
  1196                           ;Config register CONFIG1 @ 0x2007
  1197                           ;	Oscillator Selection bits
  1198                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1199                           ;	Watchdog Timer Enable bit
  1200                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1201                           ;	Power-up Timer Enable bit
  1202                           ;	PWRTE = OFF, PWRT disabled
  1203                           ;	RE3/MCLR pin function select bit
  1204                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1205                           ;	Code Protection bit
  1206                           ;	CP = OFF, Program memory code protection is disabled
  1207                           ;	Data Code Protection bit
  1208                           ;	CPD = OFF, Data memory code protection is disabled
  1209                           ;	Brown Out Reset Selection bits
  1210                           ;	BOREN = OFF, BOR disabled
  1211                           ;	Internal External Switchover bit
  1212                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1213                           ;	Fail-Safe Clock Monitor Enabled bit
  1214                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1215                           ;	Low Voltage Programming Enable bit
  1216                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1217                           ;	In-Circuit Debugger Mode bit
  1218                           ;	DEBUG = 0x1, unprogrammed default
  1219  2007                     	org	8199
  1220  2007  20D4               	dw	8404
  1221                           
  1222                           ;Config register CONFIG2 @ 0x2008
  1223                           ;	Brown-out Reset Selection bit
  1224                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1225                           ;	Flash Program Memory Self Write Enable bits
  1226                           ;	WRT = OFF, Write protection off
  1227  2008                     	org	8200
  1228  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80      4       4
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    cadena	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMMON

    _main->_readADC

Critical Paths under _isr in COMMON

    _isr->_spiWrite

Critical Paths under _main in BANK0

    _main->_spiInit

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     471
                                              3 BANK0      1     1      0
                            _initADC
                            _readADC
                            _spiInit
 ---------------------------------------------------------------------------------
 (1) _spiInit                                              4     1      3     456
                                              4 COMMON     1     1      0
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (1) _readADC                                              2     2      0      15
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _initADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  3     3      0      15
                                              1 COMMON     3     3      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (3) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (4) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initADC
   _readADC
   _spiInit

 _isr (ROOT)
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      4       4       5        5.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       E      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Jul 30 11:19:21 2021

            _SSPSTATbits 0094                       u30 00AB                       u31 00AA  
                    l112 0094                      l113 0099                      l142 00A7  
                    l145 00AC                      l139 00BB                      l761 00B8  
                    l753 00AD                      l921 008C                      l755 00B3  
                    l923 0093                      l915 007D                      l931 001D  
                    l757 00B6                      l765 009B                      l917 0084  
                    l941 003C                      l933 001E                      l925 0017  
                    l759 00B7                      l767 00A6                      l919 008A  
                    l935 0021                      l927 001B                      l769 00AB  
                    l937 002C                      l929 001C                      l939 0031  
                    u190 0084                      u191 0083                      _isr 004B  
                   ?_isr 0070                     i1l45 0075                     u1_20 00CB  
                   u1_21 00CA                     u6_20 0051                     u6_21 0050  
                   u7_20 005F                     u7_21 005E                     u8_20 006C  
                   u8_21 006B                     _main 0017                     btemp 007E  
                   start 000C                    ??_isr 0071                    ?_main 0070  
                  _ANSEL 0188                    i1l130 00C4                    i1l122 00D1  
                  i1l116 00C5                    i1l119 00CB                    i1l811 004B  
                  i1l741 00C5                    i1l821 006C                    i1l813 0051  
                  i1l823 0072                    i1l815 0059                    i1l817 005F  
                  i1l819 0066                    i1l773 00BC                    i1l775 00C1  
                  i1l779 00CD                    _RCREG 001A                    _SPBRG 0099  
                  _TXREG 0019          __end_of_initADC 00BC          __end_of_readADC 00AD  
                  _valor 0077                    pclath 000A          __end_of_spiInit 009A  
        __end_of_spiRead 00C5                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 004B                   ??_main 0023  
                 _ADRESH 001E                   _ANSELH 0189                   _TRISC3 043B  
                 _TRISC5 043D                   _SSPCON 0014                   _SSPBUF 0013  
                 _cadena 0076                ??_initADC 0074                ??_readADC 0074  
                 saved_w 007E         __end_of_spiWrite 00D2                ??_spiInit 0074  
              ??_spiRead 0070  __end_of__initialization 0013           __pcstackCOMMON 0070  
             __pmaintext 0017               __pintentry 0004  __size_of_spiReceiveWait 0007  
                _SSPSTAT 0094                ?_spiWrite 0070                  __ptext1 007C  
                __ptext2 009A                  __ptext3 00AD                  __ptext4 004B  
                __ptext5 00CC                  __ptext6 00BC                  __ptext7 00C5  
                _initADC 00AD                  _readADC 009A             __size_of_isr 0031  
                _spiInit 007C                  _spiRead 00BC     end_of_initialization 0013  
              _RCSTAbits 0018               ??_spiWrite 0070                _TRISCbits 0087  
            spiWrite@dat 0070                _TXSTAbits 0098           _spiReceiveWait 00C5  
             readADC@pin 0075      start_initialization 000F              __end_of_isr 007C  
 __end_of_spiReceiveWait 00CC              __pbssCOMMON 0076                _adcValue2 0078  
              ___latbits 0002            __pcstackBANK0 0020          ?_spiReceiveWait 0070  
      __size_of_spiWrite 0006                 ?_initADC 0070                 ?_readADC 0070  
               ?_spiInit 0020                 ?_spiRead 0070     spiInit@sTransmitEdge 0022  
      interrupt_function 0004                 _PIE1bits 008C       spiInit@sDataSample 0020  
               _PIR1bits 000C               _ADCON0bits 001F               _ADCON1bits 009F  
               _adcValue 0079         __size_of_initADC 000F         __size_of_readADC 0013  
       __size_of_spiInit 001E         __size_of_spiRead 0009            __size_of_main 0034  
               _spiWrite 00CC             spiInit@sType 0074        spiInit@sClockIdle 0021  
             _INTCONbits 000B                 intlevel1 0000         ??_spiReceiveWait 0070  
