

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Aug 13 16:32:27 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    22                           	dabs	1,0x7E,2
    23  0000                     
    24                           ; Version 2.20
    25                           ; Generated 12/02/2020 GMT
    26                           ; 
    27                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F887 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     	;# 
    59  0001                     	;# 
    60  0002                     	;# 
    61  0003                     	;# 
    62  0004                     	;# 
    63  0005                     	;# 
    64  0006                     	;# 
    65  0007                     	;# 
    66  0008                     	;# 
    67  0009                     	;# 
    68  000A                     	;# 
    69  000B                     	;# 
    70  000C                     	;# 
    71  000D                     	;# 
    72  000E                     	;# 
    73  000E                     	;# 
    74  000F                     	;# 
    75  0010                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0014                     	;# 
    80  0015                     	;# 
    81  0015                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001B                     	;# 
    89  001C                     	;# 
    90  001D                     	;# 
    91  001E                     	;# 
    92  001F                     	;# 
    93  0081                     	;# 
    94  0085                     	;# 
    95  0086                     	;# 
    96  0087                     	;# 
    97  0088                     	;# 
    98  0089                     	;# 
    99  008C                     	;# 
   100  008D                     	;# 
   101  008E                     	;# 
   102  008F                     	;# 
   103  0090                     	;# 
   104  0091                     	;# 
   105  0092                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0094                     	;# 
   110  0095                     	;# 
   111  0096                     	;# 
   112  0097                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009A                     	;# 
   116  009B                     	;# 
   117  009C                     	;# 
   118  009D                     	;# 
   119  009E                     	;# 
   120  009F                     	;# 
   121  0105                     	;# 
   122  0107                     	;# 
   123  0108                     	;# 
   124  0109                     	;# 
   125  010C                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  010E                     	;# 
   129  010F                     	;# 
   130  0185                     	;# 
   131  0187                     	;# 
   132  0188                     	;# 
   133  0189                     	;# 
   134  018C                     	;# 
   135  018D                     	;# 
   136  0000                     	;# 
   137  0001                     	;# 
   138  0002                     	;# 
   139  0003                     	;# 
   140  0004                     	;# 
   141  0005                     	;# 
   142  0006                     	;# 
   143  0007                     	;# 
   144  0008                     	;# 
   145  0009                     	;# 
   146  000A                     	;# 
   147  000B                     	;# 
   148  000C                     	;# 
   149  000D                     	;# 
   150  000E                     	;# 
   151  000E                     	;# 
   152  000F                     	;# 
   153  0010                     	;# 
   154  0011                     	;# 
   155  0012                     	;# 
   156  0013                     	;# 
   157  0014                     	;# 
   158  0015                     	;# 
   159  0015                     	;# 
   160  0016                     	;# 
   161  0017                     	;# 
   162  0018                     	;# 
   163  0019                     	;# 
   164  001A                     	;# 
   165  001B                     	;# 
   166  001B                     	;# 
   167  001C                     	;# 
   168  001D                     	;# 
   169  001E                     	;# 
   170  001F                     	;# 
   171  0081                     	;# 
   172  0085                     	;# 
   173  0086                     	;# 
   174  0087                     	;# 
   175  0088                     	;# 
   176  0089                     	;# 
   177  008C                     	;# 
   178  008D                     	;# 
   179  008E                     	;# 
   180  008F                     	;# 
   181  0090                     	;# 
   182  0091                     	;# 
   183  0092                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0094                     	;# 
   188  0095                     	;# 
   189  0096                     	;# 
   190  0097                     	;# 
   191  0098                     	;# 
   192  0099                     	;# 
   193  009A                     	;# 
   194  009B                     	;# 
   195  009C                     	;# 
   196  009D                     	;# 
   197  009E                     	;# 
   198  009F                     	;# 
   199  0105                     	;# 
   200  0107                     	;# 
   201  0108                     	;# 
   202  0109                     	;# 
   203  010C                     	;# 
   204  010C                     	;# 
   205  010D                     	;# 
   206  010E                     	;# 
   207  010F                     	;# 
   208  0185                     	;# 
   209  0187                     	;# 
   210  0188                     	;# 
   211  0189                     	;# 
   212  018C                     	;# 
   213  018D                     	;# 
   214  0000                     	;# 
   215  0001                     	;# 
   216  0002                     	;# 
   217  0003                     	;# 
   218  0004                     	;# 
   219  0005                     	;# 
   220  0006                     	;# 
   221  0007                     	;# 
   222  0008                     	;# 
   223  0009                     	;# 
   224  000A                     	;# 
   225  000B                     	;# 
   226  000C                     	;# 
   227  000D                     	;# 
   228  000E                     	;# 
   229  000E                     	;# 
   230  000F                     	;# 
   231  0010                     	;# 
   232  0011                     	;# 
   233  0012                     	;# 
   234  0013                     	;# 
   235  0014                     	;# 
   236  0015                     	;# 
   237  0015                     	;# 
   238  0016                     	;# 
   239  0017                     	;# 
   240  0018                     	;# 
   241  0019                     	;# 
   242  001A                     	;# 
   243  001B                     	;# 
   244  001B                     	;# 
   245  001C                     	;# 
   246  001D                     	;# 
   247  001E                     	;# 
   248  001F                     	;# 
   249  0081                     	;# 
   250  0085                     	;# 
   251  0086                     	;# 
   252  0087                     	;# 
   253  0088                     	;# 
   254  0089                     	;# 
   255  008C                     	;# 
   256  008D                     	;# 
   257  008E                     	;# 
   258  008F                     	;# 
   259  0090                     	;# 
   260  0091                     	;# 
   261  0092                     	;# 
   262  0093                     	;# 
   263  0093                     	;# 
   264  0093                     	;# 
   265  0094                     	;# 
   266  0095                     	;# 
   267  0096                     	;# 
   268  0097                     	;# 
   269  0098                     	;# 
   270  0099                     	;# 
   271  009A                     	;# 
   272  009B                     	;# 
   273  009C                     	;# 
   274  009D                     	;# 
   275  009E                     	;# 
   276  009F                     	;# 
   277  0105                     	;# 
   278  0107                     	;# 
   279  0108                     	;# 
   280  0109                     	;# 
   281  010C                     	;# 
   282  010C                     	;# 
   283  010D                     	;# 
   284  010E                     	;# 
   285  010F                     	;# 
   286  0185                     	;# 
   287  0187                     	;# 
   288  0188                     	;# 
   289  0189                     	;# 
   290  018C                     	;# 
   291  018D                     	;# 
   292                           
   293                           	psect	nvBANK0
   294  0041                     __pnvBANK0:
   295  0041                     _contador2:
   296  0041                     	ds	1
   297  0009                     _PORTE	set	9
   298  0007                     _PORTC	set	7
   299  0006                     _PORTB	set	6
   300  0005                     _PORTA	set	5
   301  0013                     _SSPBUF	set	19
   302  0014                     _SSPCON	set	20
   303  001A                     _RCREG	set	26
   304  000C                     _PIR1bits	set	12
   305  0019                     _TXREG	set	25
   306  0018                     _RCSTAbits	set	24
   307  0008                     _PORTD	set	8
   308  001E                     _ADRESH	set	30
   309  0031                     _RB1	set	49
   310  0030                     _RB0	set	48
   311  0058                     _RBIF	set	88
   312  005B                     _RBIE	set	91
   313  0065                     _RCIF	set	101
   314  0063                     _SSPIF	set	99
   315  005E                     _PEIE	set	94
   316  005F                     _GIE	set	95
   317  0049                     _RE1	set	73
   318  0048                     _RE0	set	72
   319  0096                     _IOCB	set	150
   320  0095                     _WPUB	set	149
   321  0081                     _OPTION_REGbits	set	129
   322  0089                     _TRISE	set	137
   323  0088                     _TRISD	set	136
   324  0087                     _TRISC	set	135
   325  0086                     _TRISB	set	134
   326  0085                     _TRISA	set	133
   327  0091                     _SSPCON2bits	set	145
   328  0093                     _SSPADD	set	147
   329  0091                     _SSPCON2	set	145
   330  0094                     _SSPSTATbits	set	148
   331  0094                     _SSPSTAT	set	148
   332  0087                     _TRISCbits	set	135
   333  0099                     _SPBRG	set	153
   334  009A                     _SPBRGH	set	154
   335  0098                     _TXSTAbits	set	152
   336  009E                     _ADRESL	set	158
   337  0463                     _SSPIE	set	1123
   338  043C                     _TRISC4	set	1084
   339  043B                     _TRISC3	set	1083
   340  043D                     _TRISC5	set	1085
   341  0189                     _ANSELH	set	393
   342  0188                     _ANSEL	set	392
   343  0C3B                     _BRG16	set	3131
   344                           
   345                           	psect	strings
   346  025E                     __pstrings:
   347  025E                     stringtab:
   348  025E                     __stringtab:
   349  025E                     stringcode:	
   350                           ;	String table - string pointers are 1 byte each
   351                           
   352  025E                     stringdir:
   353  025E  3002               	movlw	high stringdir
   354  025F  008A               	movwf	10
   355  0260  0804               	movf	4,w
   356  0261  0A84               	incf	4,f
   357  0262  0782               	addwf	2,f
   358  0263                     __stringbase:
   359  0263  3400               	retlw	0
   360  0264                     __end_of__stringtab:
   361  0264                     STR_1:
   362  0264  340D               	retlw	13
   363  0265  3400               	retlw	0
   364                           
   365                           	psect	cinit
   366  000F                     start_initialization:	
   367                           ; #config settings
   368                           
   369  000F                     __initialization:
   370                           
   371                           ; Clear objects allocated to BANK0
   372  000F  1283               	bcf	3,5	;RP0=0, select bank0
   373  0010  1303               	bcf	3,6	;RP1=0, select bank0
   374  0011  01BC               	clrf	__pbssBANK0& (0+127)
   375  0012  01BD               	clrf	(__pbssBANK0+1)& (0+127)
   376  0013  01BE               	clrf	(__pbssBANK0+2)& (0+127)
   377  0014  01BF               	clrf	(__pbssBANK0+3)& (0+127)
   378  0015  01C0               	clrf	(__pbssBANK0+4)& (0+127)
   379  0016                     end_of_initialization:	
   380                           ;End of C runtime variable initialization code
   381                           
   382  0016                     __end_of__initialization:
   383  0016  0183               	clrf	3
   384  0017  120A  118A  28E7   	ljmp	_main	;jump to C main() function
   385                           
   386                           	psect	bssBANK0
   387  003C                     __pbssBANK0:
   388  003C                     _contador:
   389  003C                     	ds	1
   390  003D                     _uc:
   391  003D                     	ds	1
   392  003E                     _dc:
   393  003E                     	ds	1
   394  003F                     _cc:
   395  003F                     	ds	1
   396  0040                     _mc:
   397  0040                     	ds	1
   398                           
   399                           	psect	cstackCOMMON
   400  0070                     __pcstackCOMMON:
   401  0070                     ?_setup:
   402  0070                     ?_UART_Init:	
   403                           ; 1 bytes @ 0x0
   404                           
   405  0070                     ?_UART_Write:	
   406                           ; 1 bytes @ 0x0
   407                           
   408  0070                     ?_UART_Write_Char:	
   409                           ; 1 bytes @ 0x0
   410                           
   411  0070                     ?_main:	
   412                           ; 1 bytes @ 0x0
   413                           
   414  0070                     ?_isr:	
   415                           ; 1 bytes @ 0x0
   416                           
   417  0070                     ??_isr:	
   418                           ; 1 bytes @ 0x0
   419                           
   420                           
   421                           ; 1 bytes @ 0x0
   422  0070                     	ds	3
   423  0073                     ??_setup:
   424  0073                     ??_UART_Init:	
   425                           ; 1 bytes @ 0x3
   426                           
   427  0073                     ??_UART_Write:	
   428                           ; 1 bytes @ 0x3
   429                           
   430  0073                     ??_UART_Write_Char:	
   431                           ; 1 bytes @ 0x3
   432                           
   433  0073                     ?___bmul:	
   434                           ; 1 bytes @ 0x3
   435                           
   436  0073                     ?___wmul:	
   437                           ; 1 bytes @ 0x3
   438                           
   439  0073                     UART_Write_Char@character:	
   440                           ; 2 bytes @ 0x3
   441                           
   442  0073                     ___bmul@multiplicand:	
   443                           ; 1 bytes @ 0x3
   444                           
   445  0073                     ___wmul@multiplier:	
   446                           ; 1 bytes @ 0x3
   447                           
   448                           
   449                           ; 2 bytes @ 0x3
   450  0073                     	ds	1
   451  0074                     ??___bmul:
   452  0074                     UART_Write@word:	
   453                           ; 1 bytes @ 0x4
   454                           
   455                           
   456                           ; 1 bytes @ 0x4
   457  0074                     	ds	1
   458  0075                     ___bmul@product:
   459  0075                     ___wmul@multiplicand:	
   460                           ; 1 bytes @ 0x5
   461                           
   462                           
   463                           ; 2 bytes @ 0x5
   464  0075                     	ds	1
   465  0076                     ___bmul@multiplier:
   466                           
   467                           ; 1 bytes @ 0x6
   468  0076                     	ds	1
   469  0077                     ??___wmul:
   470  0077                     ___wmul@product:	
   471                           ; 1 bytes @ 0x7
   472                           
   473                           
   474                           ; 2 bytes @ 0x7
   475  0077                     	ds	2
   476  0079                     ??___lwdiv:
   477                           
   478                           ; 1 bytes @ 0x9
   479  0079                     	ds	1
   480                           
   481                           	psect	cstackBANK0
   482  0020                     __pcstackBANK0:
   483  0020                     ?___lwdiv:
   484  0020                     ___lwdiv@divisor:	
   485                           ; 2 bytes @ 0x0
   486                           
   487                           
   488                           ; 2 bytes @ 0x0
   489  0020                     	ds	2
   490  0022                     ___lwdiv@dividend:
   491                           
   492                           ; 2 bytes @ 0x2
   493  0022                     	ds	2
   494  0024                     ___lwdiv@quotient:
   495                           
   496                           ; 2 bytes @ 0x4
   497  0024                     	ds	2
   498  0026                     ___lwdiv@counter:
   499                           
   500                           ; 1 bytes @ 0x6
   501  0026                     	ds	1
   502  0027                     ?_divide:
   503  0027                     divide@value:	
   504                           ; 1 bytes @ 0x7
   505                           
   506                           
   507                           ; 2 bytes @ 0x7
   508  0027                     	ds	2
   509  0029                     divide@mil:
   510                           
   511                           ; 1 bytes @ 0x9
   512  0029                     	ds	1
   513  002A                     divide@cent:
   514                           
   515                           ; 1 bytes @ 0xA
   516  002A                     	ds	1
   517  002B                     divide@dec:
   518                           
   519                           ; 1 bytes @ 0xB
   520  002B                     	ds	1
   521  002C                     divide@unit:
   522                           
   523                           ; 1 bytes @ 0xC
   524  002C                     	ds	1
   525  002D                     ??_divide:
   526                           
   527                           ; 1 bytes @ 0xD
   528  002D                     	ds	9
   529  0036                     ??_main:
   530                           
   531                           ; 1 bytes @ 0x16
   532  0036                     	ds	6
   533                           
   534                           	psect	maintext
   535  00E7                     __pmaintext:	
   536 ;;
   537 ;;Main: autosize = 0, tempsize = 6, incstack = 0, save=0
   538 ;;
   539 ;; *************** function _main *****************
   540 ;; Defined at:
   541 ;;		line 47 in file "main.c"
   542 ;; Parameters:    Size  Location     Type
   543 ;;		None
   544 ;; Auto vars:     Size  Location     Type
   545 ;;		None
   546 ;; Return value:  Size  Location     Type
   547 ;;                  1    wreg      void 
   548 ;; Registers used:
   549 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   550 ;; Tracked objects:
   551 ;;		On entry : B00/0
   552 ;;		On exit  : 0/0
   553 ;;		Unchanged: 0/0
   554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   555 ;;      Params:         0       0       0       0       0
   556 ;;      Locals:         0       0       0       0       0
   557 ;;      Temps:          0       6       0       0       0
   558 ;;      Totals:         0       6       0       0       0
   559 ;;Total ram usage:        6 bytes
   560 ;; Hardware stack levels required when called:    3
   561 ;; This function calls:
   562 ;;		_UART_Write
   563 ;;		_UART_Write_Char
   564 ;;		_divide
   565 ;;		_setup
   566 ;; This function is called by:
   567 ;;		Startup code after reset
   568 ;; This function uses a non-reentrant model
   569 ;;
   570                           
   571                           
   572                           ;psect for function _main
   573  00E7                     _main:
   574  00E7                     l1268:	
   575                           ;incstack = 0
   576                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   577                           
   578                           
   579                           ;main.c: 48:     setup();
   580  00E7  120A  118A  2193  120A  118A  	fcall	_setup
   581  00EC                     l1270:
   582                           
   583                           ;main.c: 51:         PORTD = contador;
   584  00EC  1283               	bcf	3,5	;RP0=0, select bank0
   585  00ED  1303               	bcf	3,6	;RP1=0, select bank0
   586  00EE  083C               	movf	_contador,w
   587  00EF  0088               	movwf	8	;volatile
   588  00F0                     l1272:
   589                           
   590                           ;main.c: 53:         if(contador2 != contador){
   591  00F0  0841               	movf	_contador2,w
   592  00F1  063C               	xorwf	_contador,w
   593  00F2  1903               	skipnz
   594  00F3  28F5               	goto	u511
   595  00F4  28F6               	goto	u510
   596  00F5                     u511:
   597  00F5  2941               	goto	l1288
   598  00F6                     u510:
   599  00F6                     l1274:
   600                           
   601                           ;main.c: 54:             divide(contador, &mc, &cc, &dc, &uc);
   602  00F6  083C               	movf	_contador,w
   603  00F7  00B6               	movwf	??_main
   604  00F8  01B7               	clrf	??_main+1
   605  00F9  0836               	movf	??_main,w
   606  00FA  00A7               	movwf	divide@value
   607  00FB  0837               	movf	??_main+1,w
   608  00FC  00A8               	movwf	divide@value+1
   609  00FD  3040               	movlw	(low (_mc| 0))& (0+255)
   610  00FE  00B8               	movwf	??_main+2
   611  00FF  0838               	movf	??_main+2,w
   612  0100  00A9               	movwf	divide@mil
   613  0101  303F               	movlw	(low (_cc| 0))& (0+255)
   614  0102  00B9               	movwf	??_main+3
   615  0103  0839               	movf	??_main+3,w
   616  0104  00AA               	movwf	divide@cent
   617  0105  303E               	movlw	(low (_dc| 0))& (0+255)
   618  0106  00BA               	movwf	??_main+4
   619  0107  083A               	movf	??_main+4,w
   620  0108  00AB               	movwf	divide@dec
   621  0109  303D               	movlw	(low (_uc| 0))& (0+255)
   622  010A  00BB               	movwf	??_main+5
   623  010B  083B               	movf	??_main+5,w
   624  010C  00AC               	movwf	divide@unit
   625  010D  120A  118A  201A  120A  118A  	fcall	_divide
   626  0112                     l1276:
   627                           
   628                           ;main.c: 55:             contador2 = contador;
   629  0112  1283               	bcf	3,5	;RP0=0, select bank0
   630  0113  1303               	bcf	3,6	;RP1=0, select bank0
   631  0114  083C               	movf	_contador,w
   632  0115  00B6               	movwf	??_main
   633  0116  0836               	movf	??_main,w
   634  0117  00C1               	movwf	_contador2
   635  0118                     l1278:
   636                           
   637                           ;main.c: 56:             if(cc!=0)
   638  0118  083F               	movf	_cc,w
   639  0119  1903               	btfsc	3,2
   640  011A  291C               	goto	u521
   641  011B  291D               	goto	u520
   642  011C                     u521:
   643  011C  2924               	goto	l1282
   644  011D                     u520:
   645  011D                     l1280:
   646                           
   647                           ;main.c: 57:             UART_Write_Char(cc+48);
   648  011D  083F               	movf	_cc,w
   649  011E  3E30               	addlw	48
   650  011F  120A  118A  2252  120A  118A  	fcall	_UART_Write_Char
   651  0124                     l1282:
   652                           
   653                           ;main.c: 58:             if(dc!=0)
   654  0124  1283               	bcf	3,5	;RP0=0, select bank0
   655  0125  1303               	bcf	3,6	;RP1=0, select bank0
   656  0126  083E               	movf	_dc,w
   657  0127  1903               	btfsc	3,2
   658  0128  292A               	goto	u531
   659  0129  292B               	goto	u530
   660  012A                     u531:
   661  012A  2932               	goto	l237
   662  012B                     u530:
   663  012B                     l1284:
   664                           
   665                           ;main.c: 59:             UART_Write_Char(dc+48);
   666  012B  083E               	movf	_dc,w
   667  012C  3E30               	addlw	48
   668  012D  120A  118A  2252  120A  118A  	fcall	_UART_Write_Char
   669  0132                     l237:
   670                           
   671                           ;main.c: 61:             UART_Write_Char(uc+48);
   672  0132  1283               	bcf	3,5	;RP0=0, select bank0
   673  0133  1303               	bcf	3,6	;RP1=0, select bank0
   674  0134  083D               	movf	_uc,w
   675  0135  3E30               	addlw	48
   676  0136  120A  118A  2252  120A  118A  	fcall	_UART_Write_Char
   677  013B                     l1286:
   678                           
   679                           ;main.c: 62:             UART_Write("\r");
   680  013B  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   681  013C  120A  118A  2203  120A  118A  	fcall	_UART_Write
   682  0141                     l1288:
   683                           
   684                           ;main.c: 66:         if(RCIF){
   685  0141  1283               	bcf	3,5	;RP0=0, select bank0
   686  0142  1303               	bcf	3,6	;RP1=0, select bank0
   687  0143  1E8C               	btfss	12,5	;volatile
   688  0144  2946               	goto	u541
   689  0145  2947               	goto	u540
   690  0146                     u541:
   691  0146  28EC               	goto	l1270
   692  0147                     u540:
   693  0147                     l1290:
   694                           
   695                           ;main.c: 67:             PORTA = RCREG;
   696  0147  081A               	movf	26,w	;volatile
   697  0148  0085               	movwf	5	;volatile
   698  0149  28EC               	goto	l1270
   699  014A  120A  118A  280C   	ljmp	start
   700  014D                     __end_of_main:
   701                           
   702                           	psect	text1
   703  0193                     __ptext1:	
   704 ;; *************** function _setup *****************
   705 ;; Defined at:
   706 ;;		line 73 in file "main.c"
   707 ;; Parameters:    Size  Location     Type
   708 ;;		None
   709 ;; Auto vars:     Size  Location     Type
   710 ;;		None
   711 ;; Return value:  Size  Location     Type
   712 ;;                  1    wreg      void 
   713 ;; Registers used:
   714 ;;		wreg, status,2, status,0, pclath, cstack
   715 ;; Tracked objects:
   716 ;;		On entry : 0/0
   717 ;;		On exit  : 0/0
   718 ;;		Unchanged: 0/0
   719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   720 ;;      Params:         0       0       0       0       0
   721 ;;      Locals:         0       0       0       0       0
   722 ;;      Temps:          1       0       0       0       0
   723 ;;      Totals:         1       0       0       0       0
   724 ;;Total ram usage:        1 bytes
   725 ;; Hardware stack levels used:    1
   726 ;; Hardware stack levels required when called:    2
   727 ;; This function calls:
   728 ;;		_UART_Init
   729 ;; This function is called by:
   730 ;;		_main
   731 ;; This function uses a non-reentrant model
   732 ;;
   733                           
   734                           
   735                           ;psect for function _setup
   736  0193                     _setup:
   737  0193                     l1234:	
   738                           ;incstack = 0
   739                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   740                           
   741                           
   742                           ;main.c: 75:     ANSEL = 0;
   743  0193  1683               	bsf	3,5	;RP0=1, select bank3
   744  0194  1703               	bsf	3,6	;RP1=1, select bank3
   745  0195  0188               	clrf	8	;volatile
   746                           
   747                           ;main.c: 76:     ANSELH = 0;
   748  0196  0189               	clrf	9	;volatile
   749                           
   750                           ;main.c: 77:     TRISA = 0;
   751  0197  1683               	bsf	3,5	;RP0=1, select bank1
   752  0198  1303               	bcf	3,6	;RP1=0, select bank1
   753  0199  0185               	clrf	5	;volatile
   754  019A                     l1236:
   755                           
   756                           ;main.c: 78:     TRISB = 3;
   757  019A  3003               	movlw	3
   758  019B  0086               	movwf	6	;volatile
   759  019C                     l1238:
   760                           
   761                           ;main.c: 79:     TRISC = 128;
   762  019C  3080               	movlw	128
   763  019D  0087               	movwf	7	;volatile
   764                           
   765                           ;main.c: 80:     TRISD = 0;
   766  019E  0188               	clrf	8	;volatile
   767                           
   768                           ;main.c: 81:     TRISE = 0;
   769  019F  0189               	clrf	9	;volatile
   770  01A0                     l1240:
   771                           
   772                           ;main.c: 84:     OPTION_REGbits.nRBPU = 0;
   773  01A0  1381               	bcf	1,7	;volatile
   774  01A1                     l1242:
   775                           
   776                           ;main.c: 85:     WPUB = 0b00000011;
   777  01A1  3003               	movlw	3
   778  01A2  0095               	movwf	21	;volatile
   779  01A3                     l1244:
   780                           
   781                           ;main.c: 86:     IOCB = 0b00000011;
   782  01A3  3003               	movlw	3
   783  01A4  0096               	movwf	22	;volatile
   784  01A5                     l1246:
   785                           
   786                           ;main.c: 89:     GIE = 1;
   787  01A5  178B               	bsf	11,7	;volatile
   788  01A6                     l1248:
   789                           
   790                           ;main.c: 90:     RBIE = 1;
   791  01A6  158B               	bsf	11,3	;volatile
   792  01A7                     l1250:
   793                           
   794                           ;main.c: 91:     RBIF = 0;
   795  01A7  100B               	bcf	11,0	;volatile
   796  01A8                     l1252:
   797                           
   798                           ;main.c: 93:     UART_Init();
   799  01A8  120A  118A  2226  120A  118A  	fcall	_UART_Init
   800  01AD                     l1254:
   801                           
   802                           ;main.c: 95:     PORTA = 0;
   803  01AD  1283               	bcf	3,5	;RP0=0, select bank0
   804  01AE  1303               	bcf	3,6	;RP1=0, select bank0
   805  01AF  0185               	clrf	5	;volatile
   806  01B0                     l1256:
   807                           
   808                           ;main.c: 96:     PORTB = 0;
   809  01B0  0186               	clrf	6	;volatile
   810  01B1                     l1258:
   811                           
   812                           ;main.c: 97:     PORTC = 0;
   813  01B1  0187               	clrf	7	;volatile
   814  01B2                     l1260:
   815                           
   816                           ;main.c: 98:     PORTD = 0;
   817  01B2  0188               	clrf	8	;volatile
   818  01B3                     l1262:
   819                           
   820                           ;main.c: 99:     PORTE = 0;
   821  01B3  0189               	clrf	9	;volatile
   822  01B4                     l1264:
   823                           
   824                           ;main.c: 101:     contador = 0;
   825  01B4  01BC               	clrf	_contador
   826  01B5                     l1266:
   827                           
   828                           ;main.c: 102:     contador2 = 255;
   829  01B5  30FF               	movlw	255
   830  01B6  00F3               	movwf	??_setup
   831  01B7  0873               	movf	??_setup,w
   832  01B8  00C1               	movwf	_contador2
   833  01B9                     l244:
   834  01B9  0008               	return
   835  01BA                     __end_of_setup:
   836                           
   837                           	psect	text2
   838  0226                     __ptext2:	
   839 ;; *************** function _UART_Init *****************
   840 ;; Defined at:
   841 ;;		line 77 in file "Libreria.c"
   842 ;; Parameters:    Size  Location     Type
   843 ;;		None
   844 ;; Auto vars:     Size  Location     Type
   845 ;;		None
   846 ;; Return value:  Size  Location     Type
   847 ;;                  1    wreg      void 
   848 ;; Registers used:
   849 ;;		wreg, status,2
   850 ;; Tracked objects:
   851 ;;		On entry : 0/0
   852 ;;		On exit  : 0/0
   853 ;;		Unchanged: 0/0
   854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   855 ;;      Params:         0       0       0       0       0
   856 ;;      Locals:         0       0       0       0       0
   857 ;;      Temps:          0       0       0       0       0
   858 ;;      Totals:         0       0       0       0       0
   859 ;;Total ram usage:        0 bytes
   860 ;; Hardware stack levels used:    1
   861 ;; Hardware stack levels required when called:    1
   862 ;; This function calls:
   863 ;;		Nothing
   864 ;; This function is called by:
   865 ;;		_setup
   866 ;; This function uses a non-reentrant model
   867 ;;
   868                           
   869                           
   870                           ;psect for function _UART_Init
   871  0226                     _UART_Init:
   872  0226                     l1158:	
   873                           ;incstack = 0
   874                           ; Regs used in _UART_Init: [wreg+status,2]
   875                           
   876                           
   877                           ;Libreria.c: 79:     TXSTAbits.TXEN = 1;
   878  0226  1683               	bsf	3,5	;RP0=1, select bank1
   879  0227  1303               	bcf	3,6	;RP1=0, select bank1
   880  0228  1698               	bsf	24,5	;volatile
   881                           
   882                           ;Libreria.c: 80:     TXSTAbits.SYNC = 0;
   883  0229  1218               	bcf	24,4	;volatile
   884                           
   885                           ;Libreria.c: 81:     RCSTAbits.SPEN = 1;
   886  022A  1283               	bcf	3,5	;RP0=0, select bank0
   887  022B  1303               	bcf	3,6	;RP1=0, select bank0
   888  022C  1798               	bsf	24,7	;volatile
   889                           
   890                           ;Libreria.c: 82:     TXSTAbits.BRGH = 1;
   891  022D  1683               	bsf	3,5	;RP0=1, select bank1
   892  022E  1303               	bcf	3,6	;RP1=0, select bank1
   893  022F  1518               	bsf	24,2	;volatile
   894                           
   895                           ;Libreria.c: 83:     BRG16 = 0;
   896  0230  1683               	bsf	3,5	;RP0=1, select bank3
   897  0231  1703               	bsf	3,6	;RP1=1, select bank3
   898  0232  1187               	bcf	7,3	;volatile
   899  0233                     l1160:
   900                           
   901                           ;Libreria.c: 84:     SPBRGH = 0;
   902  0233  1683               	bsf	3,5	;RP0=1, select bank1
   903  0234  1303               	bcf	3,6	;RP1=0, select bank1
   904  0235  019A               	clrf	26	;volatile
   905  0236                     l1162:
   906                           
   907                           ;Libreria.c: 85:     SPBRG = 25;
   908  0236  3019               	movlw	25
   909  0237  0099               	movwf	25	;volatile
   910  0238                     l1164:
   911                           
   912                           ;Libreria.c: 88:     TRISCbits.TRISC7 = 1;
   913  0238  1787               	bsf	7,7	;volatile
   914  0239                     l1166:
   915                           
   916                           ;Libreria.c: 89:     RCSTAbits.CREN = 1;
   917  0239  1283               	bcf	3,5	;RP0=0, select bank0
   918  023A  1303               	bcf	3,6	;RP1=0, select bank0
   919  023B  1618               	bsf	24,4	;volatile
   920  023C                     l85:
   921  023C  0008               	return
   922  023D                     __end_of_UART_Init:
   923                           
   924                           	psect	text3
   925  001A                     __ptext3:	
   926 ;; *************** function _divide *****************
   927 ;; Defined at:
   928 ;;		line 282 in file "Libreria.c"
   929 ;; Parameters:    Size  Location     Type
   930 ;;  value           2    7[BANK0 ] unsigned int 
   931 ;;  mil             1    9[BANK0 ] PTR unsigned char 
   932 ;;		 -> mc(1), 
   933 ;;  cent            1   10[BANK0 ] PTR unsigned char 
   934 ;;		 -> cc(1), 
   935 ;;  dec             1   11[BANK0 ] PTR unsigned char 
   936 ;;		 -> dc(1), 
   937 ;;  unit            1   12[BANK0 ] PTR unsigned char 
   938 ;;		 -> uc(1), 
   939 ;; Auto vars:     Size  Location     Type
   940 ;;		None
   941 ;; Return value:  Size  Location     Type
   942 ;;                  1    wreg      void 
   943 ;; Registers used:
   944 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   945 ;; Tracked objects:
   946 ;;		On entry : 0/0
   947 ;;		On exit  : 0/0
   948 ;;		Unchanged: 0/0
   949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   950 ;;      Params:         0       6       0       0       0
   951 ;;      Locals:         0       0       0       0       0
   952 ;;      Temps:          0       9       0       0       0
   953 ;;      Totals:         0      15       0       0       0
   954 ;;Total ram usage:       15 bytes
   955 ;; Hardware stack levels used:    1
   956 ;; Hardware stack levels required when called:    2
   957 ;; This function calls:
   958 ;;		___bmul
   959 ;;		___lwdiv
   960 ;;		___wmul
   961 ;; This function is called by:
   962 ;;		_main
   963 ;; This function uses a non-reentrant model
   964 ;;
   965                           
   966                           
   967                           ;psect for function _divide
   968  001A                     _divide:
   969  001A                     l1232:	
   970                           ;incstack = 0
   971                           ; Regs used in _divide: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   972                           
   973                           
   974                           ;Libreria.c: 283:     *mil=value/1000;
   975  001A  30E8               	movlw	232
   976  001B  1283               	bcf	3,5	;RP0=0, select bank0
   977  001C  1303               	bcf	3,6	;RP1=0, select bank0
   978  001D  00A0               	movwf	___lwdiv@divisor
   979  001E  3003               	movlw	3
   980  001F  00A1               	movwf	___lwdiv@divisor+1
   981  0020  0828               	movf	divide@value+1,w
   982  0021  00A3               	movwf	___lwdiv@dividend+1
   983  0022  0827               	movf	divide@value,w
   984  0023  00A2               	movwf	___lwdiv@dividend
   985  0024  120A  118A  214D  120A  118A  	fcall	___lwdiv
   986  0029  1283               	bcf	3,5	;RP0=0, select bank0
   987  002A  1303               	bcf	3,6	;RP1=0, select bank0
   988  002B  0820               	movf	?___lwdiv,w
   989  002C  00AD               	movwf	??_divide
   990  002D  0829               	movf	divide@mil,w
   991  002E  0084               	movwf	4
   992  002F  082D               	movf	??_divide,w
   993  0030  1383               	bcf	3,7	;select IRP bank0
   994  0031  0080               	movwf	0
   995                           
   996                           ;Libreria.c: 284:     *cent=(value-1000*(int)*mil)/100;
   997  0032  3064               	movlw	100
   998  0033  00A0               	movwf	___lwdiv@divisor
   999  0034  3000               	movlw	0
  1000  0035  00A1               	movwf	___lwdiv@divisor+1
  1001  0036  0829               	movf	divide@mil,w
  1002  0037  0084               	movwf	4
  1003  0038  0800               	movf	0,w
  1004  0039  00AD               	movwf	??_divide
  1005  003A  01AE               	clrf	??_divide+1
  1006  003B  082D               	movf	??_divide,w
  1007  003C  00F3               	movwf	___wmul@multiplier
  1008  003D  082E               	movf	??_divide+1,w
  1009  003E  00F4               	movwf	___wmul@multiplier+1
  1010  003F  3018               	movlw	24
  1011  0040  00F5               	movwf	___wmul@multiplicand
  1012  0041  30FC               	movlw	252
  1013  0042  00F6               	movwf	___wmul@multiplicand+1
  1014  0043  120A  118A  21BA  120A  118A  	fcall	___wmul
  1015  0048  1283               	bcf	3,5	;RP0=0, select bank0
  1016  0049  1303               	bcf	3,6	;RP1=0, select bank0
  1017  004A  0827               	movf	divide@value,w
  1018  004B  0773               	addwf	?___wmul,w
  1019  004C  00A2               	movwf	___lwdiv@dividend
  1020  004D  0828               	movf	divide@value+1,w
  1021  004E  1803               	skipnc
  1022  004F  0A28               	incf	divide@value+1,w
  1023  0050  0774               	addwf	?___wmul+1,w
  1024  0051  00A3               	movwf	___lwdiv@dividend+1
  1025  0052  120A  118A  214D  120A  118A  	fcall	___lwdiv
  1026  0057  1283               	bcf	3,5	;RP0=0, select bank0
  1027  0058  1303               	bcf	3,6	;RP1=0, select bank0
  1028  0059  0820               	movf	?___lwdiv,w
  1029  005A  00AF               	movwf	??_divide+2
  1030  005B  082A               	movf	divide@cent,w
  1031  005C  0084               	movwf	4
  1032  005D  082F               	movf	??_divide+2,w
  1033  005E  1383               	bcf	3,7	;select IRP bank0
  1034  005F  0080               	movwf	0
  1035                           
  1036                           ;Libreria.c: 285:     *dec=(value-1000*(int)*mil-100*(int)*cent)/10;
  1037  0060  300A               	movlw	10
  1038  0061  00A0               	movwf	___lwdiv@divisor
  1039  0062  3000               	movlw	0
  1040  0063  00A1               	movwf	___lwdiv@divisor+1
  1041  0064  0829               	movf	divide@mil,w
  1042  0065  0084               	movwf	4
  1043  0066  0800               	movf	0,w
  1044  0067  00AD               	movwf	??_divide
  1045  0068  01AE               	clrf	??_divide+1
  1046  0069  082D               	movf	??_divide,w
  1047  006A  00F3               	movwf	___wmul@multiplier
  1048  006B  082E               	movf	??_divide+1,w
  1049  006C  00F4               	movwf	___wmul@multiplier+1
  1050  006D  3018               	movlw	24
  1051  006E  00F5               	movwf	___wmul@multiplicand
  1052  006F  30FC               	movlw	252
  1053  0070  00F6               	movwf	___wmul@multiplicand+1
  1054  0071  120A  118A  21BA  120A  118A  	fcall	___wmul
  1055  0076  0873               	movf	?___wmul,w
  1056  0077  1283               	bcf	3,5	;RP0=0, select bank0
  1057  0078  1303               	bcf	3,6	;RP1=0, select bank0
  1058  0079  00AF               	movwf	??_divide+2
  1059  007A  0874               	movf	?___wmul+1,w
  1060  007B  00B0               	movwf	??_divide+3
  1061  007C  082A               	movf	divide@cent,w
  1062  007D  0084               	movwf	4
  1063  007E  1383               	bcf	3,7	;select IRP bank0
  1064  007F  0800               	movf	0,w
  1065  0080  00B1               	movwf	??_divide+4
  1066  0081  01B2               	clrf	??_divide+5
  1067  0082  0831               	movf	??_divide+4,w
  1068  0083  00F3               	movwf	___wmul@multiplier
  1069  0084  0832               	movf	??_divide+5,w
  1070  0085  00F4               	movwf	___wmul@multiplier+1
  1071  0086  309C               	movlw	156
  1072  0087  00F5               	movwf	___wmul@multiplicand
  1073  0088  30FF               	movlw	255
  1074  0089  00F6               	movwf	___wmul@multiplicand+1
  1075  008A  120A  118A  21BA  120A  118A  	fcall	___wmul
  1076  008F  0873               	movf	?___wmul,w
  1077  0090  1283               	bcf	3,5	;RP0=0, select bank0
  1078  0091  1303               	bcf	3,6	;RP1=0, select bank0
  1079  0092  072F               	addwf	??_divide+2,w
  1080  0093  00B3               	movwf	??_divide+6
  1081  0094  0874               	movf	?___wmul+1,w
  1082  0095  1803               	skipnc
  1083  0096  0A74               	incf	?___wmul+1,w
  1084  0097  0730               	addwf	??_divide+3,w
  1085  0098  00B4               	movwf	??_divide+7
  1086  0099  0827               	movf	divide@value,w
  1087  009A  0733               	addwf	??_divide+6,w
  1088  009B  00A2               	movwf	___lwdiv@dividend
  1089  009C  0828               	movf	divide@value+1,w
  1090  009D  1803               	skipnc
  1091  009E  0A28               	incf	divide@value+1,w
  1092  009F  0734               	addwf	??_divide+7,w
  1093  00A0  00A3               	movwf	___lwdiv@dividend+1
  1094  00A1  120A  118A  214D  120A  118A  	fcall	___lwdiv
  1095  00A6  1283               	bcf	3,5	;RP0=0, select bank0
  1096  00A7  1303               	bcf	3,6	;RP1=0, select bank0
  1097  00A8  0820               	movf	?___lwdiv,w
  1098  00A9  00B5               	movwf	??_divide+8
  1099  00AA  082B               	movf	divide@dec,w
  1100  00AB  0084               	movwf	4
  1101  00AC  0835               	movf	??_divide+8,w
  1102  00AD  1383               	bcf	3,7	;select IRP bank0
  1103  00AE  0080               	movwf	0
  1104                           
  1105                           ;Libreria.c: 286:     *unit=value-1000*(int)*mil-100*(int)*cent-10*(int)*dec;
  1106  00AF  3018               	movlw	24
  1107  00B0  00AD               	movwf	??_divide
  1108  00B1  082D               	movf	??_divide,w
  1109  00B2  00F3               	movwf	___bmul@multiplicand
  1110  00B3  0829               	movf	divide@mil,w
  1111  00B4  0084               	movwf	4
  1112  00B5  0800               	movf	0,w
  1113  00B6  120A  118A  223D  120A  118A  	fcall	___bmul
  1114  00BB  1283               	bcf	3,5	;RP0=0, select bank0
  1115  00BC  1303               	bcf	3,6	;RP1=0, select bank0
  1116  00BD  00AE               	movwf	??_divide+1
  1117  00BE  309C               	movlw	156
  1118  00BF  00AF               	movwf	??_divide+2
  1119  00C0  082F               	movf	??_divide+2,w
  1120  00C1  00F3               	movwf	___bmul@multiplicand
  1121  00C2  082A               	movf	divide@cent,w
  1122  00C3  0084               	movwf	4
  1123  00C4  1383               	bcf	3,7	;select IRP bank0
  1124  00C5  0800               	movf	0,w
  1125  00C6  120A  118A  223D  120A  118A  	fcall	___bmul
  1126  00CB  1283               	bcf	3,5	;RP0=0, select bank0
  1127  00CC  1303               	bcf	3,6	;RP1=0, select bank0
  1128  00CD  00B0               	movwf	??_divide+3
  1129  00CE  30F6               	movlw	246
  1130  00CF  00B1               	movwf	??_divide+4
  1131  00D0  0831               	movf	??_divide+4,w
  1132  00D1  00F3               	movwf	___bmul@multiplicand
  1133  00D2  082B               	movf	divide@dec,w
  1134  00D3  0084               	movwf	4
  1135  00D4  1383               	bcf	3,7	;select IRP bank0
  1136  00D5  0800               	movf	0,w
  1137  00D6  120A  118A  223D  120A  118A  	fcall	___bmul
  1138  00DB  1283               	bcf	3,5	;RP0=0, select bank0
  1139  00DC  1303               	bcf	3,6	;RP1=0, select bank0
  1140  00DD  0730               	addwf	??_divide+3,w
  1141  00DE  072E               	addwf	??_divide+1,w
  1142  00DF  0727               	addwf	divide@value,w
  1143  00E0  00B2               	movwf	??_divide+5
  1144  00E1  082C               	movf	divide@unit,w
  1145  00E2  0084               	movwf	4
  1146  00E3  0832               	movf	??_divide+5,w
  1147  00E4  1383               	bcf	3,7	;select IRP bank0
  1148  00E5  0080               	movwf	0
  1149  00E6                     l163:
  1150  00E6  0008               	return
  1151  00E7                     __end_of_divide:
  1152                           
  1153                           	psect	text4
  1154  01BA                     __ptext4:	
  1155 ;; *************** function ___wmul *****************
  1156 ;; Defined at:
  1157 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  1158 ;; Parameters:    Size  Location     Type
  1159 ;;  multiplier      2    3[COMMON] unsigned int 
  1160 ;;  multiplicand    2    5[COMMON] unsigned int 
  1161 ;; Auto vars:     Size  Location     Type
  1162 ;;  product         2    7[COMMON] unsigned int 
  1163 ;; Return value:  Size  Location     Type
  1164 ;;                  2    3[COMMON] unsigned int 
  1165 ;; Registers used:
  1166 ;;		wreg, status,2, status,0
  1167 ;; Tracked objects:
  1168 ;;		On entry : 0/0
  1169 ;;		On exit  : 0/0
  1170 ;;		Unchanged: 0/0
  1171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1172 ;;      Params:         4       0       0       0       0
  1173 ;;      Locals:         2       0       0       0       0
  1174 ;;      Temps:          0       0       0       0       0
  1175 ;;      Totals:         6       0       0       0       0
  1176 ;;Total ram usage:        6 bytes
  1177 ;; Hardware stack levels used:    1
  1178 ;; Hardware stack levels required when called:    1
  1179 ;; This function calls:
  1180 ;;		Nothing
  1181 ;; This function is called by:
  1182 ;;		_divide
  1183 ;; This function uses a non-reentrant model
  1184 ;;
  1185                           
  1186                           
  1187                           ;psect for function ___wmul
  1188  01BA                     ___wmul:
  1189  01BA                     l1168:	
  1190                           ;incstack = 0
  1191                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1192                           
  1193  01BA  01F7               	clrf	___wmul@product
  1194  01BB  01F8               	clrf	___wmul@product+1
  1195  01BC                     l1170:
  1196  01BC  1C73               	btfss	___wmul@multiplier,0
  1197  01BD  29BF               	goto	u351
  1198  01BE  29C0               	goto	u350
  1199  01BF                     u351:
  1200  01BF  29C6               	goto	l338
  1201  01C0                     u350:
  1202  01C0                     l1172:
  1203  01C0  0875               	movf	___wmul@multiplicand,w
  1204  01C1  07F7               	addwf	___wmul@product,f
  1205  01C2  1803               	skipnc
  1206  01C3  0AF8               	incf	___wmul@product+1,f
  1207  01C4  0876               	movf	___wmul@multiplicand+1,w
  1208  01C5  07F8               	addwf	___wmul@product+1,f
  1209  01C6                     l338:
  1210  01C6  3001               	movlw	1
  1211  01C7                     u365:
  1212  01C7  1003               	clrc
  1213  01C8  0DF5               	rlf	___wmul@multiplicand,f
  1214  01C9  0DF6               	rlf	___wmul@multiplicand+1,f
  1215  01CA  3EFF               	addlw	-1
  1216  01CB  1D03               	skipz
  1217  01CC  29C7               	goto	u365
  1218  01CD                     l1174:
  1219  01CD  3001               	movlw	1
  1220  01CE                     u375:
  1221  01CE  1003               	clrc
  1222  01CF  0CF4               	rrf	___wmul@multiplier+1,f
  1223  01D0  0CF3               	rrf	___wmul@multiplier,f
  1224  01D1  3EFF               	addlw	-1
  1225  01D2  1D03               	skipz
  1226  01D3  29CE               	goto	u375
  1227  01D4                     l1176:
  1228  01D4  0873               	movf	___wmul@multiplier,w
  1229  01D5  0474               	iorwf	___wmul@multiplier+1,w
  1230  01D6  1D03               	btfss	3,2
  1231  01D7  29D9               	goto	u381
  1232  01D8  29DA               	goto	u380
  1233  01D9                     u381:
  1234  01D9  29BC               	goto	l1170
  1235  01DA                     u380:
  1236  01DA                     l1178:
  1237  01DA  0878               	movf	___wmul@product+1,w
  1238  01DB  00F4               	movwf	?___wmul+1
  1239  01DC  0877               	movf	___wmul@product,w
  1240  01DD  00F3               	movwf	?___wmul
  1241  01DE                     l340:
  1242  01DE  0008               	return
  1243  01DF                     __end_of___wmul:
  1244                           
  1245                           	psect	text5
  1246  014D                     __ptext5:	
  1247 ;; *************** function ___lwdiv *****************
  1248 ;; Defined at:
  1249 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  1250 ;; Parameters:    Size  Location     Type
  1251 ;;  divisor         2    0[BANK0 ] unsigned int 
  1252 ;;  dividend        2    2[BANK0 ] unsigned int 
  1253 ;; Auto vars:     Size  Location     Type
  1254 ;;  quotient        2    4[BANK0 ] unsigned int 
  1255 ;;  counter         1    6[BANK0 ] unsigned char 
  1256 ;; Return value:  Size  Location     Type
  1257 ;;                  2    0[BANK0 ] unsigned int 
  1258 ;; Registers used:
  1259 ;;		wreg, status,2, status,0
  1260 ;; Tracked objects:
  1261 ;;		On entry : 0/0
  1262 ;;		On exit  : 0/0
  1263 ;;		Unchanged: 0/0
  1264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1265 ;;      Params:         0       4       0       0       0
  1266 ;;      Locals:         0       3       0       0       0
  1267 ;;      Temps:          1       0       0       0       0
  1268 ;;      Totals:         1       7       0       0       0
  1269 ;;Total ram usage:        8 bytes
  1270 ;; Hardware stack levels used:    1
  1271 ;; Hardware stack levels required when called:    1
  1272 ;; This function calls:
  1273 ;;		Nothing
  1274 ;; This function is called by:
  1275 ;;		_divide
  1276 ;; This function uses a non-reentrant model
  1277 ;;
  1278                           
  1279                           
  1280                           ;psect for function ___lwdiv
  1281  014D                     ___lwdiv:
  1282  014D                     l1196:	
  1283                           ;incstack = 0
  1284                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1285                           
  1286  014D  1283               	bcf	3,5	;RP0=0, select bank0
  1287  014E  1303               	bcf	3,6	;RP1=0, select bank0
  1288  014F  01A4               	clrf	___lwdiv@quotient
  1289  0150  01A5               	clrf	___lwdiv@quotient+1
  1290  0151                     l1198:
  1291  0151  0820               	movf	___lwdiv@divisor,w
  1292  0152  0421               	iorwf	___lwdiv@divisor+1,w
  1293  0153  1903               	btfsc	3,2
  1294  0154  2956               	goto	u411
  1295  0155  2957               	goto	u410
  1296  0156                     u411:
  1297  0156  298E               	goto	l1218
  1298  0157                     u410:
  1299  0157                     l1200:
  1300  0157  01A6               	clrf	___lwdiv@counter
  1301  0158  0AA6               	incf	___lwdiv@counter,f
  1302  0159  2965               	goto	l1206
  1303  015A                     l1202:
  1304  015A  3001               	movlw	1
  1305  015B                     u425:
  1306  015B  1003               	clrc
  1307  015C  0DA0               	rlf	___lwdiv@divisor,f
  1308  015D  0DA1               	rlf	___lwdiv@divisor+1,f
  1309  015E  3EFF               	addlw	-1
  1310  015F  1D03               	skipz
  1311  0160  295B               	goto	u425
  1312  0161                     l1204:
  1313  0161  3001               	movlw	1
  1314  0162  00F9               	movwf	??___lwdiv
  1315  0163  0879               	movf	??___lwdiv,w
  1316  0164  07A6               	addwf	___lwdiv@counter,f
  1317  0165                     l1206:
  1318  0165  1FA1               	btfss	___lwdiv@divisor+1,7
  1319  0166  2968               	goto	u431
  1320  0167  2969               	goto	u430
  1321  0168                     u431:
  1322  0168  295A               	goto	l1202
  1323  0169                     u430:
  1324  0169                     l1208:
  1325  0169  3001               	movlw	1
  1326  016A                     u445:
  1327  016A  1003               	clrc
  1328  016B  0DA4               	rlf	___lwdiv@quotient,f
  1329  016C  0DA5               	rlf	___lwdiv@quotient+1,f
  1330  016D  3EFF               	addlw	-1
  1331  016E  1D03               	skipz
  1332  016F  296A               	goto	u445
  1333  0170  0821               	movf	___lwdiv@divisor+1,w
  1334  0171  0223               	subwf	___lwdiv@dividend+1,w
  1335  0172  1D03               	skipz
  1336  0173  2976               	goto	u455
  1337  0174  0820               	movf	___lwdiv@divisor,w
  1338  0175  0222               	subwf	___lwdiv@dividend,w
  1339  0176                     u455:
  1340  0176  1C03               	skipc
  1341  0177  2979               	goto	u451
  1342  0178  297A               	goto	u450
  1343  0179                     u451:
  1344  0179  2981               	goto	l1214
  1345  017A                     u450:
  1346  017A                     l1210:
  1347  017A  0820               	movf	___lwdiv@divisor,w
  1348  017B  02A2               	subwf	___lwdiv@dividend,f
  1349  017C  0821               	movf	___lwdiv@divisor+1,w
  1350  017D  1C03               	skipc
  1351  017E  03A3               	decf	___lwdiv@dividend+1,f
  1352  017F  02A3               	subwf	___lwdiv@dividend+1,f
  1353  0180                     l1212:
  1354  0180  1424               	bsf	___lwdiv@quotient,0
  1355  0181                     l1214:
  1356  0181  3001               	movlw	1
  1357  0182                     u465:
  1358  0182  1003               	clrc
  1359  0183  0CA1               	rrf	___lwdiv@divisor+1,f
  1360  0184  0CA0               	rrf	___lwdiv@divisor,f
  1361  0185  3EFF               	addlw	-1
  1362  0186  1D03               	skipz
  1363  0187  2982               	goto	u465
  1364  0188                     l1216:
  1365  0188  3001               	movlw	1
  1366  0189  02A6               	subwf	___lwdiv@counter,f
  1367  018A  1D03               	btfss	3,2
  1368  018B  298D               	goto	u471
  1369  018C  298E               	goto	u470
  1370  018D                     u471:
  1371  018D  2969               	goto	l1208
  1372  018E                     u470:
  1373  018E                     l1218:
  1374  018E  0825               	movf	___lwdiv@quotient+1,w
  1375  018F  00A1               	movwf	?___lwdiv+1
  1376  0190  0824               	movf	___lwdiv@quotient,w
  1377  0191  00A0               	movwf	?___lwdiv
  1378  0192                     l610:
  1379  0192  0008               	return
  1380  0193                     __end_of___lwdiv:
  1381                           
  1382                           	psect	text6
  1383  023D                     __ptext6:	
  1384 ;; *************** function ___bmul *****************
  1385 ;; Defined at:
  1386 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
  1387 ;; Parameters:    Size  Location     Type
  1388 ;;  multiplier      1    wreg     unsigned char 
  1389 ;;  multiplicand    1    3[COMMON] unsigned char 
  1390 ;; Auto vars:     Size  Location     Type
  1391 ;;  multiplier      1    6[COMMON] unsigned char 
  1392 ;;  product         1    5[COMMON] unsigned char 
  1393 ;; Return value:  Size  Location     Type
  1394 ;;                  1    wreg      unsigned char 
  1395 ;; Registers used:
  1396 ;;		wreg, status,2, status,0
  1397 ;; Tracked objects:
  1398 ;;		On entry : 0/0
  1399 ;;		On exit  : 0/0
  1400 ;;		Unchanged: 0/0
  1401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1402 ;;      Params:         1       0       0       0       0
  1403 ;;      Locals:         2       0       0       0       0
  1404 ;;      Temps:          1       0       0       0       0
  1405 ;;      Totals:         4       0       0       0       0
  1406 ;;Total ram usage:        4 bytes
  1407 ;; Hardware stack levels used:    1
  1408 ;; Hardware stack levels required when called:    1
  1409 ;; This function calls:
  1410 ;;		Nothing
  1411 ;; This function is called by:
  1412 ;;		_divide
  1413 ;; This function uses a non-reentrant model
  1414 ;;
  1415                           
  1416                           
  1417                           ;psect for function ___bmul
  1418  023D                     ___bmul:
  1419                           
  1420                           ;incstack = 0
  1421                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1422                           ;___bmul@multiplier stored from wreg
  1423  023D  00F6               	movwf	___bmul@multiplier
  1424  023E                     l1182:
  1425  023E  01F5               	clrf	___bmul@product
  1426  023F                     l1184:
  1427  023F  1C76               	btfss	___bmul@multiplier,0
  1428  0240  2A42               	goto	u391
  1429  0241  2A43               	goto	u390
  1430  0242                     u391:
  1431  0242  2A47               	goto	l1188
  1432  0243                     u390:
  1433  0243                     l1186:
  1434  0243  0873               	movf	___bmul@multiplicand,w
  1435  0244  00F4               	movwf	??___bmul
  1436  0245  0874               	movf	??___bmul,w
  1437  0246  07F5               	addwf	___bmul@product,f
  1438  0247                     l1188:
  1439  0247  1003               	clrc
  1440  0248  0DF3               	rlf	___bmul@multiplicand,f
  1441  0249                     l1190:
  1442  0249  1003               	clrc
  1443  024A  0CF6               	rrf	___bmul@multiplier,f
  1444  024B  0876               	movf	___bmul@multiplier,w
  1445  024C  1D03               	btfss	3,2
  1446  024D  2A4F               	goto	u401
  1447  024E  2A50               	goto	u400
  1448  024F                     u401:
  1449  024F  2A3F               	goto	l1184
  1450  0250                     u400:
  1451  0250                     l1192:
  1452  0250  0875               	movf	___bmul@product,w
  1453  0251                     l364:
  1454  0251  0008               	return
  1455  0252                     __end_of___bmul:
  1456                           
  1457                           	psect	text7
  1458  0252                     __ptext7:	
  1459 ;; *************** function _UART_Write_Char *****************
  1460 ;; Defined at:
  1461 ;;		line 100 in file "Libreria.c"
  1462 ;; Parameters:    Size  Location     Type
  1463 ;;  character       1    wreg     unsigned char 
  1464 ;; Auto vars:     Size  Location     Type
  1465 ;;  character       1    3[COMMON] unsigned char 
  1466 ;; Return value:  Size  Location     Type
  1467 ;;                  1    wreg      void 
  1468 ;; Registers used:
  1469 ;;		wreg
  1470 ;; Tracked objects:
  1471 ;;		On entry : 0/0
  1472 ;;		On exit  : 0/0
  1473 ;;		Unchanged: 0/0
  1474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1475 ;;      Params:         0       0       0       0       0
  1476 ;;      Locals:         1       0       0       0       0
  1477 ;;      Temps:          0       0       0       0       0
  1478 ;;      Totals:         1       0       0       0       0
  1479 ;;Total ram usage:        1 bytes
  1480 ;; Hardware stack levels used:    1
  1481 ;; Hardware stack levels required when called:    1
  1482 ;; This function calls:
  1483 ;;		Nothing
  1484 ;; This function is called by:
  1485 ;;		_main
  1486 ;; This function uses a non-reentrant model
  1487 ;;
  1488                           
  1489                           
  1490                           ;psect for function _UART_Write_Char
  1491  0252                     _UART_Write_Char:
  1492                           
  1493                           ;incstack = 0
  1494                           ; Regs used in _UART_Write_Char: [wreg]
  1495                           ;UART_Write_Char@character stored from wreg
  1496  0252  00F3               	movwf	UART_Write_Char@character
  1497  0253                     l1230:
  1498                           
  1499                           ;Libreria.c: 101:     TXREG = character;
  1500  0253  0873               	movf	UART_Write_Char@character,w
  1501  0254  1283               	bcf	3,5	;RP0=0, select bank0
  1502  0255  1303               	bcf	3,6	;RP1=0, select bank0
  1503  0256  0099               	movwf	25	;volatile
  1504  0257                     l97:	
  1505                           ;Libreria.c: 102:     while (!TXSTAbits.TRMT);
  1506                           
  1507  0257  1683               	bsf	3,5	;RP0=1, select bank1
  1508  0258  1303               	bcf	3,6	;RP1=0, select bank1
  1509  0259  1C98               	btfss	24,1	;volatile
  1510  025A  2A5C               	goto	u501
  1511  025B  2A5D               	goto	u500
  1512  025C                     u501:
  1513  025C  2A57               	goto	l97
  1514  025D                     u500:
  1515  025D                     l100:
  1516  025D  0008               	return
  1517  025E                     __end_of_UART_Write_Char:
  1518                           
  1519                           	psect	text8
  1520  0203                     __ptext8:	
  1521 ;; *************** function _UART_Write *****************
  1522 ;; Defined at:
  1523 ;;		line 92 in file "Libreria.c"
  1524 ;; Parameters:    Size  Location     Type
  1525 ;;  word            1    wreg     PTR unsigned char 
  1526 ;;		 -> STR_1(2), 
  1527 ;; Auto vars:     Size  Location     Type
  1528 ;;  word            1    4[COMMON] PTR unsigned char 
  1529 ;;		 -> STR_1(2), 
  1530 ;; Return value:  Size  Location     Type
  1531 ;;                  1    wreg      void 
  1532 ;; Registers used:
  1533 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  1534 ;; Tracked objects:
  1535 ;;		On entry : 0/0
  1536 ;;		On exit  : 0/0
  1537 ;;		Unchanged: 0/0
  1538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1539 ;;      Params:         0       0       0       0       0
  1540 ;;      Locals:         1       0       0       0       0
  1541 ;;      Temps:          1       0       0       0       0
  1542 ;;      Totals:         2       0       0       0       0
  1543 ;;Total ram usage:        2 bytes
  1544 ;; Hardware stack levels used:    2
  1545 ;; Hardware stack levels required when called:    1
  1546 ;; This function calls:
  1547 ;;		Nothing
  1548 ;; This function is called by:
  1549 ;;		_main
  1550 ;; This function uses a non-reentrant model
  1551 ;;
  1552                           
  1553                           
  1554                           ;psect for function _UART_Write
  1555  0203                     _UART_Write:
  1556                           
  1557                           ;incstack = 0
  1558                           ; Regs used in _UART_Write: [wreg-fsr0h+status,2+status,0+pclath]
  1559                           ;UART_Write@word stored from wreg
  1560  0203  00F4               	movwf	UART_Write@word
  1561  0204                     l1222:
  1562                           
  1563                           ;Libreria.c: 93:     while (*word != 0){
  1564  0204  2A19               	goto	l1228
  1565  0205                     l1224:
  1566                           
  1567                           ;Libreria.c: 94:         TXREG = (*word);
  1568  0205  0874               	movf	UART_Write@word,w
  1569  0206  0084               	movwf	4
  1570  0207  120A  118A  225E  120A  118A  	fcall	stringdir
  1571  020C  1283               	bcf	3,5	;RP0=0, select bank0
  1572  020D  1303               	bcf	3,6	;RP1=0, select bank0
  1573  020E  0099               	movwf	25	;volatile
  1574  020F                     l90:	
  1575                           ;Libreria.c: 95:         while(!TXSTAbits.TRMT);
  1576                           
  1577  020F  1683               	bsf	3,5	;RP0=1, select bank1
  1578  0210  1303               	bcf	3,6	;RP1=0, select bank1
  1579  0211  1C98               	btfss	24,1	;volatile
  1580  0212  2A14               	goto	u481
  1581  0213  2A15               	goto	u480
  1582  0214                     u481:
  1583  0214  2A0F               	goto	l90
  1584  0215                     u480:
  1585  0215                     l1226:
  1586                           
  1587                           ;Libreria.c: 96:         word++;
  1588  0215  3001               	movlw	1
  1589  0216  00F3               	movwf	??_UART_Write
  1590  0217  0873               	movf	??_UART_Write,w
  1591  0218  07F4               	addwf	UART_Write@word,f
  1592  0219                     l1228:
  1593                           
  1594                           ;Libreria.c: 93:     while (*word != 0){
  1595  0219  0874               	movf	UART_Write@word,w
  1596  021A  0084               	movwf	4
  1597  021B  120A  118A  225E  120A  118A  	fcall	stringdir
  1598  0220  3A00               	xorlw	0
  1599  0221  1D03               	skipz
  1600  0222  2A24               	goto	u491
  1601  0223  2A25               	goto	u490
  1602  0224                     u491:
  1603  0224  2A05               	goto	l1224
  1604  0225                     u490:
  1605  0225                     l94:
  1606  0225  0008               	return
  1607  0226                     __end_of_UART_Write:
  1608                           
  1609                           	psect	text9
  1610  01DF                     __ptext9:	
  1611 ;; *************** function _isr *****************
  1612 ;; Defined at:
  1613 ;;		line 107 in file "main.c"
  1614 ;; Parameters:    Size  Location     Type
  1615 ;;		None
  1616 ;; Auto vars:     Size  Location     Type
  1617 ;;		None
  1618 ;; Return value:  Size  Location     Type
  1619 ;;                  1    wreg      void 
  1620 ;; Registers used:
  1621 ;;		wreg, status,2, status,0
  1622 ;; Tracked objects:
  1623 ;;		On entry : 0/0
  1624 ;;		On exit  : 0/0
  1625 ;;		Unchanged: 0/0
  1626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1627 ;;      Params:         0       0       0       0       0
  1628 ;;      Locals:         0       0       0       0       0
  1629 ;;      Temps:          3       0       0       0       0
  1630 ;;      Totals:         3       0       0       0       0
  1631 ;;Total ram usage:        3 bytes
  1632 ;; Hardware stack levels used:    1
  1633 ;; This function calls:
  1634 ;;		Nothing
  1635 ;; This function is called by:
  1636 ;;		Interrupt level 1
  1637 ;; This function uses a non-reentrant model
  1638 ;;
  1639                           
  1640                           
  1641                           ;psect for function _isr
  1642  01DF                     _isr:
  1643  01DF                     i1l1292:
  1644                           
  1645                           ;main.c: 108:     if(RBIF){
  1646  01DF  1C0B               	btfss	11,0	;volatile
  1647  01E0  29E2               	goto	u55_21
  1648  01E1  29E3               	goto	u55_20
  1649  01E2                     u55_21:
  1650  01E2  29FC               	goto	i1l252
  1651  01E3                     u55_20:
  1652  01E3                     i1l1294:
  1653                           
  1654                           ;main.c: 109:         if(RB0==0 && RB1==1){
  1655  01E3  1283               	bcf	3,5	;RP0=0, select bank0
  1656  01E4  1303               	bcf	3,6	;RP1=0, select bank0
  1657  01E5  1806               	btfsc	6,0	;volatile
  1658  01E6  29E8               	goto	u56_21
  1659  01E7  29E9               	goto	u56_20
  1660  01E8                     u56_21:
  1661  01E8  29F1               	goto	i1l1300
  1662  01E9                     u56_20:
  1663  01E9                     i1l1296:
  1664  01E9  1C86               	btfss	6,1	;volatile
  1665  01EA  29EC               	goto	u57_21
  1666  01EB  29ED               	goto	u57_20
  1667  01EC                     u57_21:
  1668  01EC  29F1               	goto	i1l1300
  1669  01ED                     u57_20:
  1670  01ED                     i1l1298:
  1671                           
  1672                           ;main.c: 110:             contador++;
  1673  01ED  3001               	movlw	1
  1674  01EE  00F0               	movwf	??_isr
  1675  01EF  0870               	movf	??_isr,w
  1676  01F0  07BC               	addwf	_contador,f
  1677  01F1                     i1l1300:
  1678                           
  1679                           ;main.c: 112:         if(RB0==1 && RB1==0){
  1680  01F1  1C06               	btfss	6,0	;volatile
  1681  01F2  29F4               	goto	u58_21
  1682  01F3  29F5               	goto	u58_20
  1683  01F4                     u58_21:
  1684  01F4  29FB               	goto	i1l1306
  1685  01F5                     u58_20:
  1686  01F5                     i1l1302:
  1687  01F5  1886               	btfsc	6,1	;volatile
  1688  01F6  29F8               	goto	u59_21
  1689  01F7  29F9               	goto	u59_20
  1690  01F8                     u59_21:
  1691  01F8  29FB               	goto	i1l1306
  1692  01F9                     u59_20:
  1693  01F9                     i1l1304:
  1694                           
  1695                           ;main.c: 113:             contador--;
  1696  01F9  3001               	movlw	1
  1697  01FA  02BC               	subwf	_contador,f
  1698  01FB                     i1l1306:
  1699                           
  1700                           ;main.c: 115:         RBIF = 0;
  1701  01FB  100B               	bcf	11,0	;volatile
  1702  01FC                     i1l252:
  1703  01FC  0872               	movf	??_isr+2,w
  1704  01FD  008A               	movwf	10
  1705  01FE  0E71               	swapf	??_isr+1,w
  1706  01FF  0083               	movwf	3
  1707  0200  0EFE               	swapf	btemp,f
  1708  0201  0E7E               	swapf	btemp,w
  1709  0202  0009               	retfie
  1710  0203                     __end_of_isr:
  1711  007E                     btemp	set	126	;btemp
  1712  007E                     wtemp0	set	126
  1713                           
  1714                           	psect	intentry
  1715  0004                     __pintentry:	
  1716                           ;incstack = 0
  1717                           ; Regs used in _isr: [wreg+status,2+status,0]
  1718                           
  1719  0004                     interrupt_function:
  1720  007E                     saved_w	set	btemp
  1721  0004  00FE               	movwf	btemp
  1722  0005  0E03               	swapf	3,w
  1723  0006  00F1               	movwf	??_isr+1
  1724  0007  080A               	movf	10,w
  1725  0008  00F2               	movwf	??_isr+2
  1726  0009  120A  118A  29DF   	ljmp	_isr
  1727                           
  1728                           	psect	config
  1729                           
  1730                           ;Config register CONFIG1 @ 0x2007
  1731                           ;	Oscillator Selection bits
  1732                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1733                           ;	Watchdog Timer Enable bit
  1734                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1735                           ;	Power-up Timer Enable bit
  1736                           ;	PWRTE = OFF, PWRT disabled
  1737                           ;	RE3/MCLR pin function select bit
  1738                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  1739                           ;	Code Protection bit
  1740                           ;	CP = OFF, Program memory code protection is disabled
  1741                           ;	Data Code Protection bit
  1742                           ;	CPD = OFF, Data memory code protection is disabled
  1743                           ;	Brown Out Reset Selection bits
  1744                           ;	BOREN = ON, BOR enabled
  1745                           ;	Internal External Switchover bit
  1746                           ;	IESO = ON, Internal/External Switchover mode is enabled
  1747                           ;	Fail-Safe Clock Monitor Enabled bit
  1748                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  1749                           ;	Low Voltage Programming Enable bit
  1750                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  1751                           ;	In-Circuit Debugger Mode bit
  1752                           ;	DEBUG = 0x1, unprogrammed default
  1753  2007                     	org	8199
  1754  2007  3FF4               	dw	16372
  1755                           
  1756                           ;Config register CONFIG2 @ 0x2008
  1757                           ;	Brown-out Reset Selection bit
  1758                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1759                           ;	Flash Program Memory Self Write Enable bits
  1760                           ;	WRT = OFF, Write protection off
  1761  2008                     	org	8200
  1762  2008  3FFF               	dw	16383

Data Sizes:
    Strings     2
    Constant    0
    Data        0
    BSS         5
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      10
    BANK0            80     28      34
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    divide@unit	PTR unsigned char  size(1) Largest target is 1
		 -> uc(BANK0[1]), 

    divide@dec	PTR unsigned char  size(1) Largest target is 1
		 -> dc(BANK0[1]), 

    divide@cent	PTR unsigned char  size(1) Largest target is 1
		 -> cc(BANK0[1]), 

    divide@mil	PTR unsigned char  size(1) Largest target is 1
		 -> mc(BANK0[1]), 

    UART_Write@word	PTR unsigned char  size(1) Largest target is 2
		 -> STR_1(CODE[2]), 


Critical Paths under _main in COMMON

    _divide->___lwdiv
    ___lwdiv->___wmul

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_divide
    _divide->___lwdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    2274
                                             22 BANK0      6     6      0
                         _UART_Write
                    _UART_Write_Char
                             _divide
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0       0
                                              3 COMMON     1     1      0
                          _UART_Init
 ---------------------------------------------------------------------------------
 (2) _UART_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _divide                                              15     9      6    2174
                                              7 BANK0     15     9      6
                             ___bmul
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     618
                                              9 COMMON     1     1      0
                                              0 BANK0      7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     320
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _UART_Write_Char                                      1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _UART_Write                                           2     2      0      78
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_Write
   _UART_Write_Char
   _divide
     ___bmul
     ___lwdiv
       ___wmul (ARG)
     ___wmul
   _setup
     _UART_Init

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      2C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1C      22       5       42.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      2C      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Aug 13 16:32:27 2021

                       pc 0002            ___bmul@product 0075               _SSPSTATbits 0094  
                      l90 020F                        l85 023C                        l94 0225  
                      l97 0257                        _cc 003F                        _dc 003E  
                      _mc 0040                        _uc 003D                        fsr 0004  
     ___wmul@multiplicand 0075               divide@value 0027                       l100 025D  
                     l163 00E6                       l340 01DE                       l244 01B9  
                     l237 0132                       l610 0192                       l338 01C6  
                     l364 0251                       _GIE 005F                       _RB0 0030  
                     _RB1 0031                       _RE0 0048                       _RE1 0049  
                     u400 0250                       u401 024F                       u410 0157  
                     u411 0156                       u500 025D                       u501 025C  
                     u430 0169                       u350 01C0                       u510 00F6  
                     u431 0168                       u351 01BF                       u511 00F5  
                     u520 011D                       u425 015B                       u521 011C  
                     u450 017A                       u530 012B                       u451 0179  
                     u531 012A                       u380 01DA                       u540 0147  
                     u445 016A                       u381 01D9                       u365 01C7  
                     u541 0146                       u390 0243                       u470 018E  
                     u391 0242                       u471 018D                       u455 0176  
                     u375 01CE                       u480 0215                       u481 0214  
                     u465 0182                       u490 0225                       u491 0224  
                     _isr 01DF                       fsr0 0004                       indf 0000  
                    l1200 0157                      l1210 017A                      l1202 015A  
                    l1212 0180                      l1204 0161                      l1222 0204  
                    l1230 0253                      l1214 0181                      l1206 0165  
                    l1224 0205                      l1216 0188                      l1208 0169  
                    l1232 001A                      l1160 0233                      l1240 01A0  
                    l1226 0215                      l1218 018E                      l1170 01BC  
                    l1162 0236                      l1250 01A7                      l1242 01A1  
                    l1234 0193                      l1228 0219                      l1172 01C0  
                    l1164 0238                      l1260 01B2                      l1252 01A8  
                    l1244 01A3                      l1236 019A                      l1190 0249  
                    l1182 023E                      l1174 01CD                      l1166 0239  
                    l1158 0226                      l1262 01B3                      l1254 01AD  
                    l1246 01A5                      l1238 019C                      l1270 00EC  
                    l1192 0250                      l1184 023F                      l1176 01D4  
                    l1168 01BA                      l1264 01B4                      l1256 01B0  
                    l1248 01A6                      l1280 011D                      l1272 00F0  
                    l1186 0243                      l1178 01DA                      l1266 01B5  
                    l1258 01B1                      l1290 0147                      l1282 0124  
                    l1274 00F6                      l1188 0247                      l1196 014D  
                    l1284 012B                      l1276 0112                      l1268 00E7  
                    l1198 0151                      l1286 013B                      l1278 0118  
                    l1288 0141                      ?_isr 0070                      STR_1 0264  
                    _IOCB 0096                      _PEIE 005E                      _RBIE 005B  
                    _RBIF 0058                      _RCIF 0065                      _WPUB 0095  
                    _main 00E7                      btemp 007E                      start 000C  
       ___bmul@multiplier 0076   __end_of_UART_Write_Char 025E                     ??_isr 0070  
                   ?_main 0070                     _BRG16 0C3B                     _ANSEL 0188  
         __end_of___lwdiv 0193                     i1l252 01FC                     _RCREG 001A  
                   _SPBRG 0099                     _PORTA 0005                     _PORTB 0006  
                   _PORTC 0007                     _PORTD 0008                     _PORTE 0009  
                   u55_20 01E3                     u55_21 01E2                     u56_20 01E9  
                   u56_21 01E8                     u57_20 01ED                     u57_21 01EC  
                   _TRISA 0085                     _TRISB 0086                     _TRISC 0087  
                   _TRISD 0088                     _SSPIE 0463                     _TRISE 0089  
                   u58_20 01F5                     _SSPIF 0063                     u58_21 01F4  
                   u59_20 01F9                     u59_21 01F8                     _TXREG 0019  
             ?_UART_Write 0070        __size_of_UART_Init 0017                     _setup 0193  
                   pclath 000A                     status 0003                     wtemp0 007E  
         __initialization 000F              __end_of_main 014D                    ??_main 0036  
                  _ADRESH 001E                    _ADRESL 009E                    ?_setup 0070  
                  _ANSELH 0189                    i1l1300 01F1                    i1l1302 01F5  
                  i1l1304 01F9                    i1l1306 01FB                    i1l1292 01DF  
                  i1l1294 01E3                    i1l1296 01E9                    i1l1298 01ED  
                  _SPBRGH 009A                    _SSPADD 0093                    _TRISC3 043B  
                  _TRISC4 043C                    _TRISC5 043D                    _SSPCON 0014  
                  _SSPBUF 0013         __end_of_UART_Init 023D                    ___bmul 023D  
        ?_UART_Write_Char 0070       __size_of_UART_Write 0023                    ___wmul 01BA  
               ??___lwdiv 0079                    _divide 001A                    saved_w 007E  
 __end_of__initialization 0016       ___bmul@multiplicand 0073            __pcstackCOMMON 0070  
           __end_of_setup 01BA            _OPTION_REGbits 0081  UART_Write_Char@character 0073  
                 ??_setup 0073                __pbssBANK0 003C                __pmaintext 00E7  
                 ?___bmul 0073                   ?___wmul 0073                __pintentry 0004  
                 ?_divide 0027              ??_UART_Write 0073                   _SSPCON2 0091  
                 _SSPSTAT 0094                __stringtab 025E           __size_of___bmul 0015  
         __size_of___wmul 0025        __end_of_UART_Write 0226                   ___lwdiv 014D  
         __size_of_divide 00CD                   __ptext1 0193                   __ptext2 0226  
                 __ptext3 001A                   __ptext4 01BA                   __ptext5 014D  
                 __ptext6 023D                   __ptext7 0252                   __ptext8 0203  
                 __ptext9 01DF              __size_of_isr 0024      end_of_initialization 0016  
               _RCSTAbits 0018                 _UART_Init 0226            UART_Write@word 0074  
               _TRISCbits 0087                divide@cent 002A                divide@unit 002C  
               _TXSTAbits 0098            __end_of___bmul 0252            __end_of___wmul 01DF  
              ?_UART_Init 0070            __end_of_divide 00E7  __size_of_UART_Write_Char 000C  
     start_initialization 000F               __end_of_isr 0203                  ??___bmul 0074  
                ??___wmul 0077                  ??_divide 002D                 ___latbits 0002  
           __pcstackBANK0 0020                 __pnvBANK0 0041          ___lwdiv@dividend 0022  
                ?___lwdiv 0020               ??_UART_Init 0073                 __pstrings 025E  
               _contador2 0041          ___lwdiv@quotient 0024         ??_UART_Write_Char 0073  
          __size_of_setup 0027         interrupt_function 0004            ___wmul@product 0077  
                _PIR1bits 000C                 divide@dec 002B               __stringbase 0263  
               divide@mil 0029         ___wmul@multiplier 0073          __size_of___lwdiv 0046  
      __end_of__stringtab 0264           ___lwdiv@divisor 0020           ___lwdiv@counter 0026  
                _contador 003C             __size_of_main 0066                  intlevel1 0000  
               stringcode 025E           _UART_Write_Char 0252                  stringdir 025E  
                stringtab 025E                _UART_Write 0203               _SSPCON2bits 0091  
