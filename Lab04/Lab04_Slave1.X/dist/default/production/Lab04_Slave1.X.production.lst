

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Aug 06 12:57:00 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.20
    18                           ; Generated 12/02/2020 GMT
    19                           ; 
    20                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F887 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  008F                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  0105                     	;# 
   115  0107                     	;# 
   116  0108                     	;# 
   117  0109                     	;# 
   118  010C                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  0185                     	;# 
   124  0187                     	;# 
   125  0188                     	;# 
   126  0189                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  008F                     	;# 
   174  0090                     	;# 
   175  0091                     	;# 
   176  0092                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0095                     	;# 
   182  0096                     	;# 
   183  0097                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009A                     	;# 
   187  009B                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  0105                     	;# 
   193  0107                     	;# 
   194  0108                     	;# 
   195  0109                     	;# 
   196  010C                     	;# 
   197  010C                     	;# 
   198  010D                     	;# 
   199  010E                     	;# 
   200  010F                     	;# 
   201  0185                     	;# 
   202  0187                     	;# 
   203  0188                     	;# 
   204  0189                     	;# 
   205  018C                     	;# 
   206  018D                     	;# 
   207  0000                     	;# 
   208  0001                     	;# 
   209  0002                     	;# 
   210  0003                     	;# 
   211  0004                     	;# 
   212  0005                     	;# 
   213  0006                     	;# 
   214  0007                     	;# 
   215  0008                     	;# 
   216  0009                     	;# 
   217  000A                     	;# 
   218  000B                     	;# 
   219  000C                     	;# 
   220  000D                     	;# 
   221  000E                     	;# 
   222  000E                     	;# 
   223  000F                     	;# 
   224  0010                     	;# 
   225  0011                     	;# 
   226  0012                     	;# 
   227  0013                     	;# 
   228  0014                     	;# 
   229  0015                     	;# 
   230  0015                     	;# 
   231  0016                     	;# 
   232  0017                     	;# 
   233  0018                     	;# 
   234  0019                     	;# 
   235  001A                     	;# 
   236  001B                     	;# 
   237  001B                     	;# 
   238  001C                     	;# 
   239  001D                     	;# 
   240  001E                     	;# 
   241  001F                     	;# 
   242  0081                     	;# 
   243  0085                     	;# 
   244  0086                     	;# 
   245  0087                     	;# 
   246  0088                     	;# 
   247  0089                     	;# 
   248  008C                     	;# 
   249  008D                     	;# 
   250  008E                     	;# 
   251  008F                     	;# 
   252  0090                     	;# 
   253  0091                     	;# 
   254  0092                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0093                     	;# 
   258  0094                     	;# 
   259  0095                     	;# 
   260  0096                     	;# 
   261  0097                     	;# 
   262  0098                     	;# 
   263  0099                     	;# 
   264  009A                     	;# 
   265  009B                     	;# 
   266  009C                     	;# 
   267  009D                     	;# 
   268  009E                     	;# 
   269  009F                     	;# 
   270  0105                     	;# 
   271  0107                     	;# 
   272  0108                     	;# 
   273  0109                     	;# 
   274  010C                     	;# 
   275  010C                     	;# 
   276  010D                     	;# 
   277  010E                     	;# 
   278  010F                     	;# 
   279  0185                     	;# 
   280  0187                     	;# 
   281  0188                     	;# 
   282  0189                     	;# 
   283  018C                     	;# 
   284  018D                     	;# 
   285  0000                     	;# 
   286  0001                     	;# 
   287  0002                     	;# 
   288  0003                     	;# 
   289  0004                     	;# 
   290  0005                     	;# 
   291  0006                     	;# 
   292  0007                     	;# 
   293  0008                     	;# 
   294  0009                     	;# 
   295  000A                     	;# 
   296  000B                     	;# 
   297  000C                     	;# 
   298  000D                     	;# 
   299  000E                     	;# 
   300  000E                     	;# 
   301  000F                     	;# 
   302  0010                     	;# 
   303  0011                     	;# 
   304  0012                     	;# 
   305  0013                     	;# 
   306  0014                     	;# 
   307  0015                     	;# 
   308  0015                     	;# 
   309  0016                     	;# 
   310  0017                     	;# 
   311  0018                     	;# 
   312  0019                     	;# 
   313  001A                     	;# 
   314  001B                     	;# 
   315  001B                     	;# 
   316  001C                     	;# 
   317  001D                     	;# 
   318  001E                     	;# 
   319  001F                     	;# 
   320  0081                     	;# 
   321  0085                     	;# 
   322  0086                     	;# 
   323  0087                     	;# 
   324  0088                     	;# 
   325  0089                     	;# 
   326  008C                     	;# 
   327  008D                     	;# 
   328  008E                     	;# 
   329  008F                     	;# 
   330  0090                     	;# 
   331  0091                     	;# 
   332  0092                     	;# 
   333  0093                     	;# 
   334  0093                     	;# 
   335  0093                     	;# 
   336  0094                     	;# 
   337  0095                     	;# 
   338  0096                     	;# 
   339  0097                     	;# 
   340  0098                     	;# 
   341  0099                     	;# 
   342  009A                     	;# 
   343  009B                     	;# 
   344  009C                     	;# 
   345  009D                     	;# 
   346  009E                     	;# 
   347  009F                     	;# 
   348  0105                     	;# 
   349  0107                     	;# 
   350  0108                     	;# 
   351  0109                     	;# 
   352  010C                     	;# 
   353  010C                     	;# 
   354  010D                     	;# 
   355  010E                     	;# 
   356  010F                     	;# 
   357  0185                     	;# 
   358  0187                     	;# 
   359  0188                     	;# 
   360  0189                     	;# 
   361  018C                     	;# 
   362  018D                     	;# 
   363                           
   364                           	psect	nvCOMMON
   365  0078                     __pnvCOMMON:
   366  0078                     _adcValue:
   367  0078                     	ds	1
   368  0014                     _SSPCON	set	20
   369  001E                     _ADRESH	set	30
   370  001F                     _ADCON0bits	set	31
   371  000B                     _INTCONbits	set	11
   372  0005                     _PORTA	set	5
   373  0008                     _PORTD	set	8
   374  0013                     _SSPBUF	set	19
   375  0014                     _SSPCONbits	set	20
   376  000C                     _PIR1bits	set	12
   377  0063                     _SSPIF	set	99
   378  005E                     _PEIE	set	94
   379  005F                     _GIE	set	95
   380  0091                     _SSPCON2bits	set	145
   381  0094                     _SSPSTAT	set	148
   382  0093                     _SSPADD	set	147
   383  0091                     _SSPCON2	set	145
   384  009F                     _ADCON1bits	set	159
   385  008C                     _PIE1bits	set	140
   386  0087                     _TRISCbits	set	135
   387  0085                     _TRISA	set	133
   388  0094                     _SSPSTATbits	set	148
   389  0463                     _SSPIE	set	1123
   390  043C                     _TRISC4	set	1084
   391  043B                     _TRISC3	set	1083
   392  04A0                     _BF	set	1184
   393  0189                     _ANSELH	set	393
   394  0188                     _ANSEL	set	392
   395                           
   396                           	psect	cinit
   397  000F                     start_initialization:	
   398                           ; #config settings
   399                           
   400  000F                     __initialization:
   401                           
   402                           ; Clear objects allocated to COMMON
   403  000F  01F6               	clrf	__pbssCOMMON& (0+127)
   404  0010  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   405  0011                     end_of_initialization:	
   406                           ;End of C runtime variable initialization code
   407                           
   408  0011                     __end_of__initialization:
   409  0011  0183               	clrf	3
   410  0012  120A  118A  2876   	ljmp	_main	;jump to C main() function
   411                           
   412                           	psect	bssCOMMON
   413  0076                     __pbssCOMMON:
   414  0076                     _dato:
   415  0076                     	ds	1
   416  0077                     _z:
   417  0077                     	ds	1
   418                           
   419                           	psect	cstackCOMMON
   420  0070                     __pcstackCOMMON:
   421  0070                     ?_I2C_Slave_Init:
   422  0070                     ?_initADC:	
   423                           ; 1 bytes @ 0x0
   424                           
   425  0070                     ?_readADC:	
   426                           ; 1 bytes @ 0x0
   427                           
   428  0070                     ?_isr:	
   429                           ; 1 bytes @ 0x0
   430                           
   431  0070                     ??_isr:	
   432                           ; 1 bytes @ 0x0
   433                           
   434  0070                     ?_main:	
   435                           ; 1 bytes @ 0x0
   436                           
   437                           
   438                           ; 1 bytes @ 0x0
   439  0070                     	ds	3
   440  0073                     ??_I2C_Slave_Init:
   441  0073                     ??_initADC:	
   442                           ; 1 bytes @ 0x3
   443                           
   444  0073                     ??_readADC:	
   445                           ; 1 bytes @ 0x3
   446                           
   447  0073                     I2C_Slave_Init@address:	
   448                           ; 1 bytes @ 0x3
   449                           
   450                           
   451                           ; 1 bytes @ 0x3
   452  0073                     	ds	1
   453  0074                     readADC@pin:
   454                           
   455                           ; 1 bytes @ 0x4
   456  0074                     	ds	1
   457  0075                     ??_main:
   458                           
   459                           ; 1 bytes @ 0x5
   460  0075                     	ds	1
   461                           
   462                           	psect	maintext
   463  0076                     __pmaintext:	
   464 ;;
   465 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   466 ;;
   467 ;; *************** function _main *****************
   468 ;; Defined at:
   469 ;;		line 72 in file "main_S1.c"
   470 ;; Parameters:    Size  Location     Type
   471 ;;		None
   472 ;; Auto vars:     Size  Location     Type
   473 ;;		None
   474 ;; Return value:  Size  Location     Type
   475 ;;                  1    wreg      void 
   476 ;; Registers used:
   477 ;;		wreg, status,2, status,0, pclath, cstack
   478 ;; Tracked objects:
   479 ;;		On entry : B00/0
   480 ;;		On exit  : 0/0
   481 ;;		Unchanged: 0/0
   482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   483 ;;      Params:         0       0       0       0       0
   484 ;;      Locals:         0       0       0       0       0
   485 ;;      Temps:          1       0       0       0       0
   486 ;;      Totals:         1       0       0       0       0
   487 ;;Total ram usage:        1 bytes
   488 ;; Hardware stack levels required when called:    2
   489 ;; This function calls:
   490 ;;		_I2C_Slave_Init
   491 ;;		_initADC
   492 ;;		_readADC
   493 ;; This function is called by:
   494 ;;		Startup code after reset
   495 ;; This function uses a non-reentrant model
   496 ;;
   497                           
   498                           
   499                           ;psect for function _main
   500  0076                     _main:
   501  0076                     l800:	
   502                           ;incstack = 0
   503                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   504                           
   505                           
   506                           ;main_S1.c: 73:     ANSEL = 1;
   507  0076  3001               	movlw	1
   508  0077  1683               	bsf	3,5	;RP0=1, select bank3
   509  0078  1703               	bsf	3,6	;RP1=1, select bank3
   510  0079  0088               	movwf	8	;volatile
   511  007A                     l802:
   512                           
   513                           ;main_S1.c: 74:     ANSELH = 0;
   514  007A  0189               	clrf	9	;volatile
   515  007B                     l804:
   516                           
   517                           ;main_S1.c: 75:     TRISA = 1;
   518  007B  3001               	movlw	1
   519  007C  1683               	bsf	3,5	;RP0=1, select bank1
   520  007D  1303               	bcf	3,6	;RP1=0, select bank1
   521  007E  0085               	movwf	5	;volatile
   522                           
   523                           ;main_S1.c: 76:     PORTA = 0;
   524  007F  1283               	bcf	3,5	;RP0=0, select bank0
   525  0080  1303               	bcf	3,6	;RP1=0, select bank0
   526  0081  0185               	clrf	5	;volatile
   527  0082                     l806:
   528                           
   529                           ;main_S1.c: 80:     TRISCbits.TRISC3 = 1;
   530  0082  1683               	bsf	3,5	;RP0=1, select bank1
   531  0083  1303               	bcf	3,6	;RP1=0, select bank1
   532  0084  1587               	bsf	7,3	;volatile
   533  0085                     l808:
   534                           
   535                           ;main_S1.c: 81:     TRISCbits.TRISC4 = 1;
   536  0085  1607               	bsf	7,4	;volatile
   537  0086                     l810:
   538                           
   539                           ;main_S1.c: 83:     I2C_Slave_Init(0x50);
   540  0086  3050               	movlw	80
   541  0087  120A  118A  20A3  120A  118A  	fcall	_I2C_Slave_Init
   542  008C                     l812:
   543                           
   544                           ;main_S1.c: 85:     INTCONbits.GIE = 1;
   545  008C  178B               	bsf	11,7	;volatile
   546  008D                     l814:
   547                           
   548                           ;main_S1.c: 86:     INTCONbits.PEIE = 1;
   549  008D  170B               	bsf	11,6	;volatile
   550  008E                     l816:
   551                           
   552                           ;main_S1.c: 87:     PIE1bits.SSPIE = 1;
   553  008E  1683               	bsf	3,5	;RP0=1, select bank1
   554  008F  1303               	bcf	3,6	;RP1=0, select bank1
   555  0090  158C               	bsf	12,3	;volatile
   556  0091                     l818:
   557                           
   558                           ;main_S1.c: 89:     initADC();
   559  0091  120A  118A  20D0  120A  118A  	fcall	_initADC
   560  0096                     l820:
   561                           
   562                           ;main_S1.c: 92:         adcValue = readADC(0);
   563  0096  3000               	movlw	0
   564  0097  120A  118A  20BD  120A  118A  	fcall	_readADC
   565  009C  00F5               	movwf	??_main
   566  009D  0875               	movf	??_main,w
   567  009E  00F8               	movwf	_adcValue
   568  009F  2896               	goto	l820
   569  00A0  120A  118A  280C   	ljmp	start
   570  00A3                     __end_of_main:
   571                           
   572                           	psect	text1
   573  00BD                     __ptext1:	
   574 ;; *************** function _readADC *****************
   575 ;; Defined at:
   576 ;;		line 32 in file "ADC.c"
   577 ;; Parameters:    Size  Location     Type
   578 ;;  pin             1    wreg     unsigned char 
   579 ;; Auto vars:     Size  Location     Type
   580 ;;  pin             1    4[COMMON] unsigned char 
   581 ;; Return value:  Size  Location     Type
   582 ;;                  1    wreg      unsigned char 
   583 ;; Registers used:
   584 ;;		wreg, status,2, status,0
   585 ;; Tracked objects:
   586 ;;		On entry : 0/0
   587 ;;		On exit  : 0/0
   588 ;;		Unchanged: 0/0
   589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   590 ;;      Params:         0       0       0       0       0
   591 ;;      Locals:         1       0       0       0       0
   592 ;;      Temps:          1       0       0       0       0
   593 ;;      Totals:         2       0       0       0       0
   594 ;;Total ram usage:        2 bytes
   595 ;; Hardware stack levels used:    1
   596 ;; Hardware stack levels required when called:    1
   597 ;; This function calls:
   598 ;;		Nothing
   599 ;; This function is called by:
   600 ;;		_main
   601 ;; This function uses a non-reentrant model
   602 ;;
   603                           
   604                           
   605                           ;psect for function _readADC
   606  00BD                     _readADC:
   607                           
   608                           ;incstack = 0
   609                           ; Regs used in _readADC: [wreg+status,2+status,0]
   610                           ;readADC@pin stored from wreg
   611  00BD  00F4               	movwf	readADC@pin
   612  00BE                     l754:
   613                           
   614                           ;ADC.c: 33:     ADCON0bits.CHS = pin;
   615  00BE  0874               	movf	readADC@pin,w
   616  00BF  00F3               	movwf	??_readADC
   617  00C0  0DF3               	rlf	??_readADC,f
   618  00C1  0DF3               	rlf	??_readADC,f
   619  00C2  1283               	bcf	3,5	;RP0=0, select bank0
   620  00C3  1303               	bcf	3,6	;RP1=0, select bank0
   621  00C4  081F               	movf	31,w	;volatile
   622  00C5  0673               	xorwf	??_readADC,w
   623  00C6  39C3               	andlw	-61
   624  00C7  0673               	xorwf	??_readADC,w
   625  00C8  009F               	movwf	31	;volatile
   626  00C9                     l756:
   627                           
   628                           ;ADC.c: 34:     ADCON0bits.GO = 1;
   629  00C9  149F               	bsf	31,1	;volatile
   630  00CA                     l78:	
   631                           ;ADC.c: 35:     while(ADCON0bits.GO);
   632                           
   633  00CA  189F               	btfsc	31,1	;volatile
   634  00CB  28CD               	goto	u11
   635  00CC  28CE               	goto	u10
   636  00CD                     u11:
   637  00CD  28CA               	goto	l78
   638  00CE                     u10:
   639  00CE                     l758:
   640                           
   641                           ;ADC.c: 36:     return ADRESH;
   642  00CE  081E               	movf	30,w	;volatile
   643  00CF                     l81:
   644  00CF  0008               	return
   645  00D0                     __end_of_readADC:
   646                           
   647                           	psect	text2
   648  00D0                     __ptext2:	
   649 ;; *************** function _initADC *****************
   650 ;; Defined at:
   651 ;;		line 11 in file "ADC.c"
   652 ;; Parameters:    Size  Location     Type
   653 ;;		None
   654 ;; Auto vars:     Size  Location     Type
   655 ;;		None
   656 ;; Return value:  Size  Location     Type
   657 ;;                  1    wreg      void 
   658 ;; Registers used:
   659 ;;		wreg, status,2, status,0
   660 ;; Tracked objects:
   661 ;;		On entry : 0/0
   662 ;;		On exit  : 0/0
   663 ;;		Unchanged: 0/0
   664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   665 ;;      Params:         0       0       0       0       0
   666 ;;      Locals:         0       0       0       0       0
   667 ;;      Temps:          0       0       0       0       0
   668 ;;      Totals:         0       0       0       0       0
   669 ;;Total ram usage:        0 bytes
   670 ;; Hardware stack levels used:    1
   671 ;; Hardware stack levels required when called:    1
   672 ;; This function calls:
   673 ;;		Nothing
   674 ;; This function is called by:
   675 ;;		_main
   676 ;; This function uses a non-reentrant model
   677 ;;
   678                           
   679                           
   680                           ;psect for function _initADC
   681  00D0                     _initADC:
   682  00D0                     l742:	
   683                           ;incstack = 0
   684                           ; Regs used in _initADC: [wreg+status,2+status,0]
   685                           
   686                           
   687                           ;ADC.c: 18:     ADCON0bits.ADCS = 1;
   688  00D0  1283               	bcf	3,5	;RP0=0, select bank0
   689  00D1  1303               	bcf	3,6	;RP1=0, select bank0
   690  00D2  081F               	movf	31,w	;volatile
   691  00D3  393F               	andlw	-193
   692  00D4  3840               	iorlw	64
   693  00D5  009F               	movwf	31	;volatile
   694  00D6                     l744:
   695                           
   696                           ;ADC.c: 24:     ADCON1bits.ADFM = 0;
   697  00D6  1683               	bsf	3,5	;RP0=1, select bank1
   698  00D7  1303               	bcf	3,6	;RP1=0, select bank1
   699  00D8  139F               	bcf	31,7	;volatile
   700  00D9                     l746:
   701                           
   702                           ;ADC.c: 25:     ADCON1bits.VCFG1 = 0;
   703  00D9  129F               	bcf	31,5	;volatile
   704  00DA                     l748:
   705                           
   706                           ;ADC.c: 26:     ADCON1bits.VCFG0 = 0;
   707  00DA  121F               	bcf	31,4	;volatile
   708  00DB                     l750:
   709                           
   710                           ;ADC.c: 27:     ADCON0bits.ADON = 1;
   711  00DB  1283               	bcf	3,5	;RP0=0, select bank0
   712  00DC  1303               	bcf	3,6	;RP1=0, select bank0
   713  00DD  141F               	bsf	31,0	;volatile
   714  00DE                     l75:
   715  00DE  0008               	return
   716  00DF                     __end_of_initADC:
   717                           
   718                           	psect	text3
   719  00A3                     __ptext3:	
   720 ;; *************** function _I2C_Slave_Init *****************
   721 ;; Defined at:
   722 ;;		line 93 in file "I2C.c"
   723 ;; Parameters:    Size  Location     Type
   724 ;;  address         1    wreg     unsigned char 
   725 ;; Auto vars:     Size  Location     Type
   726 ;;  address         1    3[COMMON] unsigned char 
   727 ;; Return value:  Size  Location     Type
   728 ;;                  1    wreg      void 
   729 ;; Registers used:
   730 ;;		wreg
   731 ;; Tracked objects:
   732 ;;		On entry : 0/0
   733 ;;		On exit  : 0/0
   734 ;;		Unchanged: 0/0
   735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   736 ;;      Params:         0       0       0       0       0
   737 ;;      Locals:         1       0       0       0       0
   738 ;;      Temps:          0       0       0       0       0
   739 ;;      Totals:         1       0       0       0       0
   740 ;;Total ram usage:        1 bytes
   741 ;; Hardware stack levels used:    1
   742 ;; Hardware stack levels required when called:    1
   743 ;; This function calls:
   744 ;;		Nothing
   745 ;; This function is called by:
   746 ;;		_main
   747 ;; This function uses a non-reentrant model
   748 ;;
   749                           
   750                           
   751                           ;psect for function _I2C_Slave_Init
   752  00A3                     _I2C_Slave_Init:
   753                           
   754                           ;incstack = 0
   755                           ; Regs used in _I2C_Slave_Init: [wreg]
   756                           ;I2C_Slave_Init@address stored from wreg
   757  00A3  00F3               	movwf	I2C_Slave_Init@address
   758  00A4                     l728:
   759                           
   760                           ;I2C.c: 93: void I2C_Slave_Init(uint8_t address);I2C.c: 94: {;I2C.c: 95:     SSPADD = ad
      +                          dress;
   761  00A4  0873               	movf	I2C_Slave_Init@address,w
   762  00A5  1683               	bsf	3,5	;RP0=1, select bank1
   763  00A6  1303               	bcf	3,6	;RP1=0, select bank1
   764  00A7  0093               	movwf	19	;volatile
   765                           
   766                           ;I2C.c: 96:     SSPCON = 0x36;
   767  00A8  3036               	movlw	54
   768  00A9  1283               	bcf	3,5	;RP0=0, select bank0
   769  00AA  1303               	bcf	3,6	;RP1=0, select bank0
   770  00AB  0094               	movwf	20	;volatile
   771                           
   772                           ;I2C.c: 97:     SSPSTAT = 0x80;
   773  00AC  3080               	movlw	128
   774  00AD  1683               	bsf	3,5	;RP0=1, select bank1
   775  00AE  1303               	bcf	3,6	;RP1=0, select bank1
   776  00AF  0094               	movwf	20	;volatile
   777                           
   778                           ;I2C.c: 98:     SSPCON2 = 0x01;
   779  00B0  3001               	movlw	1
   780  00B1  0091               	movwf	17	;volatile
   781  00B2                     l730:
   782                           
   783                           ;I2C.c: 99:     TRISC3 = 1;
   784  00B2  1587               	bsf	7,3	;volatile
   785  00B3                     l732:
   786                           
   787                           ;I2C.c: 100:     TRISC4 = 1;
   788  00B3  1607               	bsf	7,4	;volatile
   789  00B4                     l734:
   790                           
   791                           ;I2C.c: 101:     GIE = 1;
   792  00B4  178B               	bsf	11,7	;volatile
   793  00B5                     l736:
   794                           
   795                           ;I2C.c: 102:     PEIE = 1;
   796  00B5  170B               	bsf	11,6	;volatile
   797  00B6                     l738:
   798                           
   799                           ;I2C.c: 103:     SSPIF = 0;
   800  00B6  1283               	bcf	3,5	;RP0=0, select bank0
   801  00B7  1303               	bcf	3,6	;RP1=0, select bank0
   802  00B8  118C               	bcf	12,3	;volatile
   803  00B9                     l740:
   804                           
   805                           ;I2C.c: 104:     SSPIE = 1;
   806  00B9  1683               	bsf	3,5	;RP0=1, select bank1
   807  00BA  1303               	bcf	3,6	;RP1=0, select bank1
   808  00BB  158C               	bsf	12,3	;volatile
   809  00BC                     l136:
   810  00BC  0008               	return
   811  00BD                     __end_of_I2C_Slave_Init:
   812                           
   813                           	psect	text4
   814  0015                     __ptext4:	
   815 ;; *************** function _isr *****************
   816 ;; Defined at:
   817 ;;		line 37 in file "main_S1.c"
   818 ;; Parameters:    Size  Location     Type
   819 ;;		None
   820 ;; Auto vars:     Size  Location     Type
   821 ;;		None
   822 ;; Return value:  Size  Location     Type
   823 ;;                  1    wreg      void 
   824 ;; Registers used:
   825 ;;		wreg
   826 ;; Tracked objects:
   827 ;;		On entry : 0/0
   828 ;;		On exit  : 0/0
   829 ;;		Unchanged: 0/0
   830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   831 ;;      Params:         0       0       0       0       0
   832 ;;      Locals:         0       0       0       0       0
   833 ;;      Temps:          3       0       0       0       0
   834 ;;      Totals:         3       0       0       0       0
   835 ;;Total ram usage:        3 bytes
   836 ;; Hardware stack levels used:    1
   837 ;; This function calls:
   838 ;;		Nothing
   839 ;; This function is called by:
   840 ;;		Interrupt level 1
   841 ;; This function uses a non-reentrant model
   842 ;;
   843                           
   844                           
   845                           ;psect for function _isr
   846  0015                     _isr:
   847  0015                     i1l766:
   848                           
   849                           ;main_S1.c: 38:     if(PIR1bits.SSPIF == 1){
   850  0015  1283               	bcf	3,5	;RP0=0, select bank0
   851  0016  1303               	bcf	3,6	;RP1=0, select bank0
   852  0017  1D8C               	btfss	12,3	;volatile
   853  0018  281A               	goto	u4_21
   854  0019  281B               	goto	u4_20
   855  001A                     u4_21:
   856  001A  286F               	goto	i1l58
   857  001B                     u4_20:
   858  001B                     i1l768:
   859                           
   860                           ;main_S1.c: 40:         SSPCONbits.CKP = 0;
   861  001B  1214               	bcf	20,4	;volatile
   862                           
   863                           ;main_S1.c: 42:         if ((SSPCONbits.SSPOV) || (SSPCONbits.WCOL)){
   864  001C  1B14               	btfsc	20,6	;volatile
   865  001D  281F               	goto	u5_21
   866  001E  2820               	goto	u5_20
   867  001F                     u5_21:
   868  001F  2824               	goto	i1l772
   869  0020                     u5_20:
   870  0020                     i1l770:
   871  0020  1F94               	btfss	20,7	;volatile
   872  0021  2823               	goto	u6_21
   873  0022  2824               	goto	u6_20
   874  0023                     u6_21:
   875  0023  282B               	goto	i1l780
   876  0024                     u6_20:
   877  0024                     i1l772:
   878                           
   879                           ;main_S1.c: 43:             z = SSPBUF;
   880  0024  0813               	movf	19,w	;volatile
   881  0025  00F0               	movwf	??_isr
   882  0026  0870               	movf	??_isr,w
   883  0027  00F7               	movwf	_z
   884  0028                     i1l774:
   885                           
   886                           ;main_S1.c: 44:             SSPCONbits.SSPOV = 0;
   887  0028  1314               	bcf	20,6	;volatile
   888  0029                     i1l776:
   889                           
   890                           ;main_S1.c: 45:             SSPCONbits.WCOL = 0;
   891  0029  1394               	bcf	20,7	;volatile
   892  002A                     i1l778:
   893                           
   894                           ;main_S1.c: 46:             SSPCONbits.CKP = 1;
   895  002A  1614               	bsf	20,4	;volatile
   896  002B                     i1l780:
   897                           
   898                           ;main_S1.c: 49:         if(!SSPSTATbits.D_nA && !SSPSTATbits.R_nW) {
   899  002B  1683               	bsf	3,5	;RP0=1, select bank1
   900  002C  1303               	bcf	3,6	;RP1=0, select bank1
   901  002D  1A94               	btfsc	20,5	;volatile
   902  002E  2830               	goto	u7_21
   903  002F  2831               	goto	u7_20
   904  0030                     u7_21:
   905  0030  284C               	goto	i1l49
   906  0031                     u7_20:
   907  0031                     i1l782:
   908  0031  1914               	btfsc	20,2	;volatile
   909  0032  2834               	goto	u8_21
   910  0033  2835               	goto	u8_20
   911  0034                     u8_21:
   912  0034  284C               	goto	i1l49
   913  0035                     u8_20:
   914  0035                     i1l784:
   915                           
   916                           ;main_S1.c: 51:             z = SSPBUF;
   917  0035  1283               	bcf	3,5	;RP0=0, select bank0
   918  0036  1303               	bcf	3,6	;RP1=0, select bank0
   919  0037  0813               	movf	19,w	;volatile
   920  0038  00F0               	movwf	??_isr
   921  0039  0870               	movf	??_isr,w
   922  003A  00F7               	movwf	_z
   923  003B                     i1l786:
   924                           
   925                           ;main_S1.c: 53:             PIR1bits.SSPIF = 0;
   926  003B  118C               	bcf	12,3	;volatile
   927  003C                     i1l788:
   928                           
   929                           ;main_S1.c: 54:             SSPCONbits.CKP = 1;
   930  003C  1614               	bsf	20,4	;volatile
   931  003D                     i1l50:	
   932                           ;main_S1.c: 55:             while(!SSPSTATbits.BF);
   933                           
   934  003D  1683               	bsf	3,5	;RP0=1, select bank1
   935  003E  1303               	bcf	3,6	;RP1=0, select bank1
   936  003F  1C14               	btfss	20,0	;volatile
   937  0040  2842               	goto	u9_21
   938  0041  2843               	goto	u9_20
   939  0042                     u9_21:
   940  0042  283D               	goto	i1l50
   941  0043                     u9_20:
   942  0043                     i1l790:
   943                           
   944                           ;main_S1.c: 56:             PORTD = SSPBUF;
   945  0043  1283               	bcf	3,5	;RP0=0, select bank0
   946  0044  1303               	bcf	3,6	;RP1=0, select bank0
   947  0045  0813               	movf	19,w	;volatile
   948  0046  0088               	movwf	8	;volatile
   949                           
   950                           ;main_S1.c: 57:             _delay((unsigned long)((250)*(4000000/4000000.0)));
   951  0047  3053               	movlw	83
   952  0048  00F0               	movwf	??_isr
   953  0049                     u15_27:
   954  0049  0BF0               	decfsz	??_isr,f
   955  004A  2849               	goto	u15_27
   956                           
   957                           ;main_S1.c: 59:         }else if(!SSPSTATbits.D_nA && SSPSTATbits.R_nW){
   958  004B  286C               	goto	i1l53
   959  004C                     i1l49:
   960  004C  1A94               	btfsc	20,5	;volatile
   961  004D  284F               	goto	u10_21
   962  004E  2850               	goto	u10_20
   963  004F                     u10_21:
   964  004F  286C               	goto	i1l53
   965  0050                     u10_20:
   966  0050                     i1l792:
   967  0050  1D14               	btfss	20,2	;volatile
   968  0051  2853               	goto	u11_21
   969  0052  2854               	goto	u11_20
   970  0053                     u11_21:
   971  0053  286C               	goto	i1l53
   972  0054                     u11_20:
   973  0054                     i1l794:
   974                           
   975                           ;main_S1.c: 60:             z = SSPBUF;
   976  0054  1283               	bcf	3,5	;RP0=0, select bank0
   977  0055  1303               	bcf	3,6	;RP1=0, select bank0
   978  0056  0813               	movf	19,w	;volatile
   979  0057  00F0               	movwf	??_isr
   980  0058  0870               	movf	??_isr,w
   981  0059  00F7               	movwf	_z
   982  005A                     i1l796:
   983                           
   984                           ;main_S1.c: 61:             BF = 0;
   985  005A  1683               	bsf	3,5	;RP0=1, select bank1
   986  005B  1303               	bcf	3,6	;RP1=0, select bank1
   987  005C  1014               	bcf	20,0	;volatile
   988                           
   989                           ;main_S1.c: 62:             SSPBUF = adcValue;
   990  005D  0878               	movf	_adcValue,w
   991  005E  1283               	bcf	3,5	;RP0=0, select bank0
   992  005F  1303               	bcf	3,6	;RP1=0, select bank0
   993  0060  0093               	movwf	19	;volatile
   994  0061                     i1l798:
   995                           
   996                           ;main_S1.c: 63:             SSPCONbits.CKP = 1;
   997  0061  1614               	bsf	20,4	;volatile
   998                           
   999                           ;main_S1.c: 64:             _delay((unsigned long)((250)*(4000000/4000000.0)));
  1000  0062  3053               	movlw	83
  1001  0063  00F0               	movwf	??_isr
  1002  0064                     u16_27:
  1003  0064  0BF0               	decfsz	??_isr,f
  1004  0065  2864               	goto	u16_27
  1005  0066                     i1l55:	
  1006                           ;main_S1.c: 65:             while(SSPSTATbits.BF);
  1007                           
  1008  0066  1683               	bsf	3,5	;RP0=1, select bank1
  1009  0067  1303               	bcf	3,6	;RP1=0, select bank1
  1010  0068  1814               	btfsc	20,0	;volatile
  1011  0069  286B               	goto	u12_21
  1012  006A  286C               	goto	u12_20
  1013  006B                     u12_21:
  1014  006B  2866               	goto	i1l55
  1015  006C                     u12_20:
  1016  006C                     i1l53:
  1017                           
  1018                           ;main_S1.c: 68:         PIR1bits.SSPIF = 0;
  1019  006C  1283               	bcf	3,5	;RP0=0, select bank0
  1020  006D  1303               	bcf	3,6	;RP1=0, select bank0
  1021  006E  118C               	bcf	12,3	;volatile
  1022  006F                     i1l58:
  1023  006F  0872               	movf	??_isr+2,w
  1024  0070  008A               	movwf	10
  1025  0071  0E71               	swapf	??_isr+1,w
  1026  0072  0083               	movwf	3
  1027  0073  0EFE               	swapf	btemp,f
  1028  0074  0E7E               	swapf	btemp,w
  1029  0075  0009               	retfie
  1030  0076                     __end_of_isr:
  1031  007E                     btemp	set	126	;btemp
  1032  007E                     wtemp0	set	126
  1033                           
  1034                           	psect	intentry
  1035  0004                     __pintentry:	
  1036                           ;incstack = 0
  1037                           ; Regs used in _isr: [wreg]
  1038                           
  1039  0004                     interrupt_function:
  1040  007E                     saved_w	set	btemp
  1041  0004  00FE               	movwf	btemp
  1042  0005  0E03               	swapf	3,w
  1043  0006  00F1               	movwf	??_isr+1
  1044  0007  080A               	movf	10,w
  1045  0008  00F2               	movwf	??_isr+2
  1046  0009  120A  118A  2815   	ljmp	_isr
  1047                           
  1048                           	psect	config
  1049                           
  1050                           ;Config register CONFIG1 @ 0x2007
  1051                           ;	Oscillator Selection bits
  1052                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1053                           ;	Watchdog Timer Enable bit
  1054                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1055                           ;	Power-up Timer Enable bit
  1056                           ;	PWRTE = OFF, PWRT disabled
  1057                           ;	RE3/MCLR pin function select bit
  1058                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1059                           ;	Code Protection bit
  1060                           ;	CP = OFF, Program memory code protection is disabled
  1061                           ;	Data Code Protection bit
  1062                           ;	CPD = OFF, Data memory code protection is disabled
  1063                           ;	Brown Out Reset Selection bits
  1064                           ;	BOREN = OFF, BOR disabled
  1065                           ;	Internal External Switchover bit
  1066                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1067                           ;	Fail-Safe Clock Monitor Enabled bit
  1068                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1069                           ;	Low Voltage Programming Enable bit
  1070                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1071                           ;	In-Circuit Debugger Mode bit
  1072                           ;	DEBUG = 0x1, unprogrammed default
  1073  2007                     	org	8199
  1074  2007  20D4               	dw	8404
  1075                           
  1076                           ;Config register CONFIG2 @ 0x2008
  1077                           ;	Brown-out Reset Selection bit
  1078                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1079                           ;	Flash Program Memory Self Write Enable bits
  1080                           ;	WRT = OFF, Write protection off
  1081  2008                     	org	8200
  1082  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_readADC

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0      30
                                              5 COMMON     1     1      0
                     _I2C_Slave_Init
                            _initADC
                            _readADC
 ---------------------------------------------------------------------------------
 (1) _readADC                                              2     2      0      15
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _initADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Slave_Init                                       1     1      0      15
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Slave_Init
   _initADC
   _readADC

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       9       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       9      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Aug 06 12:57:00 2021

                      _z 0077              _SSPSTATbits 0094                       _BF 04A0  
                     l81 00CF                       l75 00DE                       l78 00CA  
                     u10 00CE                       u11 00CD                      l136 00BC  
                    l800 0076                      l730 00B2                      l810 0086  
                    l802 007A                      l740 00B9                      l732 00B3  
                    l820 0096                      l812 008C                      l804 007B  
                    l734 00B4                      l750 00DB                      l742 00D0  
                    l814 008D                      l806 0082                      l736 00B5  
                    l728 00A4                      l744 00D6                      l816 008E  
                    l808 0085                      l738 00B6                      l746 00D9  
                    l754 00BE                      l818 0091                      l748 00DA  
                    l756 00C9                      l758 00CE                      _GIE 005F  
                    _isr 0015                     ?_isr 0070                     _PEIE 005E  
                   i1l50 003D                     i1l53 006C                     i1l55 0066  
                   i1l49 004C                     i1l58 006F                     u4_20 001B  
                   u4_21 001A                     u5_20 0020                     u5_21 001F  
                   u6_20 0024                     u6_21 0023                     u7_20 0031  
                   u7_21 0030                     u8_20 0035                     u8_21 0034  
                   u9_20 0043                     u9_21 0042                     _dato 0076  
                   _main 0076                     btemp 007E                     start 000C  
                  ??_isr 0070                    ?_main 0070                    _ANSEL 0188  
                  i1l770 0020                    i1l780 002B                    i1l772 0024  
                  i1l790 0043                    i1l782 0031                    i1l774 0028  
                  i1l766 0015                    i1l792 0050                    i1l784 0035  
                  i1l776 0029                    i1l768 001B                    i1l794 0054  
                  i1l786 003B                    i1l778 002A                    i1l796 005A  
                  i1l788 003C                    i1l798 0061                    u10_20 0050  
                  u10_21 004F                    u11_20 0054                    u11_21 0053  
                  u12_20 006C                    u12_21 006B                    u15_27 0049  
                  u16_27 0064                    _PORTA 0005                    _PORTD 0008  
                  _TRISA 0085                    _SSPIE 0463                    _SSPIF 0063  
        __end_of_initADC 00DF          __end_of_readADC 00D0                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 00A3                   ??_main 0075                   _ADRESH 001E  
                 _ANSELH 0189                   _SSPADD 0093                   _TRISC3 043B  
                 _TRISC4 043C                   _SSPBUF 0013                   _SSPCON 0014  
              ??_initADC 0073                ??_readADC 0073                   saved_w 007E  
__end_of__initialization 0011           __pcstackCOMMON 0070  __size_of_I2C_Slave_Init 001A  
  I2C_Slave_Init@address 0073               __pnvCOMMON 0078               __pmaintext 0076  
             __pintentry 0004                  _SSPCON2 0091                  _SSPSTAT 0094  
                __ptext1 00BD                  __ptext2 00D0                  __ptext3 00A3  
                __ptext4 0015                  _initADC 00D0                  _readADC 00BD  
           __size_of_isr 0061     end_of_initialization 0011           _I2C_Slave_Init 00A3  
              _TRISCbits 0087   __end_of_I2C_Slave_Init 00BD               readADC@pin 0074  
    start_initialization 000F              __end_of_isr 0076          ?_I2C_Slave_Init 0070  
            __pbssCOMMON 0076                ___latbits 0002                 ?_initADC 0070  
               ?_readADC 0070        interrupt_function 0004                 _PIE1bits 008C  
               _PIR1bits 000C               _ADCON0bits 001F               _ADCON1bits 009F  
               _adcValue 0078         __size_of_initADC 000F         __size_of_readADC 0013  
       ??_I2C_Slave_Init 0073            __size_of_main 002D               _INTCONbits 000B  
               intlevel1 0000              _SSPCON2bits 0091               _SSPCONbits 0014  
