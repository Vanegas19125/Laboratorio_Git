

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Sep 02 11:09:07 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    29                           	dabs	1,0x7E,2
    30  0000                     
    31                           ; Version 2.20
    32                           ; Generated 12/02/2020 GMT
    33                           ; 
    34                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F887 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0006                     	;# 
    72  0007                     	;# 
    73  0008                     	;# 
    74  0009                     	;# 
    75  000A                     	;# 
    76  000B                     	;# 
    77  000C                     	;# 
    78  000D                     	;# 
    79  000E                     	;# 
    80  000E                     	;# 
    81  000F                     	;# 
    82  0010                     	;# 
    83  0011                     	;# 
    84  0012                     	;# 
    85  0013                     	;# 
    86  0014                     	;# 
    87  0015                     	;# 
    88  0015                     	;# 
    89  0016                     	;# 
    90  0017                     	;# 
    91  0018                     	;# 
    92  0019                     	;# 
    93  001A                     	;# 
    94  001B                     	;# 
    95  001B                     	;# 
    96  001C                     	;# 
    97  001D                     	;# 
    98  001E                     	;# 
    99  001F                     	;# 
   100  0081                     	;# 
   101  0085                     	;# 
   102  0086                     	;# 
   103  0087                     	;# 
   104  0088                     	;# 
   105  0089                     	;# 
   106  008C                     	;# 
   107  008D                     	;# 
   108  008E                     	;# 
   109  008F                     	;# 
   110  0090                     	;# 
   111  0091                     	;# 
   112  0092                     	;# 
   113  0093                     	;# 
   114  0093                     	;# 
   115  0093                     	;# 
   116  0094                     	;# 
   117  0095                     	;# 
   118  0096                     	;# 
   119  0097                     	;# 
   120  0098                     	;# 
   121  0099                     	;# 
   122  009A                     	;# 
   123  009B                     	;# 
   124  009C                     	;# 
   125  009D                     	;# 
   126  009E                     	;# 
   127  009F                     	;# 
   128  0105                     	;# 
   129  0107                     	;# 
   130  0108                     	;# 
   131  0109                     	;# 
   132  010C                     	;# 
   133  010C                     	;# 
   134  010D                     	;# 
   135  010E                     	;# 
   136  010F                     	;# 
   137  0185                     	;# 
   138  0187                     	;# 
   139  0188                     	;# 
   140  0189                     	;# 
   141  018C                     	;# 
   142  018D                     	;# 
   143  0000                     	;# 
   144  0001                     	;# 
   145  0002                     	;# 
   146  0003                     	;# 
   147  0004                     	;# 
   148  0005                     	;# 
   149  0006                     	;# 
   150  0007                     	;# 
   151  0008                     	;# 
   152  0009                     	;# 
   153  000A                     	;# 
   154  000B                     	;# 
   155  000C                     	;# 
   156  000D                     	;# 
   157  000E                     	;# 
   158  000E                     	;# 
   159  000F                     	;# 
   160  0010                     	;# 
   161  0011                     	;# 
   162  0012                     	;# 
   163  0013                     	;# 
   164  0014                     	;# 
   165  0015                     	;# 
   166  0015                     	;# 
   167  0016                     	;# 
   168  0017                     	;# 
   169  0018                     	;# 
   170  0019                     	;# 
   171  001A                     	;# 
   172  001B                     	;# 
   173  001B                     	;# 
   174  001C                     	;# 
   175  001D                     	;# 
   176  001E                     	;# 
   177  001F                     	;# 
   178  0081                     	;# 
   179  0085                     	;# 
   180  0086                     	;# 
   181  0087                     	;# 
   182  0088                     	;# 
   183  0089                     	;# 
   184  008C                     	;# 
   185  008D                     	;# 
   186  008E                     	;# 
   187  008F                     	;# 
   188  0090                     	;# 
   189  0091                     	;# 
   190  0092                     	;# 
   191  0093                     	;# 
   192  0093                     	;# 
   193  0093                     	;# 
   194  0094                     	;# 
   195  0095                     	;# 
   196  0096                     	;# 
   197  0097                     	;# 
   198  0098                     	;# 
   199  0099                     	;# 
   200  009A                     	;# 
   201  009B                     	;# 
   202  009C                     	;# 
   203  009D                     	;# 
   204  009E                     	;# 
   205  009F                     	;# 
   206  0105                     	;# 
   207  0107                     	;# 
   208  0108                     	;# 
   209  0109                     	;# 
   210  010C                     	;# 
   211  010C                     	;# 
   212  010D                     	;# 
   213  010E                     	;# 
   214  010F                     	;# 
   215  0185                     	;# 
   216  0187                     	;# 
   217  0188                     	;# 
   218  0189                     	;# 
   219  018C                     	;# 
   220  018D                     	;# 
   221  0000                     	;# 
   222  0001                     	;# 
   223  0002                     	;# 
   224  0003                     	;# 
   225  0004                     	;# 
   226  0005                     	;# 
   227  0006                     	;# 
   228  0007                     	;# 
   229  0008                     	;# 
   230  0009                     	;# 
   231  000A                     	;# 
   232  000B                     	;# 
   233  000C                     	;# 
   234  000D                     	;# 
   235  000E                     	;# 
   236  000E                     	;# 
   237  000F                     	;# 
   238  0010                     	;# 
   239  0011                     	;# 
   240  0012                     	;# 
   241  0013                     	;# 
   242  0014                     	;# 
   243  0015                     	;# 
   244  0015                     	;# 
   245  0016                     	;# 
   246  0017                     	;# 
   247  0018                     	;# 
   248  0019                     	;# 
   249  001A                     	;# 
   250  001B                     	;# 
   251  001B                     	;# 
   252  001C                     	;# 
   253  001D                     	;# 
   254  001E                     	;# 
   255  001F                     	;# 
   256  0081                     	;# 
   257  0085                     	;# 
   258  0086                     	;# 
   259  0087                     	;# 
   260  0088                     	;# 
   261  0089                     	;# 
   262  008C                     	;# 
   263  008D                     	;# 
   264  008E                     	;# 
   265  008F                     	;# 
   266  0090                     	;# 
   267  0091                     	;# 
   268  0092                     	;# 
   269  0093                     	;# 
   270  0093                     	;# 
   271  0093                     	;# 
   272  0094                     	;# 
   273  0095                     	;# 
   274  0096                     	;# 
   275  0097                     	;# 
   276  0098                     	;# 
   277  0099                     	;# 
   278  009A                     	;# 
   279  009B                     	;# 
   280  009C                     	;# 
   281  009D                     	;# 
   282  009E                     	;# 
   283  009F                     	;# 
   284  0105                     	;# 
   285  0107                     	;# 
   286  0108                     	;# 
   287  0109                     	;# 
   288  010C                     	;# 
   289  010C                     	;# 
   290  010D                     	;# 
   291  010E                     	;# 
   292  010F                     	;# 
   293  0185                     	;# 
   294  0187                     	;# 
   295  0188                     	;# 
   296  0189                     	;# 
   297  018C                     	;# 
   298  018D                     	;# 
   299  0000                     	;# 
   300  0001                     	;# 
   301  0002                     	;# 
   302  0003                     	;# 
   303  0004                     	;# 
   304  0005                     	;# 
   305  0006                     	;# 
   306  0007                     	;# 
   307  0008                     	;# 
   308  0009                     	;# 
   309  000A                     	;# 
   310  000B                     	;# 
   311  000C                     	;# 
   312  000D                     	;# 
   313  000E                     	;# 
   314  000E                     	;# 
   315  000F                     	;# 
   316  0010                     	;# 
   317  0011                     	;# 
   318  0012                     	;# 
   319  0013                     	;# 
   320  0014                     	;# 
   321  0015                     	;# 
   322  0015                     	;# 
   323  0016                     	;# 
   324  0017                     	;# 
   325  0018                     	;# 
   326  0019                     	;# 
   327  001A                     	;# 
   328  001B                     	;# 
   329  001B                     	;# 
   330  001C                     	;# 
   331  001D                     	;# 
   332  001E                     	;# 
   333  001F                     	;# 
   334  0081                     	;# 
   335  0085                     	;# 
   336  0086                     	;# 
   337  0087                     	;# 
   338  0088                     	;# 
   339  0089                     	;# 
   340  008C                     	;# 
   341  008D                     	;# 
   342  008E                     	;# 
   343  008F                     	;# 
   344  0090                     	;# 
   345  0091                     	;# 
   346  0092                     	;# 
   347  0093                     	;# 
   348  0093                     	;# 
   349  0093                     	;# 
   350  0094                     	;# 
   351  0095                     	;# 
   352  0096                     	;# 
   353  0097                     	;# 
   354  0098                     	;# 
   355  0099                     	;# 
   356  009A                     	;# 
   357  009B                     	;# 
   358  009C                     	;# 
   359  009D                     	;# 
   360  009E                     	;# 
   361  009F                     	;# 
   362  0105                     	;# 
   363  0107                     	;# 
   364  0108                     	;# 
   365  0109                     	;# 
   366  010C                     	;# 
   367  010C                     	;# 
   368  010D                     	;# 
   369  010E                     	;# 
   370  010F                     	;# 
   371  0185                     	;# 
   372  0187                     	;# 
   373  0188                     	;# 
   374  0189                     	;# 
   375  018C                     	;# 
   376  018D                     	;# 
   377  0000                     	;# 
   378  0001                     	;# 
   379  0002                     	;# 
   380  0003                     	;# 
   381  0004                     	;# 
   382  0005                     	;# 
   383  0006                     	;# 
   384  0007                     	;# 
   385  0008                     	;# 
   386  0009                     	;# 
   387  000A                     	;# 
   388  000B                     	;# 
   389  000C                     	;# 
   390  000D                     	;# 
   391  000E                     	;# 
   392  000E                     	;# 
   393  000F                     	;# 
   394  0010                     	;# 
   395  0011                     	;# 
   396  0012                     	;# 
   397  0013                     	;# 
   398  0014                     	;# 
   399  0015                     	;# 
   400  0015                     	;# 
   401  0016                     	;# 
   402  0017                     	;# 
   403  0018                     	;# 
   404  0019                     	;# 
   405  001A                     	;# 
   406  001B                     	;# 
   407  001B                     	;# 
   408  001C                     	;# 
   409  001D                     	;# 
   410  001E                     	;# 
   411  001F                     	;# 
   412  0081                     	;# 
   413  0085                     	;# 
   414  0086                     	;# 
   415  0087                     	;# 
   416  0088                     	;# 
   417  0089                     	;# 
   418  008C                     	;# 
   419  008D                     	;# 
   420  008E                     	;# 
   421  008F                     	;# 
   422  0090                     	;# 
   423  0091                     	;# 
   424  0092                     	;# 
   425  0093                     	;# 
   426  0093                     	;# 
   427  0093                     	;# 
   428  0094                     	;# 
   429  0095                     	;# 
   430  0096                     	;# 
   431  0097                     	;# 
   432  0098                     	;# 
   433  0099                     	;# 
   434  009A                     	;# 
   435  009B                     	;# 
   436  009C                     	;# 
   437  009D                     	;# 
   438  009E                     	;# 
   439  009F                     	;# 
   440  0105                     	;# 
   441  0107                     	;# 
   442  0108                     	;# 
   443  0109                     	;# 
   444  010C                     	;# 
   445  010C                     	;# 
   446  010D                     	;# 
   447  010E                     	;# 
   448  010F                     	;# 
   449  0185                     	;# 
   450  0187                     	;# 
   451  0188                     	;# 
   452  0189                     	;# 
   453  018C                     	;# 
   454  018D                     	;# 
   455  001A                     _RCREG	set	26
   456  000C                     _PIR1bits	set	12
   457  0019                     _TXREG	set	25
   458  0018                     _RCSTAbits	set	24
   459  0013                     _SSPBUF	set	19
   460  0014                     _SSPCON	set	20
   461  0005                     _PORTA	set	5
   462  0048                     _RE0	set	72
   463  004A                     _RE2	set	74
   464  0047                     _RD7	set	71
   465  0046                     _RD6	set	70
   466  0045                     _RD5	set	69
   467  0044                     _RD4	set	68
   468  0043                     _RD3	set	67
   469  0042                     _RD2	set	66
   470  0041                     _RD1	set	65
   471  0040                     _RD0	set	64
   472  0063                     _SSPIF	set	99
   473  005E                     _PEIE	set	94
   474  005F                     _GIE	set	95
   475  0098                     _TXSTAbits	set	152
   476  0099                     _SPBRG	set	153
   477  0091                     _SSPCON2bits	set	145
   478  0087                     _TRISCbits	set	135
   479  0094                     _SSPSTAT	set	148
   480  0093                     _SSPADD	set	147
   481  0091                     _SSPCON2	set	145
   482  0085                     _TRISA	set	133
   483  0086                     _TRISB	set	134
   484  0089                     _TRISE	set	137
   485  0088                     _TRISD	set	136
   486  0463                     _SSPIE	set	1123
   487  043C                     _TRISC4	set	1084
   488  043B                     _TRISC3	set	1083
   489  0189                     _ANSELH	set	393
   490  0188                     _ANSEL	set	392
   491                           
   492                           	psect	strings
   493  0003                     __pstrings:
   494  0003                     stringtab:
   495  0003                     __stringtab:
   496                           
   497                           ;	String table - string pointers are 1 byte each
   498  0003  1BFF               	btfsc	btemp+1,7
   499  0004  280D               	ljmp	stringcode
   500  0005  1383               	bcf	3,7
   501  0006  187F               	btfsc	btemp+1,0
   502  0007  1783               	bsf	3,7
   503  0008  0800               	movf	0,w
   504  0009  0A84               	incf	4,f
   505  000A  1903               	skipnz
   506  000B  0AFF               	incf	btemp+1,f
   507  000C  0008               	return
   508  000D                     stringcode:
   509  000D                     stringdir:
   510  000D  3000               	movlw	high stringdir
   511  000E  008A               	movwf	10
   512  000F  0804               	movf	4,w
   513  0010  0A84               	incf	4,f
   514  0011  0782               	addwf	2,f
   515  0012                     __stringbase:
   516  0012  3400               	retlw	0
   517  0013                     __end_of__stringtab:
   518  0013                     STR_1:
   519  0013  3448               	retlw	72	;'H'
   520  0014  3461               	retlw	97	;'a'
   521  0015  346C               	retlw	108	;'l'
   522  0016  346C               	retlw	108	;'l'
   523  0017  343A               	retlw	58	;':'
   524  0018  3420               	retlw	32	;' '
   525  0019  3454               	retlw	84	;'T'
   526  001A  3465               	retlw	101	;'e'
   527  001B  346D               	retlw	109	;'m'
   528  001C  3470               	retlw	112	;'p'
   529  001D  343A               	retlw	58	;':'
   530  001E  3420               	retlw	32	;' '
   531  001F  3448               	retlw	72	;'H'
   532  0020  3475               	retlw	117	;'u'
   533  0021  346D               	retlw	109	;'m'
   534  0022  343A               	retlw	58	;':'
   535  0023  3400               	retlw	0
   536  0024                     STR_2:
   537  0024  346F               	retlw	111	;'o'
   538  0025  3470               	retlw	112	;'p'
   539  0026  3465               	retlw	101	;'e'
   540  0027  346E               	retlw	110	;'n'
   541  0028  3420               	retlw	32	;' '
   542  0029  3400               	retlw	0
   543  002A                     STR_3:
   544  002A  3463               	retlw	99	;'c'
   545  002B  346C               	retlw	108	;'l'
   546  002C  346F               	retlw	111	;'o'
   547  002D  3473               	retlw	115	;'s'
   548  002E  3465               	retlw	101	;'e'
   549  002F  3400               	retlw	0
   550                           
   551                           	psect	cinit
   552  07ED                     start_initialization:	
   553                           ; #config settings
   554                           
   555  07ED                     __initialization:
   556                           
   557                           ; Clear objects allocated to BANK0
   558  07ED  1283               	bcf	3,5	;RP0=0, select bank0
   559  07EE  1303               	bcf	3,6	;RP1=0, select bank0
   560  07EF  01A0               	clrf	__pbssBANK0& (0+127)
   561  07F0  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   562  07F1  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   563  07F2  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   564  07F3  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   565  07F4  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   566  07F5  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   567  07F6  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   568  07F7  01A8               	clrf	(__pbssBANK0+8)& (0+127)
   569  07F8  01A9               	clrf	(__pbssBANK0+9)& (0+127)
   570  07F9  01AA               	clrf	(__pbssBANK0+10)& (0+127)
   571  07FA  01AB               	clrf	(__pbssBANK0+11)& (0+127)
   572  07FB  01AC               	clrf	(__pbssBANK0+12)& (0+127)
   573  07FC                     end_of_initialization:	
   574                           ;End of C runtime variable initialization code
   575                           
   576  07FC                     __end_of__initialization:
   577  07FC  0183               	clrf	3
   578  07FD  120A  118A  2E97   	ljmp	_main	;jump to C main() function
   579                           
   580                           	psect	bssBANK0
   581  0020                     __pbssBANK0:
   582  0020                     _hum:
   583  0020                     	ds	1
   584  0021                     _temp:
   585  0021                     	ds	1
   586  0022                     _hall:
   587  0022                     	ds	1
   588  0023                     _numero:
   589  0023                     	ds	10
   590                           
   591                           	psect	cstackCOMMON
   592  0070                     __pcstackCOMMON:
   593  0070                     ?_LcdInit:
   594  0070                     ?_I2C_Master_Start:	
   595                           ; 1 bytes @ 0x0
   596                           
   597  0070                     ??_I2C_Master_Start:	
   598                           ; 1 bytes @ 0x0
   599                           
   600  0070                     ?_I2C_Master_Write:	
   601                           ; 1 bytes @ 0x0
   602                           
   603  0070                     ?_I2C_Master_Stop:	
   604                           ; 1 bytes @ 0x0
   605                           
   606  0070                     ??_I2C_Master_Stop:	
   607                           ; 1 bytes @ 0x0
   608                           
   609  0070                     ?_LcdWriteChar:	
   610                           ; 1 bytes @ 0x0
   611                           
   612  0070                     ?_main:	
   613                           ; 1 bytes @ 0x0
   614                           
   615  0070                     ?_I2C_Master_Wait:	
   616                           ; 1 bytes @ 0x0
   617                           
   618  0070                     ??_I2C_Master_Wait:	
   619                           ; 1 bytes @ 0x0
   620                           
   621  0070                     ?_LcdPort:	
   622                           ; 1 bytes @ 0x0
   623                           
   624  0070                     ??_LcdPort:	
   625                           ; 1 bytes @ 0x0
   626                           
   627  0070                     ?_LcdCmd:	
   628                           ; 1 bytes @ 0x0
   629                           
   630  0070                     ?_I2C_Master_Read:	
   631                           ; 1 bytes @ 0x0
   632                           
   633  0070                     ?___lwdiv:	
   634                           ; 2 bytes @ 0x0
   635                           
   636  0070                     ?___lwmod:	
   637                           ; 2 bytes @ 0x0
   638                           
   639  0070                     ?___lldiv:	
   640                           ; 2 bytes @ 0x0
   641                           
   642  0070                     I2C_Master_Write@d:	
   643                           ; 4 bytes @ 0x0
   644                           
   645  0070                     I2C_Master_Read@a:	
   646                           ; 2 bytes @ 0x0
   647                           
   648  0070                     ___lwdiv@divisor:	
   649                           ; 2 bytes @ 0x0
   650                           
   651  0070                     ___lwmod@divisor:	
   652                           ; 2 bytes @ 0x0
   653                           
   654  0070                     ___lldiv@divisor:	
   655                           ; 2 bytes @ 0x0
   656                           
   657                           
   658                           ; 4 bytes @ 0x0
   659  0070                     	ds	1
   660  0071                     LcdPort@value:
   661                           
   662                           ; 1 bytes @ 0x1
   663  0071                     	ds	1
   664  0072                     ??_I2C_Master_Write:
   665  0072                     ??_I2C_Master_Read:	
   666                           ; 1 bytes @ 0x2
   667                           
   668  0072                     ??_LcdWriteChar:	
   669                           ; 1 bytes @ 0x2
   670                           
   671  0072                     ??_LcdCmd:	
   672                           ; 1 bytes @ 0x2
   673                           
   674  0072                     ___lwdiv@dividend:	
   675                           ; 1 bytes @ 0x2
   676                           
   677  0072                     ___lwmod@dividend:	
   678                           ; 2 bytes @ 0x2
   679                           
   680                           
   681                           ; 2 bytes @ 0x2
   682  0072                     	ds	1
   683  0073                     LcdWriteChar@value:
   684                           
   685                           ; 1 bytes @ 0x3
   686  0073                     	ds	1
   687  0074                     ?_LcdWriteString:
   688  0074                     ??___lwdiv:	
   689                           ; 1 bytes @ 0x4
   690                           
   691  0074                     ??___lwmod:	
   692                           ; 1 bytes @ 0x4
   693                           
   694  0074                     LcdCmd@value:	
   695                           ; 1 bytes @ 0x4
   696                           
   697  0074                     I2C_Master_Read@temp:	
   698                           ; 1 bytes @ 0x4
   699                           
   700  0074                     LcdWriteString@value:	
   701                           ; 2 bytes @ 0x4
   702                           
   703  0074                     ___lldiv@dividend:	
   704                           ; 2 bytes @ 0x4
   705                           
   706                           
   707                           ; 4 bytes @ 0x4
   708  0074                     	ds	1
   709  0075                     ??_LcdInit:
   710  0075                     ?_LcdSetCursor:	
   711                           ; 1 bytes @ 0x5
   712                           
   713  0075                     LcdSetCursor@column:	
   714                           ; 1 bytes @ 0x5
   715                           
   716  0075                     ___lwmod@counter:	
   717                           ; 1 bytes @ 0x5
   718                           
   719  0075                     ___lwdiv@quotient:	
   720                           ; 1 bytes @ 0x5
   721                           
   722                           
   723                           ; 2 bytes @ 0x5
   724  0075                     	ds	1
   725  0076                     ??_LcdSetCursor:
   726  0076                     ??_LcdWriteString:	
   727                           ; 1 bytes @ 0x6
   728                           
   729                           
   730                           ; 1 bytes @ 0x6
   731  0076                     	ds	1
   732  0077                     ___lwdiv@counter:
   733                           
   734                           ; 1 bytes @ 0x7
   735  0077                     	ds	1
   736  0078                     ?_utoa:
   737  0078                     ??___lldiv:	
   738                           ; 1 bytes @ 0x8
   739                           
   740  0078                     LcdSetCursor@row:	
   741                           ; 1 bytes @ 0x8
   742                           
   743  0078                     utoa@val:	
   744                           ; 1 bytes @ 0x8
   745                           
   746                           
   747                           ; 2 bytes @ 0x8
   748  0078                     	ds	1
   749  0079                     LcdWriteString@i:
   750  0079                     ___lldiv@quotient:	
   751                           ; 2 bytes @ 0x9
   752                           
   753                           
   754                           ; 4 bytes @ 0x9
   755  0079                     	ds	1
   756  007A                     utoa@base:
   757                           
   758                           ; 2 bytes @ 0xA
   759  007A                     	ds	2
   760  007C                     ??_utoa:
   761                           
   762                           ; 1 bytes @ 0xC
   763  007C                     	ds	1
   764  007D                     ??_itoa:
   765  007D                     ___lldiv@counter:	
   766                           ; 1 bytes @ 0xD
   767                           
   768                           
   769                           ; 1 bytes @ 0xD
   770  007D                     	ds	1
   771                           
   772                           	psect	cstackBANK0
   773  002D                     __pcstackBANK0:
   774  002D                     ?_UARTInit:
   775  002D                     ?_I2C_Master_Init:	
   776                           ; 1 bytes @ 0x0
   777                           
   778  002D                     utoa@v:	
   779                           ; 1 bytes @ 0x0
   780                           
   781  002D                     I2C_Master_Init@c:	
   782                           ; 2 bytes @ 0x0
   783                           
   784  002D                     UARTInit@baud_rate:	
   785                           ; 4 bytes @ 0x0
   786                           
   787                           
   788                           ; 4 bytes @ 0x0
   789  002D                     	ds	2
   790  002F                     utoa@c:
   791                           
   792                           ; 1 bytes @ 0x2
   793  002F                     	ds	1
   794  0030                     utoa@buf:
   795                           
   796                           ; 1 bytes @ 0x3
   797  0030                     	ds	1
   798  0031                     ??_I2C_Master_Init:
   799  0031                     ?_itoa:	
   800                           ; 1 bytes @ 0x4
   801                           
   802  0031                     UARTInit@BRGH:	
   803                           ; 1 bytes @ 0x4
   804                           
   805  0031                     itoa@val:	
   806                           ; 1 bytes @ 0x4
   807                           
   808                           
   809                           ; 2 bytes @ 0x4
   810  0031                     	ds	1
   811  0032                     ??_UARTInit:
   812                           
   813                           ; 1 bytes @ 0x5
   814  0032                     	ds	1
   815  0033                     itoa@base:
   816                           
   817                           ; 2 bytes @ 0x6
   818  0033                     	ds	3
   819  0036                     itoa@buf:
   820                           
   821                           ; 1 bytes @ 0x9
   822  0036                     	ds	1
   823  0037                     ??_main:
   824                           
   825                           ; 1 bytes @ 0xA
   826  0037                     	ds	2
   827                           
   828                           	psect	maintext
   829  0697                     __pmaintext:	
   830 ;;
   831 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   832 ;;
   833 ;; *************** function _main *****************
   834 ;; Defined at:
   835 ;;		line 41 in file "MasterMain.c"
   836 ;; Parameters:    Size  Location     Type
   837 ;;		None
   838 ;; Auto vars:     Size  Location     Type
   839 ;;		None
   840 ;; Return value:  Size  Location     Type
   841 ;;                  1    wreg      void 
   842 ;; Registers used:
   843 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   844 ;; Tracked objects:
   845 ;;		On entry : B00/0
   846 ;;		On exit  : 0/0
   847 ;;		Unchanged: 0/0
   848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   849 ;;      Params:         0       0       0       0       0
   850 ;;      Locals:         0       0       0       0       0
   851 ;;      Temps:          0       2       0       0       0
   852 ;;      Totals:         0       2       0       0       0
   853 ;;Total ram usage:        2 bytes
   854 ;; Hardware stack levels required when called:    3
   855 ;; This function calls:
   856 ;;		_I2C_Master_Init
   857 ;;		_I2C_Master_Read
   858 ;;		_I2C_Master_Start
   859 ;;		_I2C_Master_Stop
   860 ;;		_I2C_Master_Write
   861 ;;		_LcdInit
   862 ;;		_LcdSetCursor
   863 ;;		_LcdWriteChar
   864 ;;		_LcdWriteString
   865 ;;		_UARTInit
   866 ;;		_itoa
   867 ;; This function is called by:
   868 ;;		Startup code after reset
   869 ;; This function uses a non-reentrant model
   870 ;;
   871                           
   872                           
   873                           ;psect for function _main
   874  0697                     _main:
   875  0697                     l1512:	
   876                           ;incstack = 0
   877                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   878                           
   879                           
   880                           ;MasterMain.c: 42:     ANSEL = 0;
   881  0697  1683               	bsf	3,5	;RP0=1, select bank3
   882  0698  1703               	bsf	3,6	;RP1=1, select bank3
   883  0699  0188               	clrf	8	;volatile
   884                           
   885                           ;MasterMain.c: 43:     ANSELH = 0;
   886  069A  0189               	clrf	9	;volatile
   887                           
   888                           ;MasterMain.c: 45:     TRISD = 0;
   889  069B  1683               	bsf	3,5	;RP0=1, select bank1
   890  069C  1303               	bcf	3,6	;RP1=0, select bank1
   891  069D  0188               	clrf	8	;volatile
   892                           
   893                           ;MasterMain.c: 46:     TRISE = 0;
   894  069E  0189               	clrf	9	;volatile
   895  069F                     l1514:
   896                           
   897                           ;MasterMain.c: 47:     TRISB = 8;
   898  069F  3008               	movlw	8
   899  06A0  0086               	movwf	6	;volatile
   900  06A1                     l1516:
   901                           
   902                           ;MasterMain.c: 48:     TRISA = 0;
   903  06A1  0185               	clrf	5	;volatile
   904  06A2                     l1518:
   905                           
   906                           ;MasterMain.c: 51:     PORTA = 0;
   907  06A2  1283               	bcf	3,5	;RP0=0, select bank0
   908  06A3  1303               	bcf	3,6	;RP1=0, select bank0
   909  06A4  0185               	clrf	5	;volatile
   910  06A5                     l1520:
   911                           
   912                           ;MasterMain.c: 52:     LcdInit();
   913  06A5  120A  118A  2481  120A  118A  	fcall	_LcdInit
   914  06AA                     l1522:
   915                           
   916                           ;MasterMain.c: 53:     UARTInit(9600,1);
   917  06AA  3000               	movlw	0
   918  06AB  1283               	bcf	3,5	;RP0=0, select bank0
   919  06AC  1303               	bcf	3,6	;RP1=0, select bank0
   920  06AD  00B0               	movwf	UARTInit@baud_rate+3
   921  06AE  3000               	movlw	0
   922  06AF  00AF               	movwf	UARTInit@baud_rate+2
   923  06B0  3025               	movlw	37
   924  06B1  00AE               	movwf	UARTInit@baud_rate+1
   925  06B2  3080               	movlw	128
   926  06B3  00AD               	movwf	UARTInit@baud_rate
   927  06B4  01B1               	clrf	UARTInit@BRGH
   928  06B5  0AB1               	incf	UARTInit@BRGH,f
   929  06B6  120A  118A  252C  120A  118A  	fcall	_UARTInit
   930  06BB                     l1524:
   931                           
   932                           ;MasterMain.c: 54:     I2C_Master_Init(100000);
   933  06BB  3000               	movlw	0
   934  06BC  1283               	bcf	3,5	;RP0=0, select bank0
   935  06BD  1303               	bcf	3,6	;RP1=0, select bank0
   936  06BE  00B0               	movwf	I2C_Master_Init@c+3
   937  06BF  3001               	movlw	1
   938  06C0  00AF               	movwf	I2C_Master_Init@c+2
   939  06C1  3086               	movlw	134
   940  06C2  00AE               	movwf	I2C_Master_Init@c+1
   941  06C3  30A0               	movlw	160
   942  06C4  00AD               	movwf	I2C_Master_Init@c
   943  06C5  120A  118A  2389  120A  118A  	fcall	_I2C_Master_Init
   944  06CA                     l1526:
   945                           
   946                           ;MasterMain.c: 56:     LcdSetCursor(1,1);
   947  06CA  01F5               	clrf	LcdSetCursor@column
   948  06CB  0AF5               	incf	LcdSetCursor@column,f
   949  06CC  3001               	movlw	1
   950  06CD  120A  118A  2312  120A  118A  	fcall	_LcdSetCursor
   951  06D2                     l1528:
   952                           
   953                           ;MasterMain.c: 57:     LcdWriteString("Hall: Temp: Hum:");
   954  06D2  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   955  06D3  00F4               	movwf	LcdWriteString@value
   956  06D4  3080               	movlw	128
   957  06D5  00F5               	movwf	LcdWriteString@value+1
   958  06D6  120A  118A  23FB  120A  118A  	fcall	_LcdWriteString
   959  06DB                     l1530:
   960                           
   961                           ;MasterMain.c: 59:         I2C_Master_Start();
   962  06DB  120A  118A  22BA  120A  118A  	fcall	_I2C_Master_Start
   963  06E0                     l1532:
   964                           
   965                           ;MasterMain.c: 60:         I2C_Master_Write(0b00000011);
   966  06E0  3003               	movlw	3
   967  06E1  00F0               	movwf	I2C_Master_Write@d
   968  06E2  3000               	movlw	0
   969  06E3  00F1               	movwf	I2C_Master_Write@d+1
   970  06E4  120A  118A  22CC  120A  118A  	fcall	_I2C_Master_Write
   971  06E9                     l1534:
   972                           
   973                           ;MasterMain.c: 61:         hall = I2C_Master_Read(0);
   974  06E9  3000               	movlw	0
   975  06EA  00F0               	movwf	I2C_Master_Read@a
   976  06EB  00F1               	movwf	I2C_Master_Read@a+1
   977  06EC  120A  118A  235B  120A  118A  	fcall	_I2C_Master_Read
   978  06F1  0870               	movf	?_I2C_Master_Read,w
   979  06F2  1283               	bcf	3,5	;RP0=0, select bank0
   980  06F3  1303               	bcf	3,6	;RP1=0, select bank0
   981  06F4  00B7               	movwf	??_main
   982  06F5  0837               	movf	??_main,w
   983  06F6  00A2               	movwf	_hall
   984  06F7                     l1536:
   985                           
   986                           ;MasterMain.c: 62:         I2C_Master_Stop();
   987  06F7  120A  118A  22C3  120A  118A  	fcall	_I2C_Master_Stop
   988  06FC                     l1538:
   989                           
   990                           ;MasterMain.c: 63:         _delay((unsigned long)((10)*(4000000/4000.0)));
   991  06FC  300D               	movlw	13
   992  06FD  1283               	bcf	3,5	;RP0=0, select bank0
   993  06FE  1303               	bcf	3,6	;RP1=0, select bank0
   994  06FF  00B8               	movwf	??_main+1
   995  0700  30FB               	movlw	251
   996  0701  00B7               	movwf	??_main
   997  0702                     u1237:
   998  0702  0BB7               	decfsz	??_main,f
   999  0703  2F02               	goto	u1237
  1000  0704  0BB8               	decfsz	??_main+1,f
  1001  0705  2F02               	goto	u1237
  1002  0706                     l1540:
  1003                           
  1004                           ;MasterMain.c: 64:         LcdSetCursor(2,1);
  1005  0706  01F5               	clrf	LcdSetCursor@column
  1006  0707  0AF5               	incf	LcdSetCursor@column,f
  1007  0708  3002               	movlw	2
  1008  0709  120A  118A  2312  120A  118A  	fcall	_LcdSetCursor
  1009  070E                     l1542:
  1010                           
  1011                           ;MasterMain.c: 65:         PORTA = hall;
  1012  070E  1283               	bcf	3,5	;RP0=0, select bank0
  1013  070F  1303               	bcf	3,6	;RP1=0, select bank0
  1014  0710  0822               	movf	_hall,w
  1015  0711  0085               	movwf	5	;volatile
  1016                           
  1017                           ;MasterMain.c: 66:         switch(hall){
  1018  0712  2F27               	goto	l1550
  1019  0713                     l1544:
  1020                           
  1021                           ;MasterMain.c: 68:                 LcdWriteString("open ");
  1022  0713  3012               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1023  0714  00F4               	movwf	LcdWriteString@value
  1024  0715  3080               	movlw	128
  1025  0716  00F5               	movwf	LcdWriteString@value+1
  1026  0717  120A  118A  23FB  120A  118A  	fcall	_LcdWriteString
  1027                           
  1028                           ;MasterMain.c: 69:                 break;
  1029  071C  2F37               	goto	l1552
  1030  071D                     l1546:
  1031                           
  1032                           ;MasterMain.c: 71:                 LcdWriteString("close");
  1033  071D  3018               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1034  071E  00F4               	movwf	LcdWriteString@value
  1035  071F  3080               	movlw	128
  1036  0720  00F5               	movwf	LcdWriteString@value+1
  1037  0721  120A  118A  23FB  120A  118A  	fcall	_LcdWriteString
  1038                           
  1039                           ;MasterMain.c: 72:                 break;
  1040  0726  2F37               	goto	l1552
  1041  0727                     l1550:
  1042  0727  0822               	movf	_hall,w
  1043  0728  00B7               	movwf	??_main
  1044  0729  01B8               	clrf	??_main+1
  1045                           
  1046                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1047                           ; Switch size 1, requested type "simple"
  1048                           ; Number of cases is 1, Range of values is 0 to 0
  1049                           ; switch strategies available:
  1050                           ; Name         Instructions Cycles
  1051                           ; simple_byte            4     3 (average)
  1052                           ; direct_byte           11     8 (fixed)
  1053                           ; jumptable            260     6 (fixed)
  1054                           ;	Chosen strategy is simple_byte
  1055  072A  0838               	movf	??_main+1,w
  1056  072B  3A00               	xorlw	0	; case 0
  1057  072C  1903               	skipnz
  1058  072D  2F2F               	goto	l1650
  1059  072E  2F37               	goto	l1552
  1060  072F                     l1650:
  1061                           
  1062                           ; Switch size 1, requested type "simple"
  1063                           ; Number of cases is 2, Range of values is 0 to 1
  1064                           ; switch strategies available:
  1065                           ; Name         Instructions Cycles
  1066                           ; simple_byte            7     4 (average)
  1067                           ; direct_byte           14     8 (fixed)
  1068                           ; jumptable            260     6 (fixed)
  1069                           ;	Chosen strategy is simple_byte
  1070  072F  0837               	movf	??_main,w
  1071  0730  3A00               	xorlw	0	; case 0
  1072  0731  1903               	skipnz
  1073  0732  2F13               	goto	l1544
  1074  0733  3A01               	xorlw	1	; case 1
  1075  0734  1903               	skipnz
  1076  0735  2F1D               	goto	l1546
  1077  0736  2F37               	goto	l1552
  1078  0737                     l1552:
  1079                           
  1080                           ;MasterMain.c: 75:         I2C_Master_Start();
  1081  0737  120A  118A  22BA  120A  118A  	fcall	_I2C_Master_Start
  1082                           
  1083                           ;MasterMain.c: 76:         I2C_Master_Write(0b00000001);
  1084  073C  3001               	movlw	1
  1085  073D  00F0               	movwf	I2C_Master_Write@d
  1086  073E  3000               	movlw	0
  1087  073F  00F1               	movwf	I2C_Master_Write@d+1
  1088  0740  120A  118A  22CC  120A  118A  	fcall	_I2C_Master_Write
  1089                           
  1090                           ;MasterMain.c: 77:        temp = I2C_Master_Read(0);
  1091  0745  3000               	movlw	0
  1092  0746  00F0               	movwf	I2C_Master_Read@a
  1093  0747  00F1               	movwf	I2C_Master_Read@a+1
  1094  0748  120A  118A  235B  120A  118A  	fcall	_I2C_Master_Read
  1095  074D  0870               	movf	?_I2C_Master_Read,w
  1096  074E  1283               	bcf	3,5	;RP0=0, select bank0
  1097  074F  1303               	bcf	3,6	;RP1=0, select bank0
  1098  0750  00B7               	movwf	??_main
  1099  0751  0837               	movf	??_main,w
  1100  0752  00A1               	movwf	_temp
  1101                           
  1102                           ;MasterMain.c: 78:         I2C_Master_Stop();
  1103  0753  120A  118A  22C3  120A  118A  	fcall	_I2C_Master_Stop
  1104  0758                     l1554:
  1105                           
  1106                           ;MasterMain.c: 79:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1107  0758  300D               	movlw	13
  1108  0759  1283               	bcf	3,5	;RP0=0, select bank0
  1109  075A  1303               	bcf	3,6	;RP1=0, select bank0
  1110  075B  00B8               	movwf	??_main+1
  1111  075C  30FB               	movlw	251
  1112  075D  00B7               	movwf	??_main
  1113  075E                     u1247:
  1114  075E  0BB7               	decfsz	??_main,f
  1115  075F  2F5E               	goto	u1247
  1116  0760  0BB8               	decfsz	??_main+1,f
  1117  0761  2F5E               	goto	u1247
  1118  0762                     l1556:
  1119                           
  1120                           ;MasterMain.c: 81:         I2C_Master_Start();
  1121  0762  120A  118A  22BA  120A  118A  	fcall	_I2C_Master_Start
  1122  0767                     l1558:
  1123                           
  1124                           ;MasterMain.c: 82:         I2C_Master_Write(0b00000001);
  1125  0767  3001               	movlw	1
  1126  0768  00F0               	movwf	I2C_Master_Write@d
  1127  0769  3000               	movlw	0
  1128  076A  00F1               	movwf	I2C_Master_Write@d+1
  1129  076B  120A  118A  22CC  120A  118A  	fcall	_I2C_Master_Write
  1130  0770                     l1560:
  1131                           
  1132                           ;MasterMain.c: 83:         hum = I2C_Master_Read(0);
  1133  0770  3000               	movlw	0
  1134  0771  00F0               	movwf	I2C_Master_Read@a
  1135  0772  00F1               	movwf	I2C_Master_Read@a+1
  1136  0773  120A  118A  235B  120A  118A  	fcall	_I2C_Master_Read
  1137  0778  0870               	movf	?_I2C_Master_Read,w
  1138  0779  1283               	bcf	3,5	;RP0=0, select bank0
  1139  077A  1303               	bcf	3,6	;RP1=0, select bank0
  1140  077B  00B7               	movwf	??_main
  1141  077C  0837               	movf	??_main,w
  1142  077D  00A0               	movwf	_hum
  1143  077E                     l1562:
  1144                           
  1145                           ;MasterMain.c: 84:         I2C_Master_Stop();
  1146  077E  120A  118A  22C3  120A  118A  	fcall	_I2C_Master_Stop
  1147  0783                     l1564:
  1148                           
  1149                           ;MasterMain.c: 85:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1150  0783  300D               	movlw	13
  1151  0784  1283               	bcf	3,5	;RP0=0, select bank0
  1152  0785  1303               	bcf	3,6	;RP1=0, select bank0
  1153  0786  00B8               	movwf	??_main+1
  1154  0787  30FB               	movlw	251
  1155  0788  00B7               	movwf	??_main
  1156  0789                     u1257:
  1157  0789  0BB7               	decfsz	??_main,f
  1158  078A  2F89               	goto	u1257
  1159  078B  0BB8               	decfsz	??_main+1,f
  1160  078C  2F89               	goto	u1257
  1161  078D                     l1566:
  1162                           
  1163                           ;MasterMain.c: 89:         itoa(numero,temp,10);
  1164  078D  1283               	bcf	3,5	;RP0=0, select bank0
  1165  078E  1303               	bcf	3,6	;RP1=0, select bank0
  1166  078F  0821               	movf	_temp,w
  1167  0790  00B7               	movwf	??_main
  1168  0791  01B8               	clrf	??_main+1
  1169  0792  0837               	movf	??_main,w
  1170  0793  00B1               	movwf	itoa@val
  1171  0794  0838               	movf	??_main+1,w
  1172  0795  00B2               	movwf	itoa@val+1
  1173  0796  300A               	movlw	10
  1174  0797  00B3               	movwf	itoa@base
  1175  0798  3000               	movlw	0
  1176  0799  00B4               	movwf	itoa@base+1
  1177  079A  3023               	movlw	(low (_numero| 0))& (0+255)
  1178  079B  120A  118A  2335  120A  118A  	fcall	_itoa
  1179  07A0                     l1568:
  1180                           
  1181                           ;MasterMain.c: 90:         LcdWriteChar(' ');
  1182  07A0  3020               	movlw	32
  1183  07A1  120A  118A  22E3  120A  118A  	fcall	_LcdWriteChar
  1184  07A6                     l1570:
  1185                           
  1186                           ;MasterMain.c: 91:         LcdWriteChar(' ');
  1187  07A6  3020               	movlw	32
  1188  07A7  120A  118A  22E3  120A  118A  	fcall	_LcdWriteChar
  1189  07AC                     l1572:
  1190                           
  1191                           ;MasterMain.c: 92:         LcdWriteString(numero);
  1192  07AC  3023               	movlw	(low (_numero| 0))& (0+255)
  1193  07AD  00F4               	movwf	LcdWriteString@value
  1194  07AE  3000               	movlw	0
  1195  07AF  00F5               	movwf	LcdWriteString@value+1
  1196  07B0  120A  118A  23FB  120A  118A  	fcall	_LcdWriteString
  1197  07B5                     l1574:
  1198                           
  1199                           ;MasterMain.c: 93:         LcdWriteChar(0xDF);
  1200  07B5  30DF               	movlw	223
  1201  07B6  120A  118A  22E3  120A  118A  	fcall	_LcdWriteChar
  1202  07BB                     l1576:
  1203                           
  1204                           ;MasterMain.c: 94:         LcdWriteChar('C');
  1205  07BB  3043               	movlw	67
  1206  07BC  120A  118A  22E3  120A  118A  	fcall	_LcdWriteChar
  1207  07C1                     l1578:
  1208                           
  1209                           ;MasterMain.c: 97:         itoa(numero,hum,10);
  1210  07C1  1283               	bcf	3,5	;RP0=0, select bank0
  1211  07C2  1303               	bcf	3,6	;RP1=0, select bank0
  1212  07C3  0820               	movf	_hum,w
  1213  07C4  00B7               	movwf	??_main
  1214  07C5  01B8               	clrf	??_main+1
  1215  07C6  0837               	movf	??_main,w
  1216  07C7  00B1               	movwf	itoa@val
  1217  07C8  0838               	movf	??_main+1,w
  1218  07C9  00B2               	movwf	itoa@val+1
  1219  07CA  300A               	movlw	10
  1220  07CB  00B3               	movwf	itoa@base
  1221  07CC  3000               	movlw	0
  1222  07CD  00B4               	movwf	itoa@base+1
  1223  07CE  3023               	movlw	(low (_numero| 0))& (0+255)
  1224  07CF  120A  118A  2335  120A  118A  	fcall	_itoa
  1225  07D4                     l1580:
  1226                           
  1227                           ;MasterMain.c: 99:         LcdWriteChar(' ');
  1228  07D4  3020               	movlw	32
  1229  07D5  120A  118A  22E3  120A  118A  	fcall	_LcdWriteChar
  1230                           
  1231                           ;MasterMain.c: 100:         LcdWriteString(numero);
  1232  07DA  3023               	movlw	(low (_numero| 0))& (0+255)
  1233  07DB  00F4               	movwf	LcdWriteString@value
  1234  07DC  3000               	movlw	0
  1235  07DD  00F5               	movwf	LcdWriteString@value+1
  1236  07DE  120A  118A  23FB  120A  118A  	fcall	_LcdWriteString
  1237  07E3                     l1582:
  1238                           
  1239                           ;MasterMain.c: 101:         LcdWriteChar('%');
  1240  07E3  3025               	movlw	37
  1241  07E4  120A  118A  22E3  120A  118A  	fcall	_LcdWriteChar
  1242  07E9  2EDB               	goto	l1530
  1243  07EA  120A  118A  2800   	ljmp	start
  1244  07ED                     __end_of_main:
  1245                           
  1246                           	psect	text1
  1247  0335                     __ptext1:	
  1248 ;; *************** function _itoa *****************
  1249 ;; Defined at:
  1250 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\itoa.c"
  1251 ;; Parameters:    Size  Location     Type
  1252 ;;  buf             1    wreg     PTR unsigned char 
  1253 ;;		 -> numero(10), 
  1254 ;;  val             2    4[BANK0 ] int 
  1255 ;;  base            2    6[BANK0 ] int 
  1256 ;; Auto vars:     Size  Location     Type
  1257 ;;  buf             1    9[BANK0 ] PTR unsigned char 
  1258 ;;		 -> numero(10), 
  1259 ;;  cp              1    0        PTR unsigned char 
  1260 ;;		 -> numero(10), 
  1261 ;; Return value:  Size  Location     Type
  1262 ;;                  1    wreg      PTR unsigned char 
  1263 ;; Registers used:
  1264 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1265 ;; Tracked objects:
  1266 ;;		On entry : 0/0
  1267 ;;		On exit  : 0/0
  1268 ;;		Unchanged: 0/0
  1269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1270 ;;      Params:         0       4       0       0       0
  1271 ;;      Locals:         0       2       0       0       0
  1272 ;;      Temps:          1       0       0       0       0
  1273 ;;      Totals:         1       6       0       0       0
  1274 ;;Total ram usage:        7 bytes
  1275 ;; Hardware stack levels used:    1
  1276 ;; Hardware stack levels required when called:    2
  1277 ;; This function calls:
  1278 ;;		_utoa
  1279 ;; This function is called by:
  1280 ;;		_main
  1281 ;; This function uses a non-reentrant model
  1282 ;;
  1283                           
  1284                           
  1285                           ;psect for function _itoa
  1286  0335                     _itoa:
  1287                           
  1288                           ;incstack = 0
  1289                           ; Regs used in _itoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1290                           ;itoa@buf stored from wreg
  1291  0335  1283               	bcf	3,5	;RP0=0, select bank0
  1292  0336  1303               	bcf	3,6	;RP1=0, select bank0
  1293  0337  00B6               	movwf	itoa@buf
  1294  0338                     l1498:
  1295  0338                     l1500:
  1296  0338  1FB2               	btfss	itoa@val+1,7
  1297  0339  2B3B               	goto	u1221
  1298  033A  2B3C               	goto	u1220
  1299  033B                     u1221:
  1300  033B  2B4C               	goto	l1508
  1301  033C                     u1220:
  1302  033C                     l1502:
  1303  033C  302D               	movlw	45
  1304  033D  00FD               	movwf	??_itoa
  1305  033E  0836               	movf	itoa@buf,w
  1306  033F  0084               	movwf	4
  1307  0340  087D               	movf	??_itoa,w
  1308  0341  1383               	bcf	3,7	;select IRP bank0
  1309  0342  0080               	movwf	0
  1310  0343                     l1504:
  1311  0343  3001               	movlw	1
  1312  0344  00FD               	movwf	??_itoa
  1313  0345  087D               	movf	??_itoa,w
  1314  0346  07B6               	addwf	itoa@buf,f
  1315  0347                     l1506:
  1316  0347  09B1               	comf	itoa@val,f
  1317  0348  09B2               	comf	itoa@val+1,f
  1318  0349  0AB1               	incf	itoa@val,f
  1319  034A  1903               	skipnz
  1320  034B  0AB2               	incf	itoa@val+1,f
  1321  034C                     l1508:
  1322  034C  0832               	movf	itoa@val+1,w
  1323  034D  00F9               	movwf	utoa@val+1
  1324  034E  0831               	movf	itoa@val,w
  1325  034F  00F8               	movwf	utoa@val
  1326  0350  0834               	movf	itoa@base+1,w
  1327  0351  00FB               	movwf	utoa@base+1
  1328  0352  0833               	movf	itoa@base,w
  1329  0353  00FA               	movwf	utoa@base
  1330  0354  0836               	movf	itoa@buf,w
  1331  0355  120A  118A  259B  120A  118A  	fcall	_utoa
  1332  035A                     l760:
  1333  035A  0008               	return
  1334  035B                     __end_of_itoa:
  1335                           
  1336                           	psect	text2
  1337  059B                     __ptext2:	
  1338 ;; *************** function _utoa *****************
  1339 ;; Defined at:
  1340 ;;		line 17 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\itoa.c"
  1341 ;; Parameters:    Size  Location     Type
  1342 ;;  buf             1    wreg     PTR unsigned char 
  1343 ;;		 -> numero(10), 
  1344 ;;  val             2    8[COMMON] unsigned int 
  1345 ;;  base            2   10[COMMON] int 
  1346 ;; Auto vars:     Size  Location     Type
  1347 ;;  buf             1    3[BANK0 ] PTR unsigned char 
  1348 ;;		 -> numero(10), 
  1349 ;;  v               2    0[BANK0 ] unsigned int 
  1350 ;;  c               1    2[BANK0 ] unsigned char 
  1351 ;; Return value:  Size  Location     Type
  1352 ;;                  1    wreg      PTR unsigned char 
  1353 ;; Registers used:
  1354 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1355 ;; Tracked objects:
  1356 ;;		On entry : 0/0
  1357 ;;		On exit  : 0/0
  1358 ;;		Unchanged: 0/0
  1359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1360 ;;      Params:         4       0       0       0       0
  1361 ;;      Locals:         0       4       0       0       0
  1362 ;;      Temps:          1       0       0       0       0
  1363 ;;      Totals:         5       4       0       0       0
  1364 ;;Total ram usage:        9 bytes
  1365 ;; Hardware stack levels used:    1
  1366 ;; Hardware stack levels required when called:    1
  1367 ;; This function calls:
  1368 ;;		___lwdiv
  1369 ;;		___lwmod
  1370 ;; This function is called by:
  1371 ;;		_itoa
  1372 ;; This function uses a non-reentrant model
  1373 ;;
  1374                           
  1375                           
  1376                           ;psect for function _utoa
  1377  059B                     _utoa:
  1378                           
  1379                           ;incstack = 0
  1380                           ; Regs used in _utoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1381                           ;utoa@buf stored from wreg
  1382  059B  1283               	bcf	3,5	;RP0=0, select bank0
  1383  059C  1303               	bcf	3,6	;RP1=0, select bank0
  1384  059D  00B0               	movwf	utoa@buf
  1385  059E                     l1366:
  1386  059E  0879               	movf	utoa@val+1,w
  1387  059F  00AE               	movwf	utoa@v+1
  1388  05A0  0878               	movf	utoa@val,w
  1389  05A1  00AD               	movwf	utoa@v
  1390  05A2                     l1368:
  1391  05A2  087B               	movf	utoa@base+1,w
  1392  05A3  00F1               	movwf	___lwdiv@divisor+1
  1393  05A4  087A               	movf	utoa@base,w
  1394  05A5  00F0               	movwf	___lwdiv@divisor
  1395  05A6  082E               	movf	utoa@v+1,w
  1396  05A7  00F3               	movwf	___lwdiv@dividend+1
  1397  05A8  082D               	movf	utoa@v,w
  1398  05A9  00F2               	movwf	___lwdiv@dividend
  1399  05AA  120A  118A  243D  120A  118A  	fcall	___lwdiv
  1400  05AF  0871               	movf	?___lwdiv+1,w
  1401  05B0  1283               	bcf	3,5	;RP0=0, select bank0
  1402  05B1  1303               	bcf	3,6	;RP1=0, select bank0
  1403  05B2  00AE               	movwf	utoa@v+1
  1404  05B3  0870               	movf	?___lwdiv,w
  1405  05B4  00AD               	movwf	utoa@v
  1406  05B5                     l1370:
  1407  05B5  3001               	movlw	1
  1408  05B6  00FC               	movwf	??_utoa
  1409  05B7  087C               	movf	??_utoa,w
  1410  05B8  07B0               	addwf	utoa@buf,f
  1411  05B9                     l1372:
  1412  05B9  082D               	movf	utoa@v,w
  1413  05BA  042E               	iorwf	utoa@v+1,w
  1414  05BB  1D03               	btfss	3,2
  1415  05BC  2DBE               	goto	u1111
  1416  05BD  2DBF               	goto	u1110
  1417  05BE                     u1111:
  1418  05BE  2DA2               	goto	l1368
  1419  05BF                     u1110:
  1420  05BF                     l1374:
  1421  05BF  0830               	movf	utoa@buf,w
  1422  05C0  0084               	movwf	4
  1423  05C1  1383               	bcf	3,7	;select IRP bank0
  1424  05C2  0180               	clrf	0
  1425  05C3                     l1376:
  1426  05C3  3001               	movlw	1
  1427  05C4  02B0               	subwf	utoa@buf,f
  1428  05C5                     l1378:
  1429  05C5  087B               	movf	utoa@base+1,w
  1430  05C6  00F1               	movwf	___lwmod@divisor+1
  1431  05C7  087A               	movf	utoa@base,w
  1432  05C8  00F0               	movwf	___lwmod@divisor
  1433  05C9  0879               	movf	utoa@val+1,w
  1434  05CA  00F3               	movwf	___lwmod@dividend+1
  1435  05CB  0878               	movf	utoa@val,w
  1436  05CC  00F2               	movwf	___lwmod@dividend
  1437  05CD  120A  118A  23C1  120A  118A  	fcall	___lwmod
  1438  05D2  0870               	movf	?___lwmod,w
  1439  05D3  00FC               	movwf	??_utoa
  1440  05D4  087C               	movf	??_utoa,w
  1441  05D5  1283               	bcf	3,5	;RP0=0, select bank0
  1442  05D6  1303               	bcf	3,6	;RP1=0, select bank0
  1443  05D7  00AF               	movwf	utoa@c
  1444  05D8                     l1380:
  1445  05D8  087B               	movf	utoa@base+1,w
  1446  05D9  00F1               	movwf	___lwdiv@divisor+1
  1447  05DA  087A               	movf	utoa@base,w
  1448  05DB  00F0               	movwf	___lwdiv@divisor
  1449  05DC  0879               	movf	utoa@val+1,w
  1450  05DD  00F3               	movwf	___lwdiv@dividend+1
  1451  05DE  0878               	movf	utoa@val,w
  1452  05DF  00F2               	movwf	___lwdiv@dividend
  1453  05E0  120A  118A  243D  120A  118A  	fcall	___lwdiv
  1454  05E5  0871               	movf	?___lwdiv+1,w
  1455  05E6  00F9               	movwf	utoa@val+1
  1456  05E7  0870               	movf	?___lwdiv,w
  1457  05E8  00F8               	movwf	utoa@val
  1458  05E9                     l1382:
  1459  05E9  300A               	movlw	10
  1460  05EA  1283               	bcf	3,5	;RP0=0, select bank0
  1461  05EB  1303               	bcf	3,6	;RP1=0, select bank0
  1462  05EC  022F               	subwf	utoa@c,w
  1463  05ED  1C03               	skipc
  1464  05EE  2DF0               	goto	u1121
  1465  05EF  2DF1               	goto	u1120
  1466  05F0                     u1121:
  1467  05F0  2DF5               	goto	l766
  1468  05F1                     u1120:
  1469  05F1                     l1384:
  1470  05F1  3007               	movlw	7
  1471  05F2  00FC               	movwf	??_utoa
  1472  05F3  087C               	movf	??_utoa,w
  1473  05F4  07AF               	addwf	utoa@c,f
  1474  05F5                     l766:
  1475  05F5  3030               	movlw	48
  1476  05F6  00FC               	movwf	??_utoa
  1477  05F7  087C               	movf	??_utoa,w
  1478  05F8  07AF               	addwf	utoa@c,f
  1479  05F9                     l1386:
  1480  05F9  082F               	movf	utoa@c,w
  1481  05FA  00FC               	movwf	??_utoa
  1482  05FB  0830               	movf	utoa@buf,w
  1483  05FC  0084               	movwf	4
  1484  05FD  087C               	movf	??_utoa,w
  1485  05FE  1383               	bcf	3,7	;select IRP bank0
  1486  05FF  0080               	movwf	0
  1487  0600                     l1388:
  1488  0600  3001               	movlw	1
  1489  0601  02B0               	subwf	utoa@buf,f
  1490  0602                     l1390:
  1491  0602  0878               	movf	utoa@val,w
  1492  0603  0479               	iorwf	utoa@val+1,w
  1493  0604  1D03               	btfss	3,2
  1494  0605  2E07               	goto	u1131
  1495  0606  2E08               	goto	u1130
  1496  0607                     u1131:
  1497  0607  2DC5               	goto	l1378
  1498  0608                     u1130:
  1499  0608                     l1392:
  1500                           
  1501                           ;	Return value of _utoa is never used
  1502  0608  3001               	movlw	1
  1503  0609  00FC               	movwf	??_utoa
  1504  060A  087C               	movf	??_utoa,w
  1505  060B  07B0               	addwf	utoa@buf,f
  1506  060C                     l768:
  1507  060C  0008               	return
  1508  060D                     __end_of_utoa:
  1509                           
  1510                           	psect	text3
  1511  03C1                     __ptext3:	
  1512 ;; *************** function ___lwmod *****************
  1513 ;; Defined at:
  1514 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  1515 ;; Parameters:    Size  Location     Type
  1516 ;;  divisor         2    0[COMMON] unsigned int 
  1517 ;;  dividend        2    2[COMMON] unsigned int 
  1518 ;; Auto vars:     Size  Location     Type
  1519 ;;  counter         1    5[COMMON] unsigned char 
  1520 ;; Return value:  Size  Location     Type
  1521 ;;                  2    0[COMMON] unsigned int 
  1522 ;; Registers used:
  1523 ;;		wreg, status,2, status,0
  1524 ;; Tracked objects:
  1525 ;;		On entry : 0/0
  1526 ;;		On exit  : 0/0
  1527 ;;		Unchanged: 0/0
  1528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1529 ;;      Params:         4       0       0       0       0
  1530 ;;      Locals:         1       0       0       0       0
  1531 ;;      Temps:          1       0       0       0       0
  1532 ;;      Totals:         6       0       0       0       0
  1533 ;;Total ram usage:        6 bytes
  1534 ;; Hardware stack levels used:    1
  1535 ;; This function calls:
  1536 ;;		Nothing
  1537 ;; This function is called by:
  1538 ;;		_utoa
  1539 ;; This function uses a non-reentrant model
  1540 ;;
  1541                           
  1542                           
  1543                           ;psect for function ___lwmod
  1544  03C1                     ___lwmod:
  1545  03C1                     l1296:	
  1546                           ;incstack = 0
  1547                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1548                           
  1549  03C1  0870               	movf	___lwmod@divisor,w
  1550  03C2  0471               	iorwf	___lwmod@divisor+1,w
  1551  03C3  1903               	btfsc	3,2
  1552  03C4  2BC6               	goto	u961
  1553  03C5  2BC7               	goto	u960
  1554  03C6                     u961:
  1555  03C6  2BF6               	goto	l1314
  1556  03C7                     u960:
  1557  03C7                     l1298:
  1558  03C7  01F5               	clrf	___lwmod@counter
  1559  03C8  0AF5               	incf	___lwmod@counter,f
  1560  03C9  2BD5               	goto	l1304
  1561  03CA                     l1300:
  1562  03CA  3001               	movlw	1
  1563  03CB                     u975:
  1564  03CB  1003               	clrc
  1565  03CC  0DF0               	rlf	___lwmod@divisor,f
  1566  03CD  0DF1               	rlf	___lwmod@divisor+1,f
  1567  03CE  3EFF               	addlw	-1
  1568  03CF  1D03               	skipz
  1569  03D0  2BCB               	goto	u975
  1570  03D1                     l1302:
  1571  03D1  3001               	movlw	1
  1572  03D2  00F4               	movwf	??___lwmod
  1573  03D3  0874               	movf	??___lwmod,w
  1574  03D4  07F5               	addwf	___lwmod@counter,f
  1575  03D5                     l1304:
  1576  03D5  1FF1               	btfss	___lwmod@divisor+1,7
  1577  03D6  2BD8               	goto	u981
  1578  03D7  2BD9               	goto	u980
  1579  03D8                     u981:
  1580  03D8  2BCA               	goto	l1300
  1581  03D9                     u980:
  1582  03D9                     l1306:
  1583  03D9  0871               	movf	___lwmod@divisor+1,w
  1584  03DA  0273               	subwf	___lwmod@dividend+1,w
  1585  03DB  1D03               	skipz
  1586  03DC  2BDF               	goto	u995
  1587  03DD  0870               	movf	___lwmod@divisor,w
  1588  03DE  0272               	subwf	___lwmod@dividend,w
  1589  03DF                     u995:
  1590  03DF  1C03               	skipc
  1591  03E0  2BE2               	goto	u991
  1592  03E1  2BE3               	goto	u990
  1593  03E2                     u991:
  1594  03E2  2BE9               	goto	l1310
  1595  03E3                     u990:
  1596  03E3                     l1308:
  1597  03E3  0870               	movf	___lwmod@divisor,w
  1598  03E4  02F2               	subwf	___lwmod@dividend,f
  1599  03E5  0871               	movf	___lwmod@divisor+1,w
  1600  03E6  1C03               	skipc
  1601  03E7  03F3               	decf	___lwmod@dividend+1,f
  1602  03E8  02F3               	subwf	___lwmod@dividend+1,f
  1603  03E9                     l1310:
  1604  03E9  3001               	movlw	1
  1605  03EA                     u1005:
  1606  03EA  1003               	clrc
  1607  03EB  0CF1               	rrf	___lwmod@divisor+1,f
  1608  03EC  0CF0               	rrf	___lwmod@divisor,f
  1609  03ED  3EFF               	addlw	-1
  1610  03EE  1D03               	skipz
  1611  03EF  2BEA               	goto	u1005
  1612  03F0                     l1312:
  1613  03F0  3001               	movlw	1
  1614  03F1  02F5               	subwf	___lwmod@counter,f
  1615  03F2  1D03               	btfss	3,2
  1616  03F3  2BF5               	goto	u1011
  1617  03F4  2BF6               	goto	u1010
  1618  03F5                     u1011:
  1619  03F5  2BD9               	goto	l1306
  1620  03F6                     u1010:
  1621  03F6                     l1314:
  1622  03F6  0873               	movf	___lwmod@dividend+1,w
  1623  03F7  00F1               	movwf	?___lwmod+1
  1624  03F8  0872               	movf	___lwmod@dividend,w
  1625  03F9  00F0               	movwf	?___lwmod
  1626  03FA                     l588:
  1627  03FA  0008               	return
  1628  03FB                     __end_of___lwmod:
  1629                           
  1630                           	psect	text4
  1631  043D                     __ptext4:	
  1632 ;; *************** function ___lwdiv *****************
  1633 ;; Defined at:
  1634 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  1635 ;; Parameters:    Size  Location     Type
  1636 ;;  divisor         2    0[COMMON] unsigned int 
  1637 ;;  dividend        2    2[COMMON] unsigned int 
  1638 ;; Auto vars:     Size  Location     Type
  1639 ;;  quotient        2    5[COMMON] unsigned int 
  1640 ;;  counter         1    7[COMMON] unsigned char 
  1641 ;; Return value:  Size  Location     Type
  1642 ;;                  2    0[COMMON] unsigned int 
  1643 ;; Registers used:
  1644 ;;		wreg, status,2, status,0
  1645 ;; Tracked objects:
  1646 ;;		On entry : 0/0
  1647 ;;		On exit  : 0/0
  1648 ;;		Unchanged: 0/0
  1649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1650 ;;      Params:         4       0       0       0       0
  1651 ;;      Locals:         3       0       0       0       0
  1652 ;;      Temps:          1       0       0       0       0
  1653 ;;      Totals:         8       0       0       0       0
  1654 ;;Total ram usage:        8 bytes
  1655 ;; Hardware stack levels used:    1
  1656 ;; This function calls:
  1657 ;;		Nothing
  1658 ;; This function is called by:
  1659 ;;		_utoa
  1660 ;; This function uses a non-reentrant model
  1661 ;;
  1662                           
  1663                           
  1664                           ;psect for function ___lwdiv
  1665  043D                     ___lwdiv:
  1666  043D                     l1270:	
  1667                           ;incstack = 0
  1668                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1669                           
  1670  043D  01F5               	clrf	___lwdiv@quotient
  1671  043E  01F6               	clrf	___lwdiv@quotient+1
  1672  043F                     l1272:
  1673  043F  0870               	movf	___lwdiv@divisor,w
  1674  0440  0471               	iorwf	___lwdiv@divisor+1,w
  1675  0441  1903               	btfsc	3,2
  1676  0442  2C44               	goto	u891
  1677  0443  2C45               	goto	u890
  1678  0444                     u891:
  1679  0444  2C7C               	goto	l1292
  1680  0445                     u890:
  1681  0445                     l1274:
  1682  0445  01F7               	clrf	___lwdiv@counter
  1683  0446  0AF7               	incf	___lwdiv@counter,f
  1684  0447  2C53               	goto	l1280
  1685  0448                     l1276:
  1686  0448  3001               	movlw	1
  1687  0449                     u905:
  1688  0449  1003               	clrc
  1689  044A  0DF0               	rlf	___lwdiv@divisor,f
  1690  044B  0DF1               	rlf	___lwdiv@divisor+1,f
  1691  044C  3EFF               	addlw	-1
  1692  044D  1D03               	skipz
  1693  044E  2C49               	goto	u905
  1694  044F                     l1278:
  1695  044F  3001               	movlw	1
  1696  0450  00F4               	movwf	??___lwdiv
  1697  0451  0874               	movf	??___lwdiv,w
  1698  0452  07F7               	addwf	___lwdiv@counter,f
  1699  0453                     l1280:
  1700  0453  1FF1               	btfss	___lwdiv@divisor+1,7
  1701  0454  2C56               	goto	u911
  1702  0455  2C57               	goto	u910
  1703  0456                     u911:
  1704  0456  2C48               	goto	l1276
  1705  0457                     u910:
  1706  0457                     l1282:
  1707  0457  3001               	movlw	1
  1708  0458                     u925:
  1709  0458  1003               	clrc
  1710  0459  0DF5               	rlf	___lwdiv@quotient,f
  1711  045A  0DF6               	rlf	___lwdiv@quotient+1,f
  1712  045B  3EFF               	addlw	-1
  1713  045C  1D03               	skipz
  1714  045D  2C58               	goto	u925
  1715  045E  0871               	movf	___lwdiv@divisor+1,w
  1716  045F  0273               	subwf	___lwdiv@dividend+1,w
  1717  0460  1D03               	skipz
  1718  0461  2C64               	goto	u935
  1719  0462  0870               	movf	___lwdiv@divisor,w
  1720  0463  0272               	subwf	___lwdiv@dividend,w
  1721  0464                     u935:
  1722  0464  1C03               	skipc
  1723  0465  2C67               	goto	u931
  1724  0466  2C68               	goto	u930
  1725  0467                     u931:
  1726  0467  2C6F               	goto	l1288
  1727  0468                     u930:
  1728  0468                     l1284:
  1729  0468  0870               	movf	___lwdiv@divisor,w
  1730  0469  02F2               	subwf	___lwdiv@dividend,f
  1731  046A  0871               	movf	___lwdiv@divisor+1,w
  1732  046B  1C03               	skipc
  1733  046C  03F3               	decf	___lwdiv@dividend+1,f
  1734  046D  02F3               	subwf	___lwdiv@dividend+1,f
  1735  046E                     l1286:
  1736  046E  1475               	bsf	___lwdiv@quotient,0
  1737  046F                     l1288:
  1738  046F  3001               	movlw	1
  1739  0470                     u945:
  1740  0470  1003               	clrc
  1741  0471  0CF1               	rrf	___lwdiv@divisor+1,f
  1742  0472  0CF0               	rrf	___lwdiv@divisor,f
  1743  0473  3EFF               	addlw	-1
  1744  0474  1D03               	skipz
  1745  0475  2C70               	goto	u945
  1746  0476                     l1290:
  1747  0476  3001               	movlw	1
  1748  0477  02F7               	subwf	___lwdiv@counter,f
  1749  0478  1D03               	btfss	3,2
  1750  0479  2C7B               	goto	u951
  1751  047A  2C7C               	goto	u950
  1752  047B                     u951:
  1753  047B  2C57               	goto	l1282
  1754  047C                     u950:
  1755  047C                     l1292:
  1756  047C  0876               	movf	___lwdiv@quotient+1,w
  1757  047D  00F1               	movwf	?___lwdiv+1
  1758  047E  0875               	movf	___lwdiv@quotient,w
  1759  047F  00F0               	movwf	?___lwdiv
  1760  0480                     l578:
  1761  0480  0008               	return
  1762  0481                     __end_of___lwdiv:
  1763                           
  1764                           	psect	text5
  1765  052C                     __ptext5:	
  1766 ;; *************** function _UARTInit *****************
  1767 ;; Defined at:
  1768 ;;		line 8 in file "USART.c"
  1769 ;; Parameters:    Size  Location     Type
  1770 ;;  baud_rate       4    0[BANK0 ] const unsigned long 
  1771 ;;  BRGH            1    4[BANK0 ] const unsigned char 
  1772 ;; Auto vars:     Size  Location     Type
  1773 ;;		None
  1774 ;; Return value:  Size  Location     Type
  1775 ;;                  1    wreg      void 
  1776 ;; Registers used:
  1777 ;;		wreg, status,2, status,0, pclath, cstack
  1778 ;; Tracked objects:
  1779 ;;		On entry : 0/0
  1780 ;;		On exit  : 0/0
  1781 ;;		Unchanged: 0/0
  1782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1783 ;;      Params:         0       5       0       0       0
  1784 ;;      Locals:         0       0       0       0       0
  1785 ;;      Temps:          0       4       0       0       0
  1786 ;;      Totals:         0       9       0       0       0
  1787 ;;Total ram usage:        9 bytes
  1788 ;; Hardware stack levels used:    1
  1789 ;; Hardware stack levels required when called:    1
  1790 ;; This function calls:
  1791 ;;		___lldiv
  1792 ;; This function is called by:
  1793 ;;		_main
  1794 ;; This function uses a non-reentrant model
  1795 ;;
  1796                           
  1797                           
  1798                           ;psect for function _UARTInit
  1799  052C                     _UARTInit:
  1800  052C                     l1406:	
  1801                           ;incstack = 0
  1802                           ; Regs used in _UARTInit: [wreg+status,2+status,0+pclath+cstack]
  1803                           
  1804                           
  1805                           ;USART.c: 10:     if (BRGH == 0) {
  1806  052C  1283               	bcf	3,5	;RP0=0, select bank0
  1807  052D  1303               	bcf	3,6	;RP1=0, select bank0
  1808  052E  0831               	movf	UARTInit@BRGH,w
  1809  052F  1D03               	btfss	3,2
  1810  0530  2D32               	goto	u1141
  1811  0531  2D33               	goto	u1140
  1812  0532                     u1141:
  1813  0532  2D60               	goto	l1412
  1814  0533                     u1140:
  1815  0533                     l1408:
  1816                           
  1817                           ;USART.c: 11:         SPBRG = 4000000/(64*baud_rate) - 1;
  1818  0533  082D               	movf	UARTInit@baud_rate,w
  1819  0534  00B2               	movwf	??_UARTInit
  1820  0535  082E               	movf	UARTInit@baud_rate+1,w
  1821  0536  00B3               	movwf	??_UARTInit+1
  1822  0537  082F               	movf	UARTInit@baud_rate+2,w
  1823  0538  00B4               	movwf	??_UARTInit+2
  1824  0539  0830               	movf	UARTInit@baud_rate+3,w
  1825  053A  00B5               	movwf	??_UARTInit+3
  1826  053B  3006               	movlw	6
  1827  053C                     u1155:
  1828  053C  1003               	clrc
  1829  053D  0DB2               	rlf	??_UARTInit,f
  1830  053E  0DB3               	rlf	??_UARTInit+1,f
  1831  053F  0DB4               	rlf	??_UARTInit+2,f
  1832  0540  0DB5               	rlf	??_UARTInit+3,f
  1833  0541                     u1150:
  1834  0541  3EFF               	addlw	-1
  1835  0542  1D03               	skipz
  1836  0543  2D3C               	goto	u1155
  1837  0544  0835               	movf	??_UARTInit+3,w
  1838  0545  00F3               	movwf	___lldiv@divisor+3
  1839  0546  0834               	movf	??_UARTInit+2,w
  1840  0547  00F2               	movwf	___lldiv@divisor+2
  1841  0548  0833               	movf	??_UARTInit+1,w
  1842  0549  00F1               	movwf	___lldiv@divisor+1
  1843  054A  0832               	movf	??_UARTInit,w
  1844  054B  00F0               	movwf	___lldiv@divisor
  1845  054C  3000               	movlw	0
  1846  054D  00F7               	movwf	___lldiv@dividend+3
  1847  054E  303D               	movlw	61
  1848  054F  00F6               	movwf	___lldiv@dividend+2
  1849  0550  3009               	movlw	9
  1850  0551  00F5               	movwf	___lldiv@dividend+1
  1851  0552  3000               	movlw	0
  1852  0553  00F4               	movwf	___lldiv@dividend
  1853  0554  120A  118A  24C6  120A  118A  	fcall	___lldiv
  1854  0559  0870               	movf	?___lldiv,w
  1855  055A  3EFF               	addlw	255
  1856  055B  1683               	bsf	3,5	;RP0=1, select bank1
  1857  055C  1303               	bcf	3,6	;RP1=0, select bank1
  1858  055D  0099               	movwf	25	;volatile
  1859  055E                     l1410:
  1860                           
  1861                           ;USART.c: 12:         TXSTAbits.BRGH = 0;
  1862  055E  1118               	bcf	24,2	;volatile
  1863                           
  1864                           ;USART.c: 13:     } else {
  1865  055F  2D8C               	goto	l1416
  1866  0560                     l1412:
  1867                           
  1868                           ;USART.c: 14:         SPBRG = 4000000/(16*baud_rate) - 1;
  1869  0560  082D               	movf	UARTInit@baud_rate,w
  1870  0561  00B2               	movwf	??_UARTInit
  1871  0562  082E               	movf	UARTInit@baud_rate+1,w
  1872  0563  00B3               	movwf	??_UARTInit+1
  1873  0564  082F               	movf	UARTInit@baud_rate+2,w
  1874  0565  00B4               	movwf	??_UARTInit+2
  1875  0566  0830               	movf	UARTInit@baud_rate+3,w
  1876  0567  00B5               	movwf	??_UARTInit+3
  1877  0568  3004               	movlw	4
  1878  0569                     u1165:
  1879  0569  1003               	clrc
  1880  056A  0DB2               	rlf	??_UARTInit,f
  1881  056B  0DB3               	rlf	??_UARTInit+1,f
  1882  056C  0DB4               	rlf	??_UARTInit+2,f
  1883  056D  0DB5               	rlf	??_UARTInit+3,f
  1884  056E                     u1160:
  1885  056E  3EFF               	addlw	-1
  1886  056F  1D03               	skipz
  1887  0570  2D69               	goto	u1165
  1888  0571  0835               	movf	??_UARTInit+3,w
  1889  0572  00F3               	movwf	___lldiv@divisor+3
  1890  0573  0834               	movf	??_UARTInit+2,w
  1891  0574  00F2               	movwf	___lldiv@divisor+2
  1892  0575  0833               	movf	??_UARTInit+1,w
  1893  0576  00F1               	movwf	___lldiv@divisor+1
  1894  0577  0832               	movf	??_UARTInit,w
  1895  0578  00F0               	movwf	___lldiv@divisor
  1896  0579  3000               	movlw	0
  1897  057A  00F7               	movwf	___lldiv@dividend+3
  1898  057B  303D               	movlw	61
  1899  057C  00F6               	movwf	___lldiv@dividend+2
  1900  057D  3009               	movlw	9
  1901  057E  00F5               	movwf	___lldiv@dividend+1
  1902  057F  3000               	movlw	0
  1903  0580  00F4               	movwf	___lldiv@dividend
  1904  0581  120A  118A  24C6  120A  118A  	fcall	___lldiv
  1905  0586  0870               	movf	?___lldiv,w
  1906  0587  3EFF               	addlw	255
  1907  0588  1683               	bsf	3,5	;RP0=1, select bank1
  1908  0589  1303               	bcf	3,6	;RP1=0, select bank1
  1909  058A  0099               	movwf	25	;volatile
  1910  058B                     l1414:
  1911                           
  1912                           ;USART.c: 15:         TXSTAbits.BRGH = 1;
  1913  058B  1518               	bsf	24,2	;volatile
  1914  058C                     l1416:
  1915                           
  1916                           ;USART.c: 19:     TXSTAbits.TX9 = 0;
  1917  058C  1318               	bcf	24,6	;volatile
  1918  058D                     l1418:
  1919                           
  1920                           ;USART.c: 20:     TXSTAbits.TXEN = 1;
  1921  058D  1698               	bsf	24,5	;volatile
  1922  058E                     l1420:
  1923                           
  1924                           ;USART.c: 21:     TXSTAbits.SYNC = 0;
  1925  058E  1218               	bcf	24,4	;volatile
  1926  058F                     l1422:
  1927                           
  1928                           ;USART.c: 24:     RCSTAbits.SPEN = 1;
  1929  058F  1283               	bcf	3,5	;RP0=0, select bank0
  1930  0590  1303               	bcf	3,6	;RP1=0, select bank0
  1931  0591  1798               	bsf	24,7	;volatile
  1932  0592                     l1424:
  1933                           
  1934                           ;USART.c: 25:     RCSTAbits.RX9 = 0;
  1935  0592  1318               	bcf	24,6	;volatile
  1936  0593                     l1426:
  1937                           
  1938                           ;USART.c: 26:     RCSTAbits.CREN = 1;
  1939  0593  1618               	bsf	24,4	;volatile
  1940  0594                     l1428:
  1941                           
  1942                           ;USART.c: 27:     RCSTAbits.FERR = 0;
  1943  0594  1118               	bcf	24,2	;volatile
  1944  0595                     l1430:
  1945                           
  1946                           ;USART.c: 28:     RCSTAbits.OERR = 0;
  1947  0595  1098               	bcf	24,1	;volatile
  1948  0596                     l1432:
  1949                           
  1950                           ;USART.c: 31:     TRISCbits.TRISC7 = 1;
  1951  0596  1683               	bsf	3,5	;RP0=1, select bank1
  1952  0597  1303               	bcf	3,6	;RP1=0, select bank1
  1953  0598  1787               	bsf	7,7	;volatile
  1954  0599                     l1434:
  1955                           
  1956                           ;USART.c: 32:     TRISCbits.TRISC6 = 0;
  1957  0599  1307               	bcf	7,6	;volatile
  1958  059A                     l188:
  1959  059A  0008               	return
  1960  059B                     __end_of_UARTInit:
  1961                           
  1962                           	psect	text6
  1963  03FB                     __ptext6:	
  1964 ;; *************** function _LcdWriteString *****************
  1965 ;; Defined at:
  1966 ;;		line 64 in file "LCD.c"
  1967 ;; Parameters:    Size  Location     Type
  1968 ;;  value           2    4[COMMON] PTR const unsigned char 
  1969 ;;		 -> numero(10), STR_3(6), STR_2(6), STR_1(17), 
  1970 ;; Auto vars:     Size  Location     Type
  1971 ;;  i               2    9[COMMON] int 
  1972 ;; Return value:  Size  Location     Type
  1973 ;;                  1    wreg      void 
  1974 ;; Registers used:
  1975 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1976 ;; Tracked objects:
  1977 ;;		On entry : 0/0
  1978 ;;		On exit  : 0/0
  1979 ;;		Unchanged: 0/0
  1980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1981 ;;      Params:         2       0       0       0       0
  1982 ;;      Locals:         2       0       0       0       0
  1983 ;;      Temps:          3       0       0       0       0
  1984 ;;      Totals:         7       0       0       0       0
  1985 ;;Total ram usage:        7 bytes
  1986 ;; Hardware stack levels used:    1
  1987 ;; Hardware stack levels required when called:    2
  1988 ;; This function calls:
  1989 ;;		_LcdWriteChar
  1990 ;; This function is called by:
  1991 ;;		_main
  1992 ;; This function uses a non-reentrant model
  1993 ;;
  1994                           
  1995                           
  1996                           ;psect for function _LcdWriteString
  1997  03FB                     _LcdWriteString:
  1998  03FB                     l1462:	
  1999                           ;incstack = 0
  2000                           ; Regs used in _LcdWriteString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2001                           
  2002                           
  2003                           ;LCD.c: 66:     for (int i = 0; value[i] != '\0'; i++)
  2004  03FB  01F9               	clrf	LcdWriteString@i
  2005  03FC  01FA               	clrf	LcdWriteString@i+1
  2006  03FD  2C20               	goto	l1468
  2007  03FE                     l1464:
  2008                           
  2009                           ;LCD.c: 67:         LcdWriteChar(value[i]);
  2010  03FE  0879               	movf	LcdWriteString@i,w
  2011  03FF  0774               	addwf	LcdWriteString@value,w
  2012  0400  00F7               	movwf	??_LcdWriteString+1
  2013  0401  0875               	movf	LcdWriteString@value+1,w
  2014  0402  00F6               	movwf	??_LcdWriteString
  2015  0403  1803               	skipnc
  2016  0404  0AF6               	incf	??_LcdWriteString,f
  2017  0405  1FF9               	btfss	LcdWriteString@i,7
  2018  0406  2C08               	goto	u1180
  2019  0407  03F6               	decf	??_LcdWriteString,f
  2020  0408                     u1180:
  2021  0408  0876               	movf	??_LcdWriteString,w
  2022  0409  00F8               	movwf	??_LcdWriteString+2
  2023  040A  0878               	movf	??_LcdWriteString+2,w
  2024  040B  1283               	bcf	3,5	;RP0=0, select bank0
  2025  040C  1303               	bcf	3,6	;RP1=0, select bank0
  2026  040D  00FF               	movwf	btemp+1
  2027  040E  0877               	movf	??_LcdWriteString+1,w
  2028  040F  0084               	movwf	4
  2029  0410  120A  118A  2003  120A  118A  	fcall	stringtab
  2030  0415  120A  118A  22E3  120A  118A  	fcall	_LcdWriteChar
  2031  041A                     l1466:
  2032  041A  3001               	movlw	1
  2033  041B  07F9               	addwf	LcdWriteString@i,f
  2034  041C  1803               	skipnc
  2035  041D  0AFA               	incf	LcdWriteString@i+1,f
  2036  041E  3000               	movlw	0
  2037  041F  07FA               	addwf	LcdWriteString@i+1,f
  2038  0420                     l1468:
  2039  0420  0879               	movf	LcdWriteString@i,w
  2040  0421  0774               	addwf	LcdWriteString@value,w
  2041  0422  00F7               	movwf	??_LcdWriteString+1
  2042  0423  0875               	movf	LcdWriteString@value+1,w
  2043  0424  00F6               	movwf	??_LcdWriteString
  2044  0425  1803               	skipnc
  2045  0426  0AF6               	incf	??_LcdWriteString,f
  2046  0427  1FF9               	btfss	LcdWriteString@i,7
  2047  0428  2C2A               	goto	u1190
  2048  0429  03F6               	decf	??_LcdWriteString,f
  2049  042A                     u1190:
  2050  042A  0876               	movf	??_LcdWriteString,w
  2051  042B  00F8               	movwf	??_LcdWriteString+2
  2052  042C  0878               	movf	??_LcdWriteString+2,w
  2053  042D  1283               	bcf	3,5	;RP0=0, select bank0
  2054  042E  1303               	bcf	3,6	;RP1=0, select bank0
  2055  042F  00FF               	movwf	btemp+1
  2056  0430  0877               	movf	??_LcdWriteString+1,w
  2057  0431  0084               	movwf	4
  2058  0432  120A  118A  2003  120A  118A  	fcall	stringtab
  2059  0437  3A00               	xorlw	0
  2060  0438  1D03               	skipz
  2061  0439  2C3B               	goto	u1201
  2062  043A  2C3C               	goto	u1200
  2063  043B                     u1201:
  2064  043B  2BFE               	goto	l1464
  2065  043C                     u1200:
  2066  043C                     l163:
  2067  043C  0008               	return
  2068  043D                     __end_of_LcdWriteString:
  2069                           
  2070                           	psect	text7
  2071  02E3                     __ptext7:	
  2072 ;; *************** function _LcdWriteChar *****************
  2073 ;; Defined at:
  2074 ;;		line 56 in file "LCD.c"
  2075 ;; Parameters:    Size  Location     Type
  2076 ;;  value           1    wreg     unsigned char 
  2077 ;; Auto vars:     Size  Location     Type
  2078 ;;  value           1    3[COMMON] unsigned char 
  2079 ;; Return value:  Size  Location     Type
  2080 ;;                  1    wreg      void 
  2081 ;; Registers used:
  2082 ;;		wreg, status,2, status,0, pclath, cstack
  2083 ;; Tracked objects:
  2084 ;;		On entry : 0/0
  2085 ;;		On exit  : 0/0
  2086 ;;		Unchanged: 0/0
  2087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2088 ;;      Params:         0       0       0       0       0
  2089 ;;      Locals:         1       0       0       0       0
  2090 ;;      Temps:          1       0       0       0       0
  2091 ;;      Totals:         2       0       0       0       0
  2092 ;;Total ram usage:        2 bytes
  2093 ;; Hardware stack levels used:    1
  2094 ;; Hardware stack levels required when called:    1
  2095 ;; This function calls:
  2096 ;;		_LcdPort
  2097 ;; This function is called by:
  2098 ;;		_main
  2099 ;;		_LcdWriteString
  2100 ;; This function uses a non-reentrant model
  2101 ;;
  2102                           
  2103                           
  2104                           ;psect for function _LcdWriteChar
  2105  02E3                     _LcdWriteChar:
  2106                           
  2107                           ;incstack = 0
  2108                           ; Regs used in _LcdWriteChar: [wreg+status,2+status,0+pclath+cstack]
  2109                           ;LcdWriteChar@value stored from wreg
  2110  02E3  00F3               	movwf	LcdWriteChar@value
  2111  02E4                     l1318:
  2112                           
  2113                           ;LCD.c: 57:     RE2 = 1;
  2114  02E4  1283               	bcf	3,5	;RP0=0, select bank0
  2115  02E5  1303               	bcf	3,6	;RP1=0, select bank0
  2116  02E6  1509               	bsf	9,2	;volatile
  2117  02E7                     l1320:
  2118                           
  2119                           ;LCD.c: 58:     LcdPort(value);
  2120  02E7  0873               	movf	LcdWriteChar@value,w
  2121  02E8  120A  118A  260D  120A  118A  	fcall	_LcdPort
  2122  02ED                     l1322:
  2123                           
  2124                           ;LCD.c: 59:     RE0 = 1;
  2125  02ED  1283               	bcf	3,5	;RP0=0, select bank0
  2126  02EE  1303               	bcf	3,6	;RP1=0, select bank0
  2127  02EF  1409               	bsf	9,0	;volatile
  2128  02F0                     l1324:
  2129                           
  2130                           ;LCD.c: 60:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  2131  02F0  300D               	movlw	13
  2132  02F1  00F2               	movwf	??_LcdWriteChar
  2133  02F2                     u1267:
  2134  02F2  0BF2               	decfsz	??_LcdWriteChar,f
  2135  02F3  2AF2               	goto	u1267
  2136  02F4                     l1326:
  2137                           
  2138                           ;LCD.c: 61:     RE0 = 0;
  2139  02F4  1283               	bcf	3,5	;RP0=0, select bank0
  2140  02F5  1303               	bcf	3,6	;RP1=0, select bank0
  2141  02F6  1009               	bcf	9,0	;volatile
  2142  02F7                     l157:
  2143  02F7  0008               	return
  2144  02F8                     __end_of_LcdWriteChar:
  2145                           
  2146                           	psect	text8
  2147  0312                     __ptext8:	
  2148 ;; *************** function _LcdSetCursor *****************
  2149 ;; Defined at:
  2150 ;;		line 29 in file "LCD.c"
  2151 ;; Parameters:    Size  Location     Type
  2152 ;;  row             1    wreg     unsigned char 
  2153 ;;  column          1    5[COMMON] unsigned char 
  2154 ;; Auto vars:     Size  Location     Type
  2155 ;;  row             1    8[COMMON] unsigned char 
  2156 ;; Return value:  Size  Location     Type
  2157 ;;                  1    wreg      void 
  2158 ;; Registers used:
  2159 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2160 ;; Tracked objects:
  2161 ;;		On entry : 0/0
  2162 ;;		On exit  : 0/0
  2163 ;;		Unchanged: 0/0
  2164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2165 ;;      Params:         1       0       0       0       0
  2166 ;;      Locals:         1       0       0       0       0
  2167 ;;      Temps:          2       0       0       0       0
  2168 ;;      Totals:         4       0       0       0       0
  2169 ;;Total ram usage:        4 bytes
  2170 ;; Hardware stack levels used:    1
  2171 ;; Hardware stack levels required when called:    2
  2172 ;; This function calls:
  2173 ;;		_LcdCmd
  2174 ;; This function is called by:
  2175 ;;		_main
  2176 ;; This function uses a non-reentrant model
  2177 ;;
  2178                           
  2179                           
  2180                           ;psect for function _LcdSetCursor
  2181  0312                     _LcdSetCursor:
  2182                           
  2183                           ;incstack = 0
  2184                           ; Regs used in _LcdSetCursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2185                           ;LcdSetCursor@row stored from wreg
  2186  0312  00F8               	movwf	LcdSetCursor@row
  2187  0313                     l1448:
  2188                           
  2189                           ;LCD.c: 30:     switch(row){
  2190  0313  2B24               	goto	l1456
  2191  0314                     l1450:
  2192                           
  2193                           ;LCD.c: 32:             LcdCmd(0x80 + column - 1);
  2194  0314  0875               	movf	LcdSetCursor@column,w
  2195  0315  3E7F               	addlw	127
  2196  0316  120A  118A  22F8  120A  118A  	fcall	_LcdCmd
  2197                           
  2198                           ;LCD.c: 33:             break;
  2199  031B  2B34               	goto	l151
  2200  031C                     l1452:
  2201                           
  2202                           ;LCD.c: 35:             LcdCmd(0xC0 + column - 1);
  2203  031C  0875               	movf	LcdSetCursor@column,w
  2204  031D  3EBF               	addlw	191
  2205  031E  120A  118A  22F8  120A  118A  	fcall	_LcdCmd
  2206                           
  2207                           ;LCD.c: 36:             break;
  2208  0323  2B34               	goto	l151
  2209  0324                     l1456:
  2210  0324  0878               	movf	LcdSetCursor@row,w
  2211  0325  00F6               	movwf	??_LcdSetCursor
  2212  0326  01F7               	clrf	??_LcdSetCursor+1
  2213                           
  2214                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2215                           ; Switch size 1, requested type "simple"
  2216                           ; Number of cases is 1, Range of values is 0 to 0
  2217                           ; switch strategies available:
  2218                           ; Name         Instructions Cycles
  2219                           ; simple_byte            4     3 (average)
  2220                           ; direct_byte           11     8 (fixed)
  2221                           ; jumptable            260     6 (fixed)
  2222                           ;	Chosen strategy is simple_byte
  2223  0327  0877               	movf	??_LcdSetCursor+1,w
  2224  0328  3A00               	xorlw	0	; case 0
  2225  0329  1903               	skipnz
  2226  032A  2B2C               	goto	l1652
  2227  032B  2B34               	goto	l151
  2228  032C                     l1652:
  2229                           
  2230                           ; Switch size 1, requested type "simple"
  2231                           ; Number of cases is 2, Range of values is 1 to 2
  2232                           ; switch strategies available:
  2233                           ; Name         Instructions Cycles
  2234                           ; simple_byte            7     4 (average)
  2235                           ; direct_byte           17    11 (fixed)
  2236                           ; jumptable            263     9 (fixed)
  2237                           ;	Chosen strategy is simple_byte
  2238  032C  0876               	movf	??_LcdSetCursor,w
  2239  032D  3A01               	xorlw	1	; case 1
  2240  032E  1903               	skipnz
  2241  032F  2B14               	goto	l1450
  2242  0330  3A03               	xorlw	3	; case 2
  2243  0331  1903               	skipnz
  2244  0332  2B1C               	goto	l1452
  2245  0333  2B34               	goto	l151
  2246  0334                     l151:
  2247  0334  0008               	return
  2248  0335                     __end_of_LcdSetCursor:
  2249                           
  2250                           	psect	text9
  2251  0481                     __ptext9:	
  2252 ;; *************** function _LcdInit *****************
  2253 ;; Defined at:
  2254 ;;		line 41 in file "LCD.c"
  2255 ;; Parameters:    Size  Location     Type
  2256 ;;		None
  2257 ;; Auto vars:     Size  Location     Type
  2258 ;;		None
  2259 ;; Return value:  Size  Location     Type
  2260 ;;                  1    wreg      void 
  2261 ;; Registers used:
  2262 ;;		wreg, status,2, status,0, pclath, cstack
  2263 ;; Tracked objects:
  2264 ;;		On entry : 0/0
  2265 ;;		On exit  : 0/0
  2266 ;;		Unchanged: 0/0
  2267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2268 ;;      Params:         0       0       0       0       0
  2269 ;;      Locals:         0       0       0       0       0
  2270 ;;      Temps:          2       0       0       0       0
  2271 ;;      Totals:         2       0       0       0       0
  2272 ;;Total ram usage:        2 bytes
  2273 ;; Hardware stack levels used:    1
  2274 ;; Hardware stack levels required when called:    2
  2275 ;; This function calls:
  2276 ;;		_LcdCmd
  2277 ;;		_LcdPort
  2278 ;; This function is called by:
  2279 ;;		_main
  2280 ;; This function uses a non-reentrant model
  2281 ;;
  2282                           
  2283                           
  2284                           ;psect for function _LcdInit
  2285  0481                     _LcdInit:
  2286  0481                     l1396:	
  2287                           ;incstack = 0
  2288                           ; Regs used in _LcdInit: [wreg+status,2+status,0+pclath+cstack]
  2289                           
  2290                           
  2291                           ;LCD.c: 42:     LcdPort(0x00);
  2292  0481  3000               	movlw	0
  2293  0482  120A  118A  260D  120A  118A  	fcall	_LcdPort
  2294  0487                     l1398:
  2295                           
  2296                           ;LCD.c: 43:     _delay((unsigned long)((20)*(4000000/4000.0)));
  2297  0487  301A               	movlw	26
  2298  0488  00F6               	movwf	??_LcdInit+1
  2299  0489  30F8               	movlw	248
  2300  048A  00F5               	movwf	??_LcdInit
  2301  048B                     u1277:
  2302  048B  0BF5               	decfsz	??_LcdInit,f
  2303  048C  2C8B               	goto	u1277
  2304  048D  0BF6               	decfsz	??_LcdInit+1,f
  2305  048E  2C8B               	goto	u1277
  2306  048F  0000               	nop
  2307  0490                     l1400:
  2308                           
  2309                           ;LCD.c: 44:     LcdCmd(0x30);
  2310  0490  3030               	movlw	48
  2311  0491  120A  118A  22F8  120A  118A  	fcall	_LcdCmd
  2312                           
  2313                           ;LCD.c: 45:     _delay((unsigned long)((5)*(4000000/4000.0)));
  2314  0496  3007               	movlw	7
  2315  0497  00F6               	movwf	??_LcdInit+1
  2316  0498  307D               	movlw	125
  2317  0499  00F5               	movwf	??_LcdInit
  2318  049A                     u1287:
  2319  049A  0BF5               	decfsz	??_LcdInit,f
  2320  049B  2C9A               	goto	u1287
  2321  049C  0BF6               	decfsz	??_LcdInit+1,f
  2322  049D  2C9A               	goto	u1287
  2323  049E                     l1402:
  2324                           
  2325                           ;LCD.c: 46:     LcdCmd(0x30);
  2326  049E  3030               	movlw	48
  2327  049F  120A  118A  22F8  120A  118A  	fcall	_LcdCmd
  2328  04A4                     l1404:
  2329                           
  2330                           ;LCD.c: 47:     _delay((unsigned long)((11)*(4000000/4000.0)));
  2331  04A4  300F               	movlw	15
  2332  04A5  00F6               	movwf	??_LcdInit+1
  2333  04A6  3047               	movlw	71
  2334  04A7  00F5               	movwf	??_LcdInit
  2335  04A8                     u1297:
  2336  04A8  0BF5               	decfsz	??_LcdInit,f
  2337  04A9  2CA8               	goto	u1297
  2338  04AA  0BF6               	decfsz	??_LcdInit+1,f
  2339  04AB  2CA8               	goto	u1297
  2340  04AC  2CAD               	nop2
  2341                           
  2342                           ;LCD.c: 48:     LcdCmd(0x30);
  2343  04AD  3030               	movlw	48
  2344  04AE  120A  118A  22F8  120A  118A  	fcall	_LcdCmd
  2345                           
  2346                           ;LCD.c: 50:     LcdCmd(0x38);
  2347  04B3  3038               	movlw	56
  2348  04B4  120A  118A  22F8  120A  118A  	fcall	_LcdCmd
  2349                           
  2350                           ;LCD.c: 51:     LcdCmd(0x0C);
  2351  04B9  300C               	movlw	12
  2352  04BA  120A  118A  22F8  120A  118A  	fcall	_LcdCmd
  2353                           
  2354                           ;LCD.c: 52:     LcdCmd(0x6);
  2355  04BF  3006               	movlw	6
  2356  04C0  120A  118A  22F8  120A  118A  	fcall	_LcdCmd
  2357  04C5                     l154:
  2358  04C5  0008               	return
  2359  04C6                     __end_of_LcdInit:
  2360                           
  2361                           	psect	text10
  2362  02F8                     __ptext10:	
  2363 ;; *************** function _LcdCmd *****************
  2364 ;; Defined at:
  2365 ;;		line 16 in file "LCD.c"
  2366 ;; Parameters:    Size  Location     Type
  2367 ;;  value           1    wreg     unsigned char 
  2368 ;; Auto vars:     Size  Location     Type
  2369 ;;  value           1    4[COMMON] unsigned char 
  2370 ;; Return value:  Size  Location     Type
  2371 ;;                  1    wreg      void 
  2372 ;; Registers used:
  2373 ;;		wreg, status,2, status,0, pclath, cstack
  2374 ;; Tracked objects:
  2375 ;;		On entry : 0/0
  2376 ;;		On exit  : 0/0
  2377 ;;		Unchanged: 0/0
  2378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2379 ;;      Params:         0       0       0       0       0
  2380 ;;      Locals:         1       0       0       0       0
  2381 ;;      Temps:          2       0       0       0       0
  2382 ;;      Totals:         3       0       0       0       0
  2383 ;;Total ram usage:        3 bytes
  2384 ;; Hardware stack levels used:    1
  2385 ;; Hardware stack levels required when called:    1
  2386 ;; This function calls:
  2387 ;;		_LcdPort
  2388 ;; This function is called by:
  2389 ;;		_LcdSetCursor
  2390 ;;		_LcdInit
  2391 ;;		_LcdClear
  2392 ;;		_LcdShiftRight
  2393 ;;		_LcdShiftLeft
  2394 ;; This function uses a non-reentrant model
  2395 ;;
  2396                           
  2397                           
  2398                           ;psect for function _LcdCmd
  2399  02F8                     _LcdCmd:
  2400                           
  2401                           ;incstack = 0
  2402                           ; Regs used in _LcdCmd: [wreg+status,2+status,0+pclath+cstack]
  2403                           ;LcdCmd@value stored from wreg
  2404  02F8  00F4               	movwf	LcdCmd@value
  2405  02F9                     l1332:
  2406                           
  2407                           ;LCD.c: 17:     RE2 = 0;
  2408  02F9  1283               	bcf	3,5	;RP0=0, select bank0
  2409  02FA  1303               	bcf	3,6	;RP1=0, select bank0
  2410  02FB  1109               	bcf	9,2	;volatile
  2411  02FC                     l1334:
  2412                           
  2413                           ;LCD.c: 18:     LcdPort(value);
  2414  02FC  0874               	movf	LcdCmd@value,w
  2415  02FD  120A  118A  260D  120A  118A  	fcall	_LcdPort
  2416  0302                     l1336:
  2417                           
  2418                           ;LCD.c: 19:     RE0 = 1;
  2419  0302  1283               	bcf	3,5	;RP0=0, select bank0
  2420  0303  1303               	bcf	3,6	;RP1=0, select bank0
  2421  0304  1409               	bsf	9,0	;volatile
  2422  0305                     l1338:
  2423                           
  2424                           ;LCD.c: 20:     _delay((unsigned long)((4)*(4000000/4000.0)));
  2425  0305  3006               	movlw	6
  2426  0306  00F3               	movwf	??_LcdCmd+1
  2427  0307  3030               	movlw	48
  2428  0308  00F2               	movwf	??_LcdCmd
  2429  0309                     u1307:
  2430  0309  0BF2               	decfsz	??_LcdCmd,f
  2431  030A  2B09               	goto	u1307
  2432  030B  0BF3               	decfsz	??_LcdCmd+1,f
  2433  030C  2B09               	goto	u1307
  2434  030D  0000               	nop
  2435  030E                     l1340:
  2436                           
  2437                           ;LCD.c: 21:     RE0 = 0;
  2438  030E  1283               	bcf	3,5	;RP0=0, select bank0
  2439  030F  1303               	bcf	3,6	;RP1=0, select bank0
  2440  0310  1009               	bcf	9,0	;volatile
  2441  0311                     l141:
  2442  0311  0008               	return
  2443  0312                     __end_of_LcdCmd:
  2444                           
  2445                           	psect	text11
  2446  060D                     __ptext11:	
  2447 ;; *************** function _LcdPort *****************
  2448 ;; Defined at:
  2449 ;;		line 3 in file "LCD.c"
  2450 ;; Parameters:    Size  Location     Type
  2451 ;;  value           1    wreg     unsigned char 
  2452 ;; Auto vars:     Size  Location     Type
  2453 ;;  value           1    1[COMMON] unsigned char 
  2454 ;; Return value:  Size  Location     Type
  2455 ;;                  1    wreg      void 
  2456 ;; Registers used:
  2457 ;;		wreg, status,2, status,0
  2458 ;; Tracked objects:
  2459 ;;		On entry : 0/0
  2460 ;;		On exit  : 0/0
  2461 ;;		Unchanged: 0/0
  2462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2463 ;;      Params:         0       0       0       0       0
  2464 ;;      Locals:         1       0       0       0       0
  2465 ;;      Temps:          1       0       0       0       0
  2466 ;;      Totals:         2       0       0       0       0
  2467 ;;Total ram usage:        2 bytes
  2468 ;; Hardware stack levels used:    1
  2469 ;; This function calls:
  2470 ;;		Nothing
  2471 ;; This function is called by:
  2472 ;;		_LcdCmd
  2473 ;;		_LcdInit
  2474 ;;		_LcdWriteChar
  2475 ;; This function uses a non-reentrant model
  2476 ;;
  2477                           
  2478                           
  2479                           ;psect for function _LcdPort
  2480  060D                     _LcdPort:
  2481                           
  2482                           ;incstack = 0
  2483                           ; Regs used in _LcdPort: [wreg+status,2+status,0]
  2484                           ;LcdPort@value stored from wreg
  2485  060D  00F1               	movwf	LcdPort@value
  2486  060E                     l1266:
  2487                           
  2488                           ;LCD.c: 6:     RD0 = value &1;
  2489  060E  1871               	btfsc	LcdPort@value,0
  2490  060F  2E11               	goto	u661
  2491  0610  2E15               	goto	u660
  2492  0611                     u661:
  2493  0611  1283               	bcf	3,5	;RP0=0, select bank0
  2494  0612  1303               	bcf	3,6	;RP1=0, select bank0
  2495  0613  1408               	bsf	8,0	;volatile
  2496  0614  2E18               	goto	u674
  2497  0615                     u660:
  2498  0615  1283               	bcf	3,5	;RP0=0, select bank0
  2499  0616  1303               	bcf	3,6	;RP1=0, select bank0
  2500  0617  1008               	bcf	8,0	;volatile
  2501  0618                     u674:
  2502  0618                     l1268:
  2503                           
  2504                           ;LCD.c: 7:     RD1 = (value & 2) >> 1;
  2505  0618  0871               	movf	LcdPort@value,w
  2506  0619  00F0               	movwf	??_LcdPort
  2507  061A  3001               	movlw	1
  2508  061B                     u685:
  2509  061B  1003               	clrc
  2510  061C  0CF0               	rrf	??_LcdPort,f
  2511  061D  3EFF               	addlw	-1
  2512  061E  1D03               	skipz
  2513  061F  2E1B               	goto	u685
  2514  0620  1870               	btfsc	??_LcdPort,0
  2515  0621  2E23               	goto	u691
  2516  0622  2E27               	goto	u690
  2517  0623                     u691:
  2518  0623  1283               	bcf	3,5	;RP0=0, select bank0
  2519  0624  1303               	bcf	3,6	;RP1=0, select bank0
  2520  0625  1488               	bsf	8,1	;volatile
  2521  0626  2E2A               	goto	u704
  2522  0627                     u690:
  2523  0627  1283               	bcf	3,5	;RP0=0, select bank0
  2524  0628  1303               	bcf	3,6	;RP1=0, select bank0
  2525  0629  1088               	bcf	8,1	;volatile
  2526  062A                     u704:
  2527                           
  2528                           ;LCD.c: 8:     RD2 = (value & 4) >> 2;
  2529  062A  0871               	movf	LcdPort@value,w
  2530  062B  00F0               	movwf	??_LcdPort
  2531  062C  3002               	movlw	2
  2532  062D                     u715:
  2533  062D  1003               	clrc
  2534  062E  0CF0               	rrf	??_LcdPort,f
  2535  062F  3EFF               	addlw	-1
  2536  0630  1D03               	skipz
  2537  0631  2E2D               	goto	u715
  2538  0632  1870               	btfsc	??_LcdPort,0
  2539  0633  2E35               	goto	u721
  2540  0634  2E39               	goto	u720
  2541  0635                     u721:
  2542  0635  1283               	bcf	3,5	;RP0=0, select bank0
  2543  0636  1303               	bcf	3,6	;RP1=0, select bank0
  2544  0637  1508               	bsf	8,2	;volatile
  2545  0638  2E3C               	goto	u734
  2546  0639                     u720:
  2547  0639  1283               	bcf	3,5	;RP0=0, select bank0
  2548  063A  1303               	bcf	3,6	;RP1=0, select bank0
  2549  063B  1108               	bcf	8,2	;volatile
  2550  063C                     u734:
  2551                           
  2552                           ;LCD.c: 9:     RD3 = (value &8) >> 3;
  2553  063C  0871               	movf	LcdPort@value,w
  2554  063D  00F0               	movwf	??_LcdPort
  2555  063E  3003               	movlw	3
  2556  063F                     u745:
  2557  063F  1003               	clrc
  2558  0640  0CF0               	rrf	??_LcdPort,f
  2559  0641  3EFF               	addlw	-1
  2560  0642  1D03               	skipz
  2561  0643  2E3F               	goto	u745
  2562  0644  1870               	btfsc	??_LcdPort,0
  2563  0645  2E47               	goto	u751
  2564  0646  2E4B               	goto	u750
  2565  0647                     u751:
  2566  0647  1283               	bcf	3,5	;RP0=0, select bank0
  2567  0648  1303               	bcf	3,6	;RP1=0, select bank0
  2568  0649  1588               	bsf	8,3	;volatile
  2569  064A  2E4E               	goto	u764
  2570  064B                     u750:
  2571  064B  1283               	bcf	3,5	;RP0=0, select bank0
  2572  064C  1303               	bcf	3,6	;RP1=0, select bank0
  2573  064D  1188               	bcf	8,3	;volatile
  2574  064E                     u764:
  2575                           
  2576                           ;LCD.c: 10:     RD4 = (value & 16)>>4;
  2577  064E  0871               	movf	LcdPort@value,w
  2578  064F  00F0               	movwf	??_LcdPort
  2579  0650  3004               	movlw	4
  2580  0651                     u775:
  2581  0651  1003               	clrc
  2582  0652  0CF0               	rrf	??_LcdPort,f
  2583  0653  3EFF               	addlw	-1
  2584  0654  1D03               	skipz
  2585  0655  2E51               	goto	u775
  2586  0656  1870               	btfsc	??_LcdPort,0
  2587  0657  2E59               	goto	u781
  2588  0658  2E5D               	goto	u780
  2589  0659                     u781:
  2590  0659  1283               	bcf	3,5	;RP0=0, select bank0
  2591  065A  1303               	bcf	3,6	;RP1=0, select bank0
  2592  065B  1608               	bsf	8,4	;volatile
  2593  065C  2E60               	goto	u794
  2594  065D                     u780:
  2595  065D  1283               	bcf	3,5	;RP0=0, select bank0
  2596  065E  1303               	bcf	3,6	;RP1=0, select bank0
  2597  065F  1208               	bcf	8,4	;volatile
  2598  0660                     u794:
  2599                           
  2600                           ;LCD.c: 11:     RD5 = (value & 32) >> 5 ;
  2601  0660  0871               	movf	LcdPort@value,w
  2602  0661  00F0               	movwf	??_LcdPort
  2603  0662  3005               	movlw	5
  2604  0663                     u805:
  2605  0663  1003               	clrc
  2606  0664  0CF0               	rrf	??_LcdPort,f
  2607  0665  3EFF               	addlw	-1
  2608  0666  1D03               	skipz
  2609  0667  2E63               	goto	u805
  2610  0668  1870               	btfsc	??_LcdPort,0
  2611  0669  2E6B               	goto	u811
  2612  066A  2E6F               	goto	u810
  2613  066B                     u811:
  2614  066B  1283               	bcf	3,5	;RP0=0, select bank0
  2615  066C  1303               	bcf	3,6	;RP1=0, select bank0
  2616  066D  1688               	bsf	8,5	;volatile
  2617  066E  2E72               	goto	u824
  2618  066F                     u810:
  2619  066F  1283               	bcf	3,5	;RP0=0, select bank0
  2620  0670  1303               	bcf	3,6	;RP1=0, select bank0
  2621  0671  1288               	bcf	8,5	;volatile
  2622  0672                     u824:
  2623                           
  2624                           ;LCD.c: 12:     RD6 = (value & 64) >> 6;
  2625  0672  0871               	movf	LcdPort@value,w
  2626  0673  00F0               	movwf	??_LcdPort
  2627  0674  3006               	movlw	6
  2628  0675                     u835:
  2629  0675  1003               	clrc
  2630  0676  0CF0               	rrf	??_LcdPort,f
  2631  0677  3EFF               	addlw	-1
  2632  0678  1D03               	skipz
  2633  0679  2E75               	goto	u835
  2634  067A  1870               	btfsc	??_LcdPort,0
  2635  067B  2E7D               	goto	u841
  2636  067C  2E81               	goto	u840
  2637  067D                     u841:
  2638  067D  1283               	bcf	3,5	;RP0=0, select bank0
  2639  067E  1303               	bcf	3,6	;RP1=0, select bank0
  2640  067F  1708               	bsf	8,6	;volatile
  2641  0680  2E84               	goto	u854
  2642  0681                     u840:
  2643  0681  1283               	bcf	3,5	;RP0=0, select bank0
  2644  0682  1303               	bcf	3,6	;RP1=0, select bank0
  2645  0683  1308               	bcf	8,6	;volatile
  2646  0684                     u854:
  2647                           
  2648                           ;LCD.c: 13:     RD7 = (value & 128) >> 7;
  2649  0684  0871               	movf	LcdPort@value,w
  2650  0685  00F0               	movwf	??_LcdPort
  2651  0686  3007               	movlw	7
  2652  0687                     u865:
  2653  0687  1003               	clrc
  2654  0688  0CF0               	rrf	??_LcdPort,f
  2655  0689  3EFF               	addlw	-1
  2656  068A  1D03               	skipz
  2657  068B  2E87               	goto	u865
  2658  068C  1870               	btfsc	??_LcdPort,0
  2659  068D  2E8F               	goto	u871
  2660  068E  2E93               	goto	u870
  2661  068F                     u871:
  2662  068F  1283               	bcf	3,5	;RP0=0, select bank0
  2663  0690  1303               	bcf	3,6	;RP1=0, select bank0
  2664  0691  1788               	bsf	8,7	;volatile
  2665  0692  2E96               	goto	u884
  2666  0693                     u870:
  2667  0693  1283               	bcf	3,5	;RP0=0, select bank0
  2668  0694  1303               	bcf	3,6	;RP1=0, select bank0
  2669  0695  1388               	bcf	8,7	;volatile
  2670  0696                     u884:
  2671  0696                     l138:
  2672  0696  0008               	return
  2673  0697                     __end_of_LcdPort:
  2674                           
  2675                           	psect	text12
  2676  02CC                     __ptext12:	
  2677 ;; *************** function _I2C_Master_Write *****************
  2678 ;; Defined at:
  2679 ;;		line 67 in file "I2C.c"
  2680 ;; Parameters:    Size  Location     Type
  2681 ;;  d               2    0[COMMON] unsigned int 
  2682 ;; Auto vars:     Size  Location     Type
  2683 ;;		None
  2684 ;; Return value:  Size  Location     Type
  2685 ;;                  1    wreg      void 
  2686 ;; Registers used:
  2687 ;;		wreg, status,2, status,0, pclath, cstack
  2688 ;; Tracked objects:
  2689 ;;		On entry : 0/0
  2690 ;;		On exit  : 0/0
  2691 ;;		Unchanged: 0/0
  2692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2693 ;;      Params:         2       0       0       0       0
  2694 ;;      Locals:         0       0       0       0       0
  2695 ;;      Temps:          0       0       0       0       0
  2696 ;;      Totals:         2       0       0       0       0
  2697 ;;Total ram usage:        2 bytes
  2698 ;; Hardware stack levels used:    1
  2699 ;; Hardware stack levels required when called:    1
  2700 ;; This function calls:
  2701 ;;		_I2C_Master_Wait
  2702 ;; This function is called by:
  2703 ;;		_main
  2704 ;; This function uses a non-reentrant model
  2705 ;;
  2706                           
  2707                           
  2708                           ;psect for function _I2C_Master_Write
  2709  02CC                     _I2C_Master_Write:
  2710  02CC                     l1474:	
  2711                           ;incstack = 0
  2712                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2713                           
  2714                           
  2715                           ;I2C.c: 67: void I2C_Master_Write(unsigned d);I2C.c: 68: {;I2C.c: 69:     I2C_Master_Wai
      +                          t();
  2716  02CC  120A  118A  22D6  120A  118A  	fcall	_I2C_Master_Wait
  2717  02D1                     l1476:
  2718                           
  2719                           ;I2C.c: 70:     SSPBUF = d;
  2720  02D1  0870               	movf	I2C_Master_Write@d,w
  2721  02D2  1283               	bcf	3,5	;RP0=0, select bank0
  2722  02D3  1303               	bcf	3,6	;RP1=0, select bank0
  2723  02D4  0093               	movwf	19	;volatile
  2724  02D5                     l105:
  2725  02D5  0008               	return
  2726  02D6                     __end_of_I2C_Master_Write:
  2727                           
  2728                           	psect	text13
  2729  02C3                     __ptext13:	
  2730 ;; *************** function _I2C_Master_Stop *****************
  2731 ;; Defined at:
  2732 ;;		line 57 in file "I2C.c"
  2733 ;; Parameters:    Size  Location     Type
  2734 ;;		None
  2735 ;; Auto vars:     Size  Location     Type
  2736 ;;		None
  2737 ;; Return value:  Size  Location     Type
  2738 ;;                  1    wreg      void 
  2739 ;; Registers used:
  2740 ;;		wreg, status,2, status,0, pclath, cstack
  2741 ;; Tracked objects:
  2742 ;;		On entry : 0/0
  2743 ;;		On exit  : 0/0
  2744 ;;		Unchanged: 0/0
  2745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2746 ;;      Params:         0       0       0       0       0
  2747 ;;      Locals:         0       0       0       0       0
  2748 ;;      Temps:          0       0       0       0       0
  2749 ;;      Totals:         0       0       0       0       0
  2750 ;;Total ram usage:        0 bytes
  2751 ;; Hardware stack levels used:    1
  2752 ;; Hardware stack levels required when called:    1
  2753 ;; This function calls:
  2754 ;;		_I2C_Master_Wait
  2755 ;; This function is called by:
  2756 ;;		_main
  2757 ;; This function uses a non-reentrant model
  2758 ;;
  2759                           
  2760                           
  2761                           ;psect for function _I2C_Master_Stop
  2762  02C3                     _I2C_Master_Stop:
  2763  02C3                     l1494:	
  2764                           ;incstack = 0
  2765                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2766                           
  2767                           
  2768                           ;I2C.c: 59:     I2C_Master_Wait();
  2769  02C3  120A  118A  22D6  120A  118A  	fcall	_I2C_Master_Wait
  2770  02C8                     l1496:
  2771                           
  2772                           ;I2C.c: 60:     SSPCON2bits.PEN = 1;
  2773  02C8  1683               	bsf	3,5	;RP0=1, select bank1
  2774  02C9  1303               	bcf	3,6	;RP1=0, select bank1
  2775  02CA  1511               	bsf	17,2	;volatile
  2776  02CB                     l102:
  2777  02CB  0008               	return
  2778  02CC                     __end_of_I2C_Master_Stop:
  2779                           
  2780                           	psect	text14
  2781  02BA                     __ptext14:	
  2782 ;; *************** function _I2C_Master_Start *****************
  2783 ;; Defined at:
  2784 ;;		line 41 in file "I2C.c"
  2785 ;; Parameters:    Size  Location     Type
  2786 ;;		None
  2787 ;; Auto vars:     Size  Location     Type
  2788 ;;		None
  2789 ;; Return value:  Size  Location     Type
  2790 ;;                  1    wreg      void 
  2791 ;; Registers used:
  2792 ;;		wreg, status,2, status,0, pclath, cstack
  2793 ;; Tracked objects:
  2794 ;;		On entry : 0/0
  2795 ;;		On exit  : 0/0
  2796 ;;		Unchanged: 0/0
  2797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2798 ;;      Params:         0       0       0       0       0
  2799 ;;      Locals:         0       0       0       0       0
  2800 ;;      Temps:          0       0       0       0       0
  2801 ;;      Totals:         0       0       0       0       0
  2802 ;;Total ram usage:        0 bytes
  2803 ;; Hardware stack levels used:    1
  2804 ;; Hardware stack levels required when called:    1
  2805 ;; This function calls:
  2806 ;;		_I2C_Master_Wait
  2807 ;; This function is called by:
  2808 ;;		_main
  2809 ;; This function uses a non-reentrant model
  2810 ;;
  2811                           
  2812                           
  2813                           ;psect for function _I2C_Master_Start
  2814  02BA                     _I2C_Master_Start:
  2815  02BA                     l1470:	
  2816                           ;incstack = 0
  2817                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2818                           
  2819                           
  2820                           ;I2C.c: 43:     I2C_Master_Wait();
  2821  02BA  120A  118A  22D6  120A  118A  	fcall	_I2C_Master_Wait
  2822  02BF                     l1472:
  2823                           
  2824                           ;I2C.c: 44:     SSPCON2bits.SEN = 1;
  2825  02BF  1683               	bsf	3,5	;RP0=1, select bank1
  2826  02C0  1303               	bcf	3,6	;RP1=0, select bank1
  2827  02C1  1411               	bsf	17,0	;volatile
  2828  02C2                     l96:
  2829  02C2  0008               	return
  2830  02C3                     __end_of_I2C_Master_Start:
  2831                           
  2832                           	psect	text15
  2833  035B                     __ptext15:	
  2834 ;; *************** function _I2C_Master_Read *****************
  2835 ;; Defined at:
  2836 ;;		line 76 in file "I2C.c"
  2837 ;; Parameters:    Size  Location     Type
  2838 ;;  a               2    0[COMMON] unsigned short 
  2839 ;; Auto vars:     Size  Location     Type
  2840 ;;  temp            2    4[COMMON] unsigned short 
  2841 ;; Return value:  Size  Location     Type
  2842 ;;                  2    0[COMMON] unsigned short 
  2843 ;; Registers used:
  2844 ;;		wreg, status,2, status,0, pclath, cstack
  2845 ;; Tracked objects:
  2846 ;;		On entry : 0/0
  2847 ;;		On exit  : 0/0
  2848 ;;		Unchanged: 0/0
  2849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2850 ;;      Params:         2       0       0       0       0
  2851 ;;      Locals:         2       0       0       0       0
  2852 ;;      Temps:          2       0       0       0       0
  2853 ;;      Totals:         6       0       0       0       0
  2854 ;;Total ram usage:        6 bytes
  2855 ;; Hardware stack levels used:    1
  2856 ;; Hardware stack levels required when called:    1
  2857 ;; This function calls:
  2858 ;;		_I2C_Master_Wait
  2859 ;; This function is called by:
  2860 ;;		_main
  2861 ;; This function uses a non-reentrant model
  2862 ;;
  2863                           
  2864                           
  2865                           ;psect for function _I2C_Master_Read
  2866  035B                     _I2C_Master_Read:
  2867  035B                     l1478:	
  2868                           ;incstack = 0
  2869                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  2870                           
  2871                           
  2872                           ;I2C.c: 76: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 77: {;I2C.c: 78:    
      +                           unsigned short temp;;I2C.c: 79:     I2C_Master_Wait();
  2873  035B  120A  118A  22D6  120A  118A  	fcall	_I2C_Master_Wait
  2874  0360                     l1480:
  2875                           
  2876                           ;I2C.c: 80:     SSPCON2bits.RCEN = 1;
  2877  0360  1683               	bsf	3,5	;RP0=1, select bank1
  2878  0361  1303               	bcf	3,6	;RP1=0, select bank1
  2879  0362  1591               	bsf	17,3	;volatile
  2880                           
  2881                           ;I2C.c: 81:     I2C_Master_Wait();
  2882  0363  120A  118A  22D6  120A  118A  	fcall	_I2C_Master_Wait
  2883  0368                     l1482:
  2884                           
  2885                           ;I2C.c: 82:     temp = SSPBUF;
  2886  0368  1283               	bcf	3,5	;RP0=0, select bank0
  2887  0369  1303               	bcf	3,6	;RP1=0, select bank0
  2888  036A  0813               	movf	19,w	;volatile
  2889  036B  00F2               	movwf	??_I2C_Master_Read
  2890  036C  01F3               	clrf	??_I2C_Master_Read+1
  2891  036D  0872               	movf	??_I2C_Master_Read,w
  2892  036E  00F4               	movwf	I2C_Master_Read@temp
  2893  036F  0873               	movf	??_I2C_Master_Read+1,w
  2894  0370  00F5               	movwf	I2C_Master_Read@temp+1
  2895  0371                     l1484:
  2896                           
  2897                           ;I2C.c: 83:     I2C_Master_Wait();
  2898  0371  120A  118A  22D6  120A  118A  	fcall	_I2C_Master_Wait
  2899  0376                     l1486:
  2900                           
  2901                           ;I2C.c: 84:     if(a == 1){
  2902  0376  0370               	decf	I2C_Master_Read@a,w
  2903  0377  0471               	iorwf	I2C_Master_Read@a+1,w
  2904  0378  1D03               	btfss	3,2
  2905  0379  2B7B               	goto	u1211
  2906  037A  2B7C               	goto	u1210
  2907  037B                     u1211:
  2908  037B  2B80               	goto	l108
  2909  037C                     u1210:
  2910  037C                     l1488:
  2911                           
  2912                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 0;
  2913  037C  1683               	bsf	3,5	;RP0=1, select bank1
  2914  037D  1303               	bcf	3,6	;RP1=0, select bank1
  2915  037E  1291               	bcf	17,5	;volatile
  2916                           
  2917                           ;I2C.c: 86:     }else{
  2918  037F  2B83               	goto	l109
  2919  0380                     l108:
  2920                           
  2921                           ;I2C.c: 87:         SSPCON2bits.ACKDT = 1;
  2922  0380  1683               	bsf	3,5	;RP0=1, select bank1
  2923  0381  1303               	bcf	3,6	;RP1=0, select bank1
  2924  0382  1691               	bsf	17,5	;volatile
  2925  0383                     l109:	
  2926                           ;I2C.c: 88:     }
  2927                           
  2928                           
  2929                           ;I2C.c: 89:     SSPCON2bits.ACKEN = 1;
  2930  0383  1611               	bsf	17,4	;volatile
  2931  0384                     l1490:
  2932                           
  2933                           ;I2C.c: 90:     return temp;
  2934  0384  0875               	movf	I2C_Master_Read@temp+1,w
  2935  0385  00F1               	movwf	?_I2C_Master_Read+1
  2936  0386  0874               	movf	I2C_Master_Read@temp,w
  2937  0387  00F0               	movwf	?_I2C_Master_Read
  2938  0388                     l110:
  2939  0388  0008               	return
  2940  0389                     __end_of_I2C_Master_Read:
  2941                           
  2942                           	psect	text16
  2943  02D6                     __ptext16:	
  2944 ;; *************** function _I2C_Master_Wait *****************
  2945 ;; Defined at:
  2946 ;;		line 34 in file "I2C.c"
  2947 ;; Parameters:    Size  Location     Type
  2948 ;;		None
  2949 ;; Auto vars:     Size  Location     Type
  2950 ;;		None
  2951 ;; Return value:  Size  Location     Type
  2952 ;;                  1    wreg      void 
  2953 ;; Registers used:
  2954 ;;		wreg, status,2
  2955 ;; Tracked objects:
  2956 ;;		On entry : 0/0
  2957 ;;		On exit  : 0/0
  2958 ;;		Unchanged: 0/0
  2959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2960 ;;      Params:         0       0       0       0       0
  2961 ;;      Locals:         0       0       0       0       0
  2962 ;;      Temps:          0       0       0       0       0
  2963 ;;      Totals:         0       0       0       0       0
  2964 ;;Total ram usage:        0 bytes
  2965 ;; Hardware stack levels used:    1
  2966 ;; This function calls:
  2967 ;;		Nothing
  2968 ;; This function is called by:
  2969 ;;		_I2C_Master_Start
  2970 ;;		_I2C_Master_Stop
  2971 ;;		_I2C_Master_Write
  2972 ;;		_I2C_Master_Read
  2973 ;;		_I2C_Master_RepeatedStart
  2974 ;; This function uses a non-reentrant model
  2975 ;;
  2976                           
  2977                           
  2978                           ;psect for function _I2C_Master_Wait
  2979  02D6                     _I2C_Master_Wait:
  2980  02D6                     l1328:	
  2981                           ;incstack = 0
  2982                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  2983                           
  2984  02D6                     l90:	
  2985                           ;I2C.c: 36:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  2986                           
  2987  02D6  1683               	bsf	3,5	;RP0=1, select bank1
  2988  02D7  1303               	bcf	3,6	;RP1=0, select bank1
  2989  02D8  1914               	btfsc	20,2	;volatile
  2990  02D9  2ADB               	goto	u1021
  2991  02DA  2ADC               	goto	u1020
  2992  02DB                     u1021:
  2993  02DB  2AD6               	goto	l90
  2994  02DC                     u1020:
  2995  02DC                     l1330:
  2996  02DC  0811               	movf	17,w	;volatile
  2997  02DD  391F               	andlw	31
  2998  02DE  1D03               	btfss	3,2
  2999  02DF  2AE1               	goto	u1031
  3000  02E0  2AE2               	goto	u1030
  3001  02E1                     u1031:
  3002  02E1  2AD6               	goto	l90
  3003  02E2                     u1030:
  3004  02E2                     l93:
  3005  02E2  0008               	return
  3006  02E3                     __end_of_I2C_Master_Wait:
  3007                           
  3008                           	psect	text17
  3009  0389                     __ptext17:	
  3010 ;; *************** function _I2C_Master_Init *****************
  3011 ;; Defined at:
  3012 ;;		line 18 in file "I2C.c"
  3013 ;; Parameters:    Size  Location     Type
  3014 ;;  c               4    0[BANK0 ] const unsigned long 
  3015 ;; Auto vars:     Size  Location     Type
  3016 ;;		None
  3017 ;; Return value:  Size  Location     Type
  3018 ;;                  1    wreg      void 
  3019 ;; Registers used:
  3020 ;;		wreg, status,2, status,0, pclath, cstack
  3021 ;; Tracked objects:
  3022 ;;		On entry : 0/0
  3023 ;;		On exit  : 0/0
  3024 ;;		Unchanged: 0/0
  3025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3026 ;;      Params:         0       4       0       0       0
  3027 ;;      Locals:         0       0       0       0       0
  3028 ;;      Temps:          0       4       0       0       0
  3029 ;;      Totals:         0       8       0       0       0
  3030 ;;Total ram usage:        8 bytes
  3031 ;; Hardware stack levels used:    1
  3032 ;; Hardware stack levels required when called:    1
  3033 ;; This function calls:
  3034 ;;		___lldiv
  3035 ;; This function is called by:
  3036 ;;		_main
  3037 ;; This function uses a non-reentrant model
  3038 ;;
  3039                           
  3040                           
  3041                           ;psect for function _I2C_Master_Init
  3042  0389                     _I2C_Master_Init:
  3043  0389                     l1436:	
  3044                           ;incstack = 0
  3045                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  3046                           
  3047                           
  3048                           ;I2C.c: 18: void I2C_Master_Init(const unsigned long c);I2C.c: 19: {;I2C.c: 20:     SSPC
      +                          ON = 0b00101000;
  3049  0389  3028               	movlw	40
  3050  038A  1283               	bcf	3,5	;RP0=0, select bank0
  3051  038B  1303               	bcf	3,6	;RP1=0, select bank0
  3052  038C  0094               	movwf	20	;volatile
  3053  038D                     l1438:
  3054                           
  3055                           ;I2C.c: 21:     SSPCON2 = 0;
  3056  038D  1683               	bsf	3,5	;RP0=1, select bank1
  3057  038E  1303               	bcf	3,6	;RP1=0, select bank1
  3058  038F  0191               	clrf	17	;volatile
  3059  0390                     l1440:
  3060                           
  3061                           ;I2C.c: 22:     SSPADD = (4000000/(4*c))-1;
  3062  0390  1283               	bcf	3,5	;RP0=0, select bank0
  3063  0391  1303               	bcf	3,6	;RP1=0, select bank0
  3064  0392  082D               	movf	I2C_Master_Init@c,w
  3065  0393  00B1               	movwf	??_I2C_Master_Init
  3066  0394  082E               	movf	I2C_Master_Init@c+1,w
  3067  0395  00B2               	movwf	??_I2C_Master_Init+1
  3068  0396  082F               	movf	I2C_Master_Init@c+2,w
  3069  0397  00B3               	movwf	??_I2C_Master_Init+2
  3070  0398  0830               	movf	I2C_Master_Init@c+3,w
  3071  0399  00B4               	movwf	??_I2C_Master_Init+3
  3072  039A  3002               	movlw	2
  3073  039B                     u1175:
  3074  039B  1003               	clrc
  3075  039C  0DB1               	rlf	??_I2C_Master_Init,f
  3076  039D  0DB2               	rlf	??_I2C_Master_Init+1,f
  3077  039E  0DB3               	rlf	??_I2C_Master_Init+2,f
  3078  039F  0DB4               	rlf	??_I2C_Master_Init+3,f
  3079  03A0                     u1170:
  3080  03A0  3EFF               	addlw	-1
  3081  03A1  1D03               	skipz
  3082  03A2  2B9B               	goto	u1175
  3083  03A3  0834               	movf	??_I2C_Master_Init+3,w
  3084  03A4  00F3               	movwf	___lldiv@divisor+3
  3085  03A5  0833               	movf	??_I2C_Master_Init+2,w
  3086  03A6  00F2               	movwf	___lldiv@divisor+2
  3087  03A7  0832               	movf	??_I2C_Master_Init+1,w
  3088  03A8  00F1               	movwf	___lldiv@divisor+1
  3089  03A9  0831               	movf	??_I2C_Master_Init,w
  3090  03AA  00F0               	movwf	___lldiv@divisor
  3091  03AB  3000               	movlw	0
  3092  03AC  00F7               	movwf	___lldiv@dividend+3
  3093  03AD  303D               	movlw	61
  3094  03AE  00F6               	movwf	___lldiv@dividend+2
  3095  03AF  3009               	movlw	9
  3096  03B0  00F5               	movwf	___lldiv@dividend+1
  3097  03B1  3000               	movlw	0
  3098  03B2  00F4               	movwf	___lldiv@dividend
  3099  03B3  120A  118A  24C6  120A  118A  	fcall	___lldiv
  3100  03B8  0870               	movf	?___lldiv,w
  3101  03B9  3EFF               	addlw	255
  3102  03BA  1683               	bsf	3,5	;RP0=1, select bank1
  3103  03BB  1303               	bcf	3,6	;RP1=0, select bank1
  3104  03BC  0093               	movwf	19	;volatile
  3105  03BD                     l1442:
  3106                           
  3107                           ;I2C.c: 23:     SSPSTAT = 0;
  3108  03BD  0194               	clrf	20	;volatile
  3109  03BE                     l1444:
  3110                           
  3111                           ;I2C.c: 24:     TRISCbits.TRISC3 = 1;
  3112  03BE  1587               	bsf	7,3	;volatile
  3113  03BF                     l1446:
  3114                           
  3115                           ;I2C.c: 25:     TRISCbits.TRISC4 = 1;
  3116  03BF  1607               	bsf	7,4	;volatile
  3117  03C0                     l87:
  3118  03C0  0008               	return
  3119  03C1                     __end_of_I2C_Master_Init:
  3120                           
  3121                           	psect	text18
  3122  04C6                     __ptext18:	
  3123 ;; *************** function ___lldiv *****************
  3124 ;; Defined at:
  3125 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  3126 ;; Parameters:    Size  Location     Type
  3127 ;;  divisor         4    0[COMMON] unsigned long 
  3128 ;;  dividend        4    4[COMMON] unsigned long 
  3129 ;; Auto vars:     Size  Location     Type
  3130 ;;  quotient        4    9[COMMON] unsigned long 
  3131 ;;  counter         1   13[COMMON] unsigned char 
  3132 ;; Return value:  Size  Location     Type
  3133 ;;                  4    0[COMMON] unsigned long 
  3134 ;; Registers used:
  3135 ;;		wreg, status,2, status,0
  3136 ;; Tracked objects:
  3137 ;;		On entry : 0/0
  3138 ;;		On exit  : 0/0
  3139 ;;		Unchanged: 0/0
  3140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3141 ;;      Params:         8       0       0       0       0
  3142 ;;      Locals:         5       0       0       0       0
  3143 ;;      Temps:          1       0       0       0       0
  3144 ;;      Totals:        14       0       0       0       0
  3145 ;;Total ram usage:       14 bytes
  3146 ;; Hardware stack levels used:    1
  3147 ;; This function calls:
  3148 ;;		Nothing
  3149 ;; This function is called by:
  3150 ;;		_I2C_Master_Init
  3151 ;;		_UARTInit
  3152 ;; This function uses a non-reentrant model
  3153 ;;
  3154                           
  3155                           
  3156                           ;psect for function ___lldiv
  3157  04C6                     ___lldiv:
  3158  04C6                     l1342:	
  3159                           ;incstack = 0
  3160                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3161                           
  3162  04C6  3000               	movlw	0
  3163  04C7  00FC               	movwf	___lldiv@quotient+3
  3164  04C8  3000               	movlw	0
  3165  04C9  00FB               	movwf	___lldiv@quotient+2
  3166  04CA  3000               	movlw	0
  3167  04CB  00FA               	movwf	___lldiv@quotient+1
  3168  04CC  3000               	movlw	0
  3169  04CD  00F9               	movwf	___lldiv@quotient
  3170  04CE  0873               	movf	___lldiv@divisor+3,w
  3171  04CF  0472               	iorwf	___lldiv@divisor+2,w
  3172  04D0  0471               	iorwf	___lldiv@divisor+1,w
  3173  04D1  0470               	iorwf	___lldiv@divisor,w
  3174  04D2  1903               	skipnz
  3175  04D3  2CD5               	goto	u1041
  3176  04D4  2CD6               	goto	u1040
  3177  04D5                     u1041:
  3178  04D5  2D23               	goto	l1362
  3179  04D6                     u1040:
  3180  04D6                     l1344:
  3181  04D6  01FD               	clrf	___lldiv@counter
  3182  04D7  0AFD               	incf	___lldiv@counter,f
  3183  04D8  2CE6               	goto	l1348
  3184  04D9                     l1346:
  3185  04D9  3001               	movlw	1
  3186  04DA  00F8               	movwf	??___lldiv
  3187  04DB                     u1055:
  3188  04DB  1003               	clrc
  3189  04DC  0DF0               	rlf	___lldiv@divisor,f
  3190  04DD  0DF1               	rlf	___lldiv@divisor+1,f
  3191  04DE  0DF2               	rlf	___lldiv@divisor+2,f
  3192  04DF  0DF3               	rlf	___lldiv@divisor+3,f
  3193  04E0  0BF8               	decfsz	??___lldiv,f
  3194  04E1  2CDB               	goto	u1055
  3195  04E2  3001               	movlw	1
  3196  04E3  00F8               	movwf	??___lldiv
  3197  04E4  0878               	movf	??___lldiv,w
  3198  04E5  07FD               	addwf	___lldiv@counter,f
  3199  04E6                     l1348:
  3200  04E6  1FF3               	btfss	___lldiv@divisor+3,7
  3201  04E7  2CE9               	goto	u1061
  3202  04E8  2CEA               	goto	u1060
  3203  04E9                     u1061:
  3204  04E9  2CD9               	goto	l1346
  3205  04EA                     u1060:
  3206  04EA                     l1350:
  3207  04EA  3001               	movlw	1
  3208  04EB  00F8               	movwf	??___lldiv
  3209  04EC                     u1075:
  3210  04EC  1003               	clrc
  3211  04ED  0DF9               	rlf	___lldiv@quotient,f
  3212  04EE  0DFA               	rlf	___lldiv@quotient+1,f
  3213  04EF  0DFB               	rlf	___lldiv@quotient+2,f
  3214  04F0  0DFC               	rlf	___lldiv@quotient+3,f
  3215  04F1  0BF8               	decfsz	??___lldiv,f
  3216  04F2  2CEC               	goto	u1075
  3217  04F3                     l1352:
  3218  04F3  0873               	movf	___lldiv@divisor+3,w
  3219  04F4  0277               	subwf	___lldiv@dividend+3,w
  3220  04F5  1D03               	skipz
  3221  04F6  2D01               	goto	u1085
  3222  04F7  0872               	movf	___lldiv@divisor+2,w
  3223  04F8  0276               	subwf	___lldiv@dividend+2,w
  3224  04F9  1D03               	skipz
  3225  04FA  2D01               	goto	u1085
  3226  04FB  0871               	movf	___lldiv@divisor+1,w
  3227  04FC  0275               	subwf	___lldiv@dividend+1,w
  3228  04FD  1D03               	skipz
  3229  04FE  2D01               	goto	u1085
  3230  04FF  0870               	movf	___lldiv@divisor,w
  3231  0500  0274               	subwf	___lldiv@dividend,w
  3232  0501                     u1085:
  3233  0501  1C03               	skipc
  3234  0502  2D04               	goto	u1081
  3235  0503  2D05               	goto	u1080
  3236  0504                     u1081:
  3237  0504  2D14               	goto	l1358
  3238  0505                     u1080:
  3239  0505                     l1354:
  3240  0505  0870               	movf	___lldiv@divisor,w
  3241  0506  02F4               	subwf	___lldiv@dividend,f
  3242  0507  0871               	movf	___lldiv@divisor+1,w
  3243  0508  1C03               	skipc
  3244  0509  0F71               	incfsz	___lldiv@divisor+1,w
  3245  050A  02F5               	subwf	___lldiv@dividend+1,f
  3246  050B  0872               	movf	___lldiv@divisor+2,w
  3247  050C  1C03               	skipc
  3248  050D  0F72               	incfsz	___lldiv@divisor+2,w
  3249  050E  02F6               	subwf	___lldiv@dividend+2,f
  3250  050F  0873               	movf	___lldiv@divisor+3,w
  3251  0510  1C03               	skipc
  3252  0511  0F73               	incfsz	___lldiv@divisor+3,w
  3253  0512  02F7               	subwf	___lldiv@dividend+3,f
  3254  0513                     l1356:
  3255  0513  1479               	bsf	___lldiv@quotient,0
  3256  0514                     l1358:
  3257  0514  3001               	movlw	1
  3258  0515                     u1095:
  3259  0515  1003               	clrc
  3260  0516  0CF3               	rrf	___lldiv@divisor+3,f
  3261  0517  0CF2               	rrf	___lldiv@divisor+2,f
  3262  0518  0CF1               	rrf	___lldiv@divisor+1,f
  3263  0519  0CF0               	rrf	___lldiv@divisor,f
  3264  051A  3EFF               	addlw	-1
  3265  051B  1D03               	skipz
  3266  051C  2D15               	goto	u1095
  3267  051D                     l1360:
  3268  051D  3001               	movlw	1
  3269  051E  02FD               	subwf	___lldiv@counter,f
  3270  051F  1D03               	btfss	3,2
  3271  0520  2D22               	goto	u1101
  3272  0521  2D23               	goto	u1100
  3273  0522                     u1101:
  3274  0522  2CEA               	goto	l1350
  3275  0523                     u1100:
  3276  0523                     l1362:
  3277  0523  087C               	movf	___lldiv@quotient+3,w
  3278  0524  00F3               	movwf	?___lldiv+3
  3279  0525  087B               	movf	___lldiv@quotient+2,w
  3280  0526  00F2               	movwf	?___lldiv+2
  3281  0527  087A               	movf	___lldiv@quotient+1,w
  3282  0528  00F1               	movwf	?___lldiv+1
  3283  0529  0879               	movf	___lldiv@quotient,w
  3284  052A  00F0               	movwf	?___lldiv
  3285  052B                     l342:
  3286  052B  0008               	return
  3287  052C                     __end_of___lldiv:
  3288  007E                     btemp	set	126	;btemp
  3289  007E                     wtemp0	set	126
  3290                           
  3291                           	psect	config
  3292                           
  3293                           ;Config register CONFIG1 @ 0x2007
  3294                           ;	Oscillator Selection bits
  3295                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3296                           ;	Watchdog Timer Enable bit
  3297                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3298                           ;	Power-up Timer Enable bit
  3299                           ;	PWRTE = OFF, PWRT disabled
  3300                           ;	RE3/MCLR pin function select bit
  3301                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3302                           ;	Code Protection bit
  3303                           ;	CP = OFF, Program memory code protection is disabled
  3304                           ;	Data Code Protection bit
  3305                           ;	CPD = OFF, Data memory code protection is disabled
  3306                           ;	Brown Out Reset Selection bits
  3307                           ;	BOREN = OFF, BOR disabled
  3308                           ;	Internal External Switchover bit
  3309                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3310                           ;	Fail-Safe Clock Monitor Enabled bit
  3311                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3312                           ;	Low Voltage Programming Enable bit
  3313                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3314                           ;	In-Circuit Debugger Mode bit
  3315                           ;	DEBUG = 0x1, unprogrammed default
  3316  2007                     	org	8199
  3317  2007  20D4               	dw	8404
  3318                           
  3319                           ;Config register CONFIG2 @ 0x2008
  3320                           ;	Brown-out Reset Selection bit
  3321                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3322                           ;	Flash Program Memory Self Write Enable bits
  3323                           ;	WRT = OFF, Write protection off
  3324  2008                     	org	8200
  3325  2008  3FFF               	dw	16383

Data Sizes:
    Strings     29
    Constant    0
    Data        0
    BSS         13
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     12      25
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(1) Largest target is 10
		 -> numero(BANK0[10]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 10
		 -> numero(BANK0[10]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 10
		 -> numero(BANK0[10]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 10
		 -> numero(BANK0[10]), 

    LcdWriteString@value	PTR const unsigned char  size(2) Largest target is 17
		 -> numero(BANK0[10]), STR_3(CODE[6]), STR_2(CODE[6]), STR_1(CODE[17]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 10
		 -> numero(BANK0[10]), 


Critical Paths under _main in COMMON

    _main->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _UARTInit->___lldiv
    _LcdWriteString->_LcdWriteChar
    _LcdWriteChar->_LcdPort
    _LcdSetCursor->_LcdCmd
    _LcdInit->_LcdCmd
    _LcdCmd->_LcdPort
    _I2C_Master_Init->___lldiv

Critical Paths under _main in BANK0

    _main->_itoa
    _itoa->_utoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    5528
                                             10 BANK0      2     2      0
                    _I2C_Master_Init
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            _LcdInit
                       _LcdSetCursor
                       _LcdWriteChar
                     _LcdWriteString
                           _UARTInit
                               _itoa
 ---------------------------------------------------------------------------------
 (1) _itoa                                                 7     3      4    1797
                                             13 COMMON     1     1      0
                                              4 BANK0      6     2      4
                               _utoa
 ---------------------------------------------------------------------------------
 (2) _utoa                                                 9     5      4    1264
                                              8 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     466
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _UARTInit                                             9     4      5     836
                                              0 BANK0      9     4      5
                            ___lldiv
 ---------------------------------------------------------------------------------
 (1) _LcdWriteString                                       7     5      2     668
                                              4 COMMON     7     5      2
                       _LcdWriteChar
 ---------------------------------------------------------------------------------
 (2) _LcdWriteChar                                         2     2      0     198
                                              2 COMMON     2     2      0
                            _LcdPort
 ---------------------------------------------------------------------------------
 (1) _LcdSetCursor                                         4     3      1     416
                                              5 COMMON     4     3      1
                             _LcdCmd
 ---------------------------------------------------------------------------------
 (1) _LcdInit                                              2     2      0     374
                                              5 COMMON     2     2      0
                             _LcdCmd
                            _LcdPort
 ---------------------------------------------------------------------------------
 (2) _LcdCmd                                               3     3      0     198
                                              2 COMMON     3     3      0
                            _LcdPort
 ---------------------------------------------------------------------------------
 (3) _LcdPort                                              2     2      0     176
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     250
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     273
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     716
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     618
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _LcdInit
     _LcdCmd
       _LcdPort
     _LcdPort
   _LcdSetCursor
     _LcdCmd
       _LcdPort
   _LcdWriteChar
     _LcdPort
   _LcdWriteString
     _LcdWriteChar
       _LcdPort
   _UARTInit
     ___lldiv
   _itoa
     _utoa
       ___lwdiv
       ___lwmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      27       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      C      19       5       31.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      27      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Sep 02 11:09:07 2021

        UARTInit@baud_rate 002D                          pc 0002                         l90 02D6  
                       l93 02E2                         l87 03C0                         l96 02C2  
                       fsr 0004                        l110 0388                        l102 02CB  
                      l105 02D5                        l108 0380                        l109 0383  
                      l141 0311                        l151 0334                        l138 0696  
                      l154 04C5                        l163 043C                        l157 02F7  
                      l342 052B                        l188 059A                        l760 035A  
                      l578 0480                        l588 03FA                        l766 05F5  
                      l768 060C                        _GIE 005F                        _RD0 0040  
                      _RD1 0041                        _RD2 0042                        _RE0 0048  
                      _RD3 0043                        _RD4 0044                        _RE2 004A  
                      _RD5 0045                        _RD6 0046                        _RD7 0047  
                      u720 0639                        u704 062A                        u721 0635  
                      u810 066F                        u811 066B                        u715 062D  
                      u660 0615                        u805 0663                        u661 0611  
                      u750 064B                        u734 063C                        u910 0457  
                      u751 0647                        u911 0456                        u840 0681  
                      u824 0672                        u841 067D                        u745 063F  
                      u905 0449                        u690 0627                        u674 0618  
                      u930 0468                        u835 0675                        u691 0623  
                      u931 0467                        u780 065D                        u764 064E  
                      u781 0659                        u685 061B                        u925 0458  
                      u870 0693                        u854 0684                        u950 047C  
                      u871 068F                        u775 0651                        u951 047B  
                      u935 0464                        u960 03C7                        u865 0687  
                      u945 0470                        u961 03C6                        u794 0660  
                      u890 0445                        u891 0444                        u884 0696  
                      u980 03D9                        u981 03D8                        u990 03E3  
                      u991 03E2                        u975 03CB                        u995 03DF  
                      _hum 0020                        fsr0 0004                        indf 0000  
                     l1300 03CA                       l1310 03E9                       l1302 03D1  
                     l1400 0490                       l1320 02E7                       l1312 03F0  
                     l1304 03D5                       l1330 02DC                       l1402 049E  
                     l1322 02ED                       l1410 055E                       l1306 03D9  
                     l1314 03F6                       l1340 030E                       l1332 02F9  
                     l1404 04A4                       l1324 02F0                       l1420 058E  
                     l1412 0560                       l1308 03E3                       l1500 0338  
                     l1350 04EA                       l1342 04C6                       l1334 02FC  
                     l1326 02F4                       l1318 02E4                       l1430 0595  
                     l1422 058F                       l1414 058B                       l1406 052C  
                     l1270 043D                       l1502 033C                       l1360 051D  
                     l1352 04F3                       l1344 04D6                       l1440 0390  
                     l1328 02D6                       l1336 0302                       l1432 0596  
                     l1424 0592                       l1416 058C                       l1408 0533  
                     l1280 0453                       l1272 043F                       l1504 0343  
                     l1520 06A5                       l1512 0697                       l1354 0505  
                     l1346 04D9                       l1362 0523                       l1442 03BD  
                     l1266 060E                       l1338 0305                       l1450 0314  
                     l1434 0599                       l1426 0593                       l1418 058D  
                     l1290 0476                       l1282 0457                       l1274 0445  
                     l1370 05B5                       l1506 0347                       l1530 06DB  
                     l1522 06AA                       l1514 069F                       l1356 0513  
                     l1348 04E6                       l1444 03BE                       l1436 0389  
                     l1268 0618                       l1452 031C                       l1428 0594  
                     l1284 0468                       l1276 0448                       l1292 047C  
                     l1380 05D8                       l1372 05B9                       l1508 034C  
                     l1540 0706                       l1532 06E0                       l1524 06BB  
                     l1516 06A1                       l1358 0514                       l1446 03BF  
                     l1438 038D                       l1470 02BA                       l1462 03FB  
                     l1286 046E                       l1278 044F                       l1390 0602  
                     l1382 05E9                       l1374 05BF                       l1366 059E  
                     l1550 0727                       l1542 070E                       l1534 06E9  
                     l1526 06CA                       l1518 06A2                       l1480 0360  
                     l1472 02BF                       l1456 0324                       l1448 0313  
                     l1464 03FE                       l1288 046F                       l1296 03C1  
                     l1392 0608                       l1384 05F1                       l1376 05C3  
                     l1368 05A2                       l1560 0770                       l1552 0737  
                     l1544 0713                       l1536 06F7                       l1528 06D2  
                     l1490 0384                       l1482 0368                       l1474 02CC  
                     l1466 041A                       l1298 03C7                       l1386 05F9  
                     l1378 05C5                       l1570 07A6                       l1562 077E  
                     l1554 0758                       l1650 072F                       l1546 071D  
                     l1538 06FC                       l1484 0371                       l1476 02D1  
                     l1396 0481                       l1652 032C                       l1468 0420  
                     l1388 0600                       l1580 07D4                       l1572 07AC  
                     l1564 0783                       l1556 0762                       l1486 0376  
                     l1478 035B                       l1494 02C3                       l1398 0487  
                     l1582 07E3                       l1574 07B5                       l1566 078D  
                     l1558 0767                       l1488 037C                       l1496 02C8  
                     l1576 07BB                       l1568 07A0                       l1498 0338  
                     l1578 07C1                       STR_1 0013                       STR_2 0024  
                     STR_3 002A                       u1010 03F6                       u1011 03F5  
                     u1100 0523                       u1020 02DC                       u1101 0522  
                     u1021 02DB                       u1005 03EA                       u1030 02E2  
                     u1110 05BF                       u1031 02E1                       u1111 05BE  
                     u1040 04D6                       u1200 043C                       u1120 05F1  
                     u1041 04D5                       u1201 043B                       u1121 05F0  
                     u1210 037C                       u1130 0608                       u1211 037B  
                     u1131 0607                       u1060 04EA                       u1140 0533  
                     u1220 033C                       u1061 04E9                       u1141 0532  
                     u1221 033B                       u1150 0541                       u1055 04DB  
                     u1080 0505                       u1160 056E                       u1081 0504  
                     u1170 03A0                       u1075 04EC                       u1307 0309  
                     u1155 053C                       u1180 0408                       u1085 0501  
                     u1165 0569                       u1237 0702                       u1190 042A  
                     u1095 0515                       u1175 039B                       u1247 075E  
                     u1257 0789                       u1267 02F2                       u1277 048B  
                     u1287 049A                       u1297 04A8                       _PEIE 005E  
                     _hall 0022                       _main 0697                       _itoa 0335  
                     _temp 0021                       btemp 007E                       _utoa 059B  
                     start 0000            LcdSetCursor@row 0078            __end_of_LcdInit 04C6  
          __end_of_LcdPort 0697       __end_of_LcdSetCursor 0335           ?_I2C_Master_Init 002D  
         ?_I2C_Master_Read 0070           ?_I2C_Master_Wait 0070           ?_I2C_Master_Stop 0070  
                    ?_main 0070                      ?_itoa 0031                      _ANSEL 0188  
          __end_of___lldiv 052C                      ?_utoa 0078            __end_of___lwdiv 0481  
          __end_of___lwmod 03FB                      _RCREG 001A                      _SPBRG 0099  
                    _PORTA 0005                      _TRISA 0085                      _TRISB 0086  
                    _TRISD 0088                      _SSPIE 0463                      _TRISE 0089  
                    _SSPIF 0063                      _TXREG 0019           __end_of_UARTInit 059B  
                    pclath 000A                      utoa@c 002F                      utoa@v 002D  
                    status 0003                      wtemp0 007E       __end_of_LcdWriteChar 02F8  
          __initialization 07ED               __end_of_main 07ED               __end_of_itoa 035B  
             __end_of_utoa 060D                     ??_main 0037                     ??_itoa 007D  
                   ??_utoa 007C          ?_I2C_Master_Start 0070          ?_I2C_Master_Write 0070  
       ??_I2C_Master_Start 0070         ??_I2C_Master_Write 0072                     _ANSELH 0189  
                ??_LcdInit 0075                  ??_LcdPort 0070                     _SSPADD 0093  
                   _TRISC3 043B                     _TRISC4 043C                     _SSPCON 0014  
                   _SSPBUF 0013                     _LcdCmd 02F8                  ??___lldiv 0078  
                ??___lwdiv 0074                  ??___lwmod 0074                     _numero 0023  
  __end_of__initialization 07FC    __size_of_LcdWriteString 0042      __size_of_LcdSetCursor 0023  
        LcdWriteChar@value 0073             __pcstackCOMMON 0070                  ?_UARTInit 002D  
    __size_of_LcdWriteChar 0015               _LcdSetCursor 0312                 __pbssBANK0 0020  
                  ?_LcdCmd 0070                 __pmaintext 0697                 ??_UARTInit 0032  
             _LcdWriteChar 02E3                    _SSPCON2 0091                    _SSPSTAT 0094  
               __stringtab 0003                    _LcdInit 0481                    _LcdPort 060D  
          __size_of_LcdCmd 001A                    ___lldiv 04C6                    ___lwdiv 043D  
                  ___lwmod 03C1                    __ptext1 0335                    __ptext2 059B  
                  __ptext3 03C1                    __ptext4 043D                    __ptext5 052C  
                  __ptext6 03FB                    __ptext7 02E3                    __ptext8 0312  
                  __ptext9 0481   __size_of_I2C_Master_Init 0038   __size_of_I2C_Master_Read 002E  
 __size_of_I2C_Master_Wait 000D   __size_of_I2C_Master_Stop 0009       end_of_initialization 07FC  
           _LcdWriteString 03FB                    itoa@buf 0036                    itoa@val 0031  
__size_of_I2C_Master_Start 0009  __size_of_I2C_Master_Write 000A            ___lldiv@divisor 0070  
          ___lldiv@counter 007D                  _RCSTAbits 0018           I2C_Master_Init@c 002D  
         I2C_Master_Read@a 0070                    utoa@buf 0030                    utoa@val 0078  
                _TRISCbits 0087         LcdSetCursor@column 0075     __end_of_LcdWriteString 043D  
                _TXSTAbits 0098             __end_of_LcdCmd 0312          __size_of_UARTInit 006F  
      start_initialization 07ED            ?_LcdWriteString 0074          ??_I2C_Master_Init 0031  
        ??_I2C_Master_Read 0072          ??_I2C_Master_Wait 0070          ??_I2C_Master_Stop 0070  
                 ??_LcdCmd 0072                  ___latbits 0002              __pcstackBANK0 002D  
                 ?_LcdInit 0070                   ?_LcdPort 0070           _I2C_Master_Start 02BA  
         _I2C_Master_Write 02CC           ___lwdiv@dividend 0072                   ?___lldiv 0070  
                 ?___lwdiv 0070                   ?___lwmod 0070                  __pstrings 0003  
         ___lwdiv@quotient 0075                   _PIR1bits 000C                   _UARTInit 052C  
              __stringbase 0012        I2C_Master_Read@temp 0074           __size_of_LcdInit 0045  
         __size_of_LcdPort 008A               LcdPort@value 0071               UARTInit@BRGH 0031  
              LcdCmd@value 0074           __size_of___lldiv 0066           __size_of___lwdiv 0044  
         __size_of___lwmod 003A         __end_of__stringtab 0013           ??_LcdWriteString 0076  
          _I2C_Master_Init 0389            _I2C_Master_Read 035B            _I2C_Master_Wait 02D6  
          _I2C_Master_Stop 02C3            ___lwdiv@divisor 0070            ___lwdiv@counter 0077  
                 __ptext10 02F8                   __ptext11 060D                   __ptext12 02CC  
                 __ptext13 02C3                   __ptext14 02BA                   __ptext15 035B  
                 __ptext16 02D6                   __ptext17 0389                   __ptext18 04C6  
            ?_LcdSetCursor 0075              __size_of_main 0156              __size_of_itoa 0026  
            __size_of_utoa 0072            LcdWriteString@i 0079              ?_LcdWriteChar 0070  
 __end_of_I2C_Master_Start 02C3   __end_of_I2C_Master_Write 02D6                   itoa@base 0033  
           ??_LcdSetCursor 0076           ___lwmod@dividend 0072           ___lldiv@dividend 0074  
                stringcode 000D    __end_of_I2C_Master_Init 03C1    __end_of_I2C_Master_Read 0389  
  __end_of_I2C_Master_Wait 02E3    __end_of_I2C_Master_Stop 02CC                   utoa@base 007A  
           ??_LcdWriteChar 0072           ___lldiv@quotient 0079          I2C_Master_Write@d 0070  
          ___lwmod@divisor 0070            ___lwmod@counter 0075                   stringdir 000D  
                 stringtab 0003                _SSPCON2bits 0091        LcdWriteString@value 0074  
