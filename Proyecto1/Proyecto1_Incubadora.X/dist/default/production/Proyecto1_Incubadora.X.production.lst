

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Sep 02 23:34:30 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	strings,global,class=STRING,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	intentry,global,class=CODE,delta=2
    37                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    38                           	dabs	1,0x7E,2
    39  0000                     
    40                           ; Version 2.20
    41                           ; Generated 12/02/2020 GMT
    42                           ; 
    43                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC16F887 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     	;# 
    75  0001                     	;# 
    76  0002                     	;# 
    77  0003                     	;# 
    78  0004                     	;# 
    79  0005                     	;# 
    80  0006                     	;# 
    81  0007                     	;# 
    82  0008                     	;# 
    83  0009                     	;# 
    84  000A                     	;# 
    85  000B                     	;# 
    86  000C                     	;# 
    87  000D                     	;# 
    88  000E                     	;# 
    89  000E                     	;# 
    90  000F                     	;# 
    91  0010                     	;# 
    92  0011                     	;# 
    93  0012                     	;# 
    94  0013                     	;# 
    95  0014                     	;# 
    96  0015                     	;# 
    97  0015                     	;# 
    98  0016                     	;# 
    99  0017                     	;# 
   100  0018                     	;# 
   101  0019                     	;# 
   102  001A                     	;# 
   103  001B                     	;# 
   104  001B                     	;# 
   105  001C                     	;# 
   106  001D                     	;# 
   107  001E                     	;# 
   108  001F                     	;# 
   109  0081                     	;# 
   110  0085                     	;# 
   111  0086                     	;# 
   112  0087                     	;# 
   113  0088                     	;# 
   114  0089                     	;# 
   115  008C                     	;# 
   116  008D                     	;# 
   117  008E                     	;# 
   118  008F                     	;# 
   119  0090                     	;# 
   120  0091                     	;# 
   121  0092                     	;# 
   122  0093                     	;# 
   123  0093                     	;# 
   124  0093                     	;# 
   125  0094                     	;# 
   126  0095                     	;# 
   127  0096                     	;# 
   128  0097                     	;# 
   129  0098                     	;# 
   130  0099                     	;# 
   131  009A                     	;# 
   132  009B                     	;# 
   133  009C                     	;# 
   134  009D                     	;# 
   135  009E                     	;# 
   136  009F                     	;# 
   137  0105                     	;# 
   138  0107                     	;# 
   139  0108                     	;# 
   140  0109                     	;# 
   141  010C                     	;# 
   142  010C                     	;# 
   143  010D                     	;# 
   144  010E                     	;# 
   145  010F                     	;# 
   146  0185                     	;# 
   147  0187                     	;# 
   148  0188                     	;# 
   149  0189                     	;# 
   150  018C                     	;# 
   151  018D                     	;# 
   152  0000                     	;# 
   153  0001                     	;# 
   154  0002                     	;# 
   155  0003                     	;# 
   156  0004                     	;# 
   157  0005                     	;# 
   158  0006                     	;# 
   159  0007                     	;# 
   160  0008                     	;# 
   161  0009                     	;# 
   162  000A                     	;# 
   163  000B                     	;# 
   164  000C                     	;# 
   165  000D                     	;# 
   166  000E                     	;# 
   167  000E                     	;# 
   168  000F                     	;# 
   169  0010                     	;# 
   170  0011                     	;# 
   171  0012                     	;# 
   172  0013                     	;# 
   173  0014                     	;# 
   174  0015                     	;# 
   175  0015                     	;# 
   176  0016                     	;# 
   177  0017                     	;# 
   178  0018                     	;# 
   179  0019                     	;# 
   180  001A                     	;# 
   181  001B                     	;# 
   182  001B                     	;# 
   183  001C                     	;# 
   184  001D                     	;# 
   185  001E                     	;# 
   186  001F                     	;# 
   187  0081                     	;# 
   188  0085                     	;# 
   189  0086                     	;# 
   190  0087                     	;# 
   191  0088                     	;# 
   192  0089                     	;# 
   193  008C                     	;# 
   194  008D                     	;# 
   195  008E                     	;# 
   196  008F                     	;# 
   197  0090                     	;# 
   198  0091                     	;# 
   199  0092                     	;# 
   200  0093                     	;# 
   201  0093                     	;# 
   202  0093                     	;# 
   203  0094                     	;# 
   204  0095                     	;# 
   205  0096                     	;# 
   206  0097                     	;# 
   207  0098                     	;# 
   208  0099                     	;# 
   209  009A                     	;# 
   210  009B                     	;# 
   211  009C                     	;# 
   212  009D                     	;# 
   213  009E                     	;# 
   214  009F                     	;# 
   215  0105                     	;# 
   216  0107                     	;# 
   217  0108                     	;# 
   218  0109                     	;# 
   219  010C                     	;# 
   220  010C                     	;# 
   221  010D                     	;# 
   222  010E                     	;# 
   223  010F                     	;# 
   224  0185                     	;# 
   225  0187                     	;# 
   226  0188                     	;# 
   227  0189                     	;# 
   228  018C                     	;# 
   229  018D                     	;# 
   230  0000                     	;# 
   231  0001                     	;# 
   232  0002                     	;# 
   233  0003                     	;# 
   234  0004                     	;# 
   235  0005                     	;# 
   236  0006                     	;# 
   237  0007                     	;# 
   238  0008                     	;# 
   239  0009                     	;# 
   240  000A                     	;# 
   241  000B                     	;# 
   242  000C                     	;# 
   243  000D                     	;# 
   244  000E                     	;# 
   245  000E                     	;# 
   246  000F                     	;# 
   247  0010                     	;# 
   248  0011                     	;# 
   249  0012                     	;# 
   250  0013                     	;# 
   251  0014                     	;# 
   252  0015                     	;# 
   253  0015                     	;# 
   254  0016                     	;# 
   255  0017                     	;# 
   256  0018                     	;# 
   257  0019                     	;# 
   258  001A                     	;# 
   259  001B                     	;# 
   260  001B                     	;# 
   261  001C                     	;# 
   262  001D                     	;# 
   263  001E                     	;# 
   264  001F                     	;# 
   265  0081                     	;# 
   266  0085                     	;# 
   267  0086                     	;# 
   268  0087                     	;# 
   269  0088                     	;# 
   270  0089                     	;# 
   271  008C                     	;# 
   272  008D                     	;# 
   273  008E                     	;# 
   274  008F                     	;# 
   275  0090                     	;# 
   276  0091                     	;# 
   277  0092                     	;# 
   278  0093                     	;# 
   279  0093                     	;# 
   280  0093                     	;# 
   281  0094                     	;# 
   282  0095                     	;# 
   283  0096                     	;# 
   284  0097                     	;# 
   285  0098                     	;# 
   286  0099                     	;# 
   287  009A                     	;# 
   288  009B                     	;# 
   289  009C                     	;# 
   290  009D                     	;# 
   291  009E                     	;# 
   292  009F                     	;# 
   293  0105                     	;# 
   294  0107                     	;# 
   295  0108                     	;# 
   296  0109                     	;# 
   297  010C                     	;# 
   298  010C                     	;# 
   299  010D                     	;# 
   300  010E                     	;# 
   301  010F                     	;# 
   302  0185                     	;# 
   303  0187                     	;# 
   304  0188                     	;# 
   305  0189                     	;# 
   306  018C                     	;# 
   307  018D                     	;# 
   308  0000                     	;# 
   309  0001                     	;# 
   310  0002                     	;# 
   311  0003                     	;# 
   312  0004                     	;# 
   313  0005                     	;# 
   314  0006                     	;# 
   315  0007                     	;# 
   316  0008                     	;# 
   317  0009                     	;# 
   318  000A                     	;# 
   319  000B                     	;# 
   320  000C                     	;# 
   321  000D                     	;# 
   322  000E                     	;# 
   323  000E                     	;# 
   324  000F                     	;# 
   325  0010                     	;# 
   326  0011                     	;# 
   327  0012                     	;# 
   328  0013                     	;# 
   329  0014                     	;# 
   330  0015                     	;# 
   331  0015                     	;# 
   332  0016                     	;# 
   333  0017                     	;# 
   334  0018                     	;# 
   335  0019                     	;# 
   336  001A                     	;# 
   337  001B                     	;# 
   338  001B                     	;# 
   339  001C                     	;# 
   340  001D                     	;# 
   341  001E                     	;# 
   342  001F                     	;# 
   343  0081                     	;# 
   344  0085                     	;# 
   345  0086                     	;# 
   346  0087                     	;# 
   347  0088                     	;# 
   348  0089                     	;# 
   349  008C                     	;# 
   350  008D                     	;# 
   351  008E                     	;# 
   352  008F                     	;# 
   353  0090                     	;# 
   354  0091                     	;# 
   355  0092                     	;# 
   356  0093                     	;# 
   357  0093                     	;# 
   358  0093                     	;# 
   359  0094                     	;# 
   360  0095                     	;# 
   361  0096                     	;# 
   362  0097                     	;# 
   363  0098                     	;# 
   364  0099                     	;# 
   365  009A                     	;# 
   366  009B                     	;# 
   367  009C                     	;# 
   368  009D                     	;# 
   369  009E                     	;# 
   370  009F                     	;# 
   371  0105                     	;# 
   372  0107                     	;# 
   373  0108                     	;# 
   374  0109                     	;# 
   375  010C                     	;# 
   376  010C                     	;# 
   377  010D                     	;# 
   378  010E                     	;# 
   379  010F                     	;# 
   380  0185                     	;# 
   381  0187                     	;# 
   382  0188                     	;# 
   383  0189                     	;# 
   384  018C                     	;# 
   385  018D                     	;# 
   386  0000                     	;# 
   387  0001                     	;# 
   388  0002                     	;# 
   389  0003                     	;# 
   390  0004                     	;# 
   391  0005                     	;# 
   392  0006                     	;# 
   393  0007                     	;# 
   394  0008                     	;# 
   395  0009                     	;# 
   396  000A                     	;# 
   397  000B                     	;# 
   398  000C                     	;# 
   399  000D                     	;# 
   400  000E                     	;# 
   401  000E                     	;# 
   402  000F                     	;# 
   403  0010                     	;# 
   404  0011                     	;# 
   405  0012                     	;# 
   406  0013                     	;# 
   407  0014                     	;# 
   408  0015                     	;# 
   409  0015                     	;# 
   410  0016                     	;# 
   411  0017                     	;# 
   412  0018                     	;# 
   413  0019                     	;# 
   414  001A                     	;# 
   415  001B                     	;# 
   416  001B                     	;# 
   417  001C                     	;# 
   418  001D                     	;# 
   419  001E                     	;# 
   420  001F                     	;# 
   421  0081                     	;# 
   422  0085                     	;# 
   423  0086                     	;# 
   424  0087                     	;# 
   425  0088                     	;# 
   426  0089                     	;# 
   427  008C                     	;# 
   428  008D                     	;# 
   429  008E                     	;# 
   430  008F                     	;# 
   431  0090                     	;# 
   432  0091                     	;# 
   433  0092                     	;# 
   434  0093                     	;# 
   435  0093                     	;# 
   436  0093                     	;# 
   437  0094                     	;# 
   438  0095                     	;# 
   439  0096                     	;# 
   440  0097                     	;# 
   441  0098                     	;# 
   442  0099                     	;# 
   443  009A                     	;# 
   444  009B                     	;# 
   445  009C                     	;# 
   446  009D                     	;# 
   447  009E                     	;# 
   448  009F                     	;# 
   449  0105                     	;# 
   450  0107                     	;# 
   451  0108                     	;# 
   452  0109                     	;# 
   453  010C                     	;# 
   454  010C                     	;# 
   455  010D                     	;# 
   456  010E                     	;# 
   457  010F                     	;# 
   458  0185                     	;# 
   459  0187                     	;# 
   460  0188                     	;# 
   461  0189                     	;# 
   462  018C                     	;# 
   463  018D                     	;# 
   464                           
   465                           	psect	idataCOMMON
   466  07F9                     __pidataCOMMON:
   467                           
   468                           ;initializer for _portbActual
   469  07F9  341F               	retlw	31
   470                           
   471                           ;initializer for _portbAnterior
   472  07FA  341F               	retlw	31
   473                           
   474                           	psect	idataBANK0
   475  07FB                     __pidataBANK0:
   476                           
   477                           ;initializer for _umbralHum
   478  07FB  3414               	retlw	20
   479                           
   480                           ;initializer for _umbralTemp
   481  07FC  3420               	retlw	32
   482  001A                     _RCREG	set	26
   483  0019                     _TXREG	set	25
   484  0018                     _RCSTAbits	set	24
   485  0013                     _SSPBUF	set	19
   486  0014                     _SSPCON	set	20
   487  0006                     _PORTB	set	6
   488  000B                     _INTCONbits	set	11
   489  0012                     _T2CONbits	set	18
   490  0005                     _PORTA	set	5
   491  000C                     _PIR1bits	set	12
   492  0048                     _RE0	set	72
   493  004A                     _RE2	set	74
   494  0047                     _RD7	set	71
   495  0046                     _RD6	set	70
   496  0045                     _RD5	set	69
   497  0044                     _RD4	set	68
   498  0043                     _RD3	set	67
   499  0042                     _RD2	set	66
   500  0041                     _RD1	set	65
   501  0040                     _RD0	set	64
   502  0063                     _SSPIF	set	99
   503  005E                     _PEIE	set	94
   504  005F                     _GIE	set	95
   505  0098                     _TXSTAbits	set	152
   506  0099                     _SPBRG	set	153
   507  0091                     _SSPCON2bits	set	145
   508  0087                     _TRISCbits	set	135
   509  0094                     _SSPSTAT	set	148
   510  0093                     _SSPADD	set	147
   511  0091                     _SSPCON2	set	145
   512  008C                     _PIE1bits	set	140
   513  0092                     _PR2	set	146
   514  0085                     _TRISA	set	133
   515  0081                     _OPTION_REGbits	set	129
   516  0086                     _TRISB	set	134
   517  0089                     _TRISE	set	137
   518  0088                     _TRISD	set	136
   519  0463                     _SSPIE	set	1123
   520  043C                     _TRISC4	set	1084
   521  043B                     _TRISC3	set	1083
   522  0189                     _ANSELH	set	393
   523  0188                     _ANSEL	set	392
   524                           
   525                           	psect	strings
   526  0443                     __pstrings:
   527  0443                     stringtab:
   528  0443                     __stringtab:
   529                           
   530                           ;	String table - string pointers are 1 byte each
   531  0443  1BFF               	btfsc	btemp+1,7
   532  0444  2C4D               	ljmp	stringcode
   533  0445  1383               	bcf	3,7
   534  0446  187F               	btfsc	btemp+1,0
   535  0447  1783               	bsf	3,7
   536  0448  0800               	movf	0,w
   537  0449  0A84               	incf	4,f
   538  044A  1903               	skipnz
   539  044B  0AFF               	incf	btemp+1,f
   540  044C  0008               	return
   541  044D                     stringcode:
   542  044D                     stringdir:
   543  044D  3004               	movlw	high stringdir
   544  044E  008A               	movwf	10
   545  044F  0804               	movf	4,w
   546  0450  0A84               	incf	4,f
   547  0451  0782               	addwf	2,f
   548  0452                     __stringbase:
   549  0452  3400               	retlw	0
   550  0453                     __end_of__stringtab:
   551  0453                     STR_10:
   552  0453  3425               	retlw	37	;'%'
   553  0454  3420               	retlw	32	;' '
   554  0455  3420               	retlw	32	;' '
   555  0456  3420               	retlw	32	;' '
   556  0457  3420               	retlw	32	;' '
   557  0458  3420               	retlw	32	;' '
   558  0459  3420               	retlw	32	;' '
   559  045A  3420               	retlw	32	;' '
   560  045B  3420               	retlw	32	;' '
   561  045C  3420               	retlw	32	;' '
   562  045D  3420               	retlw	32	;' '
   563  045E  3420               	retlw	32	;' '
   564  045F  3420               	retlw	32	;' '
   565  0460  3420               	retlw	32	;' '
   566  0461  3420               	retlw	32	;' '
   567  0462  3420               	retlw	32	;' '
   568  0463  3420               	retlw	32	;' '
   569  0464  3420               	retlw	32	;' '
   570  0465  3420               	retlw	32	;' '
   571  0466  3420               	retlw	32	;' '
   572  0467  3420               	retlw	32	;' '
   573  0468  3420               	retlw	32	;' '
   574  0469  3420               	retlw	32	;' '
   575  046A  3400               	retlw	0
   576  046B                     STR_13:
   577  046B  3443               	retlw	67	;'C'
   578  046C  3420               	retlw	32	;' '
   579  046D  3420               	retlw	32	;' '
   580  046E  3420               	retlw	32	;' '
   581  046F  3420               	retlw	32	;' '
   582  0470  3420               	retlw	32	;' '
   583  0471  3420               	retlw	32	;' '
   584  0472  3420               	retlw	32	;' '
   585  0473  3420               	retlw	32	;' '
   586  0474  3420               	retlw	32	;' '
   587  0475  3420               	retlw	32	;' '
   588  0476  3420               	retlw	32	;' '
   589  0477  3420               	retlw	32	;' '
   590  0478  3420               	retlw	32	;' '
   591  0479  3420               	retlw	32	;' '
   592  047A  3420               	retlw	32	;' '
   593  047B  3420               	retlw	32	;' '
   594  047C  3420               	retlw	32	;' '
   595  047D  3420               	retlw	32	;' '
   596  047E  3420               	retlw	32	;' '
   597  047F  3400               	retlw	0
   598  0480                     STR_8:
   599  0480  3420               	retlw	32	;' '
   600  0481  3420               	retlw	32	;' '
   601  0482  3448               	retlw	72	;'H'
   602  0483  3475               	retlw	117	;'u'
   603  0484  346D               	retlw	109	;'m'
   604  0485  342E               	retlw	46	;'.'
   605  0486  3420               	retlw	32	;' '
   606  0487  346D               	retlw	109	;'m'
   607  0488  3469               	retlw	105	;'i'
   608  0489  346E               	retlw	110	;'n'
   609  048A  3469               	retlw	105	;'i'
   610  048B  346D               	retlw	109	;'m'
   611  048C  3461               	retlw	97	;'a'
   612  048D  343A               	retlw	58	;':'
   613  048E  3420               	retlw	32	;' '
   614  048F  3420               	retlw	32	;' '
   615  0490  3400               	retlw	0
   616  0491                     STR_11:
   617  0491  3420               	retlw	32	;' '
   618  0492  3420               	retlw	32	;' '
   619  0493  3454               	retlw	84	;'T'
   620  0494  3465               	retlw	101	;'e'
   621  0495  346D               	retlw	109	;'m'
   622  0496  3470               	retlw	112	;'p'
   623  0497  342E               	retlw	46	;'.'
   624  0498  3420               	retlw	32	;' '
   625  0499  344D               	retlw	77	;'M'
   626  049A  3461               	retlw	97	;'a'
   627  049B  3478               	retlw	120	;'x'
   628  049C  3469               	retlw	105	;'i'
   629  049D  346D               	retlw	109	;'m'
   630  049E  3461               	retlw	97	;'a'
   631  049F  343A               	retlw	58	;':'
   632  04A0  3420               	retlw	32	;' '
   633  04A1  3400               	retlw	0
   634  04A2                     STR_5:
   635  04A2  3420               	retlw	32	;' '
   636  04A3  3453               	retlw	83	;'S'
   637  04A4  3465               	retlw	101	;'e'
   638  04A5  346C               	retlw	108	;'l'
   639  04A6  3465               	retlw	101	;'e'
   640  04A7  3463               	retlw	99	;'c'
   641  04A8  342E               	retlw	46	;'.'
   642  04A9  3420               	retlw	32	;' '
   643  04AA  346F               	retlw	111	;'o'
   644  04AB  3470               	retlw	112	;'p'
   645  04AC  3463               	retlw	99	;'c'
   646  04AD  3469               	retlw	105	;'i'
   647  04AE  346F               	retlw	111	;'o'
   648  04AF  346E               	retlw	110	;'n'
   649  04B0  343A               	retlw	58	;':'
   650  04B1  3420               	retlw	32	;' '
   651  04B2  3400               	retlw	0
   652  04B3                     STR_1:
   653  04B3  3448               	retlw	72	;'H'
   654  04B4  3461               	retlw	97	;'a'
   655  04B5  346C               	retlw	108	;'l'
   656  04B6  346C               	retlw	108	;'l'
   657  04B7  343A               	retlw	58	;':'
   658  04B8  3420               	retlw	32	;' '
   659  04B9  3454               	retlw	84	;'T'
   660  04BA  3465               	retlw	101	;'e'
   661  04BB  346D               	retlw	109	;'m'
   662  04BC  3470               	retlw	112	;'p'
   663  04BD  343A               	retlw	58	;':'
   664  04BE  3420               	retlw	32	;' '
   665  04BF  3448               	retlw	72	;'H'
   666  04C0  3475               	retlw	117	;'u'
   667  04C1  346D               	retlw	109	;'m'
   668  04C2  343A               	retlw	58	;':'
   669  04C3  3400               	retlw	0
   670  04C4                     STR_7:
   671  04C4  343E               	retlw	62	;'>'
   672  04C5  3454               	retlw	84	;'T'
   673  04C6  3465               	retlw	101	;'e'
   674  04C7  346D               	retlw	109	;'m'
   675  04C8  3470               	retlw	112	;'p'
   676  04C9  3420               	retlw	32	;' '
   677  04CA  3420               	retlw	32	;' '
   678  04CB  3420               	retlw	32	;' '
   679  04CC  3468               	retlw	104	;'h'
   680  04CD  3475               	retlw	117	;'u'
   681  04CE  346D               	retlw	109	;'m'
   682  04CF  3465               	retlw	101	;'e'
   683  04D0  3464               	retlw	100	;'d'
   684  04D1  3461               	retlw	97	;'a'
   685  04D2  3464               	retlw	100	;'d'
   686  04D3  3400               	retlw	0
   687  04D4                     STR_6:
   688  04D4  3420               	retlw	32	;' '
   689  04D5  3454               	retlw	84	;'T'
   690  04D6  3465               	retlw	101	;'e'
   691  04D7  346D               	retlw	109	;'m'
   692  04D8  3470               	retlw	112	;'p'
   693  04D9  3420               	retlw	32	;' '
   694  04DA  3420               	retlw	32	;' '
   695  04DB  343E               	retlw	62	;'>'
   696  04DC  3468               	retlw	104	;'h'
   697  04DD  3475               	retlw	117	;'u'
   698  04DE  346D               	retlw	109	;'m'
   699  04DF  3465               	retlw	101	;'e'
   700  04E0  3464               	retlw	100	;'d'
   701  04E1  3461               	retlw	97	;'a'
   702  04E2  3464               	retlw	100	;'d'
   703  04E3  3400               	retlw	0
   704  04E4                     STR_2:
   705  04E4  346F               	retlw	111	;'o'
   706  04E5  3470               	retlw	112	;'p'
   707  04E6  3465               	retlw	101	;'e'
   708  04E7  346E               	retlw	110	;'n'
   709  04E8  3420               	retlw	32	;' '
   710  04E9  3400               	retlw	0
   711  04EA                     STR_3:
   712  04EA  3463               	retlw	99	;'c'
   713  04EB  346C               	retlw	108	;'l'
   714  04EC  346F               	retlw	111	;'o'
   715  04ED  3473               	retlw	115	;'s'
   716  04EE  3465               	retlw	101	;'e'
   717  04EF  3400               	retlw	0
   718  04F0                     STR_4:
   719  04F0  3420               	retlw	32	;' '
   720  04F1  344E               	retlw	78	;'N'
   721  04F2  342E               	retlw	46	;'.'
   722  04F3  3441               	retlw	65	;'A'
   723  04F4  3400               	retlw	0
   724  0468                     
   725                           	psect	cinit
   726  000F                     start_initialization:	
   727                           ; #config settings
   728                           
   729  000F                     __initialization:
   730                           
   731                           ; Initialize objects allocated to BANK0
   732  000F  120A  118A  27FB  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   733  0014  00C9               	movwf	__pdataBANK0& (0+127)
   734  0015  120A  118A  27FC  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   735  001A  00CA               	movwf	(__pdataBANK0+1)& (0+127)
   736                           
   737                           ; Initialize objects allocated to COMMON
   738  001B  120A  118A  27F9  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   739  0020  00F8               	movwf	__pdataCOMMON& (0+127)
   740  0021  120A  118A  27FA  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   741  0026  00F9               	movwf	(__pdataCOMMON+1)& (0+127)
   742                           
   743                           ; Clear objects allocated to BANK0
   744  0027  1383               	bcf	3,7	;select IRP bank0
   745  0028  3036               	movlw	low __pbssBANK0
   746  0029  0084               	movwf	4
   747  002A  3049               	movlw	low (__pbssBANK0+19)
   748  002B  120A  158A  26F3  120A  118A  	fcall	clear_ram0
   749                           
   750                           ; Clear objects allocated to COMMON
   751  0030  01FA               	clrf	__pbssCOMMON& (0+127)
   752  0031                     end_of_initialization:	
   753                           ;End of C runtime variable initialization code
   754                           
   755  0031                     __end_of__initialization:
   756  0031  0183               	clrf	3
   757  0032  120A  118A  2835   	ljmp	_main	;jump to C main() function
   758                           
   759                           	psect	bssCOMMON
   760  007A                     __pbssCOMMON:
   761  007A                     _temp:
   762  007A                     	ds	1
   763                           
   764                           	psect	dataCOMMON
   765  0078                     __pdataCOMMON:
   766  0078                     _portbActual:
   767  0078                     	ds	1
   768  0079                     _portbAnterior:
   769  0079                     	ds	1
   770                           
   771                           	psect	bssBANK0
   772  0036                     __pbssBANK0:
   773  0036                     _direccion:
   774  0036                     	ds	1
   775  0037                     _contador:
   776  0037                     	ds	1
   777  0038                     _ok:
   778  0038                     	ds	1
   779  0039                     _decrementar:
   780  0039                     	ds	1
   781  003A                     _incrementar:
   782  003A                     	ds	1
   783  003B                     _opcion:
   784  003B                     	ds	1
   785  003C                     _menu:
   786  003C                     	ds	1
   787  003D                     _hum:
   788  003D                     	ds	1
   789  003E                     _hall:
   790  003E                     	ds	1
   791  003F                     _numero:
   792  003F                     	ds	10
   793                           
   794                           	psect	dataBANK0
   795  0049                     __pdataBANK0:
   796  0049                     _umbralHum:
   797  0049                     	ds	1
   798  004A                     _umbralTemp:
   799  004A                     	ds	1
   800                           
   801                           	psect	clrtext
   802  0EF3                     clear_ram0:	
   803                           ;	Called with FSR containing the base address, and
   804                           ;	W with the last address+1
   805                           
   806  0EF3  0064               	clrwdt	;clear the watchdog before getting into this loop
   807  0EF4                     clrloop0:
   808  0EF4  0180               	clrf	0	;clear RAM location pointed to by FSR
   809  0EF5  0A84               	incf	4,f	;increment pointer
   810  0EF6  0604               	xorwf	4,w	;XOR with final address
   811  0EF7  1903               	btfsc	3,2	;have we reached the end yet?
   812  0EF8  3400               	retlw	0	;all done for this memory range, return
   813  0EF9  0604               	xorwf	4,w	;XOR again to restore value
   814  0EFA  2EF4               	goto	clrloop0	;do the next byte
   815                           
   816                           	psect	cstackCOMMON
   817  0070                     __pcstackCOMMON:
   818  0070                     ?_LcdInit:
   819  0070                     ?_I2C_Master_Start:	
   820                           ; 1 bytes @ 0x0
   821                           
   822  0070                     ?_I2C_Master_Stop:	
   823                           ; 1 bytes @ 0x0
   824                           
   825  0070                     ?_LcdWriteChar:	
   826                           ; 1 bytes @ 0x0
   827                           
   828  0070                     ?_ISR:	
   829                           ; 1 bytes @ 0x0
   830                           
   831  0070                     ??_ISR:	
   832                           ; 1 bytes @ 0x0
   833                           
   834  0070                     ?_main:	
   835                           ; 1 bytes @ 0x0
   836                           
   837  0070                     ?_I2C_Master_Wait:	
   838                           ; 1 bytes @ 0x0
   839                           
   840  0070                     ?_LcdPort:	
   841                           ; 1 bytes @ 0x0
   842                           
   843  0070                     ?_LcdCmd:	
   844                           ; 1 bytes @ 0x0
   845                           
   846                           
   847                           ; 1 bytes @ 0x0
   848  0070                     	ds	3
   849  0073                     ?_step:
   850  0073                     ??_I2C_Master_Start:	
   851                           ; 1 bytes @ 0x3
   852                           
   853  0073                     ?_I2C_Master_Write:	
   854                           ; 1 bytes @ 0x3
   855                           
   856  0073                     ??_I2C_Master_Stop:	
   857                           ; 1 bytes @ 0x3
   858                           
   859  0073                     ??_I2C_Master_Wait:	
   860                           ; 1 bytes @ 0x3
   861                           
   862  0073                     ??_LcdPort:	
   863                           ; 1 bytes @ 0x3
   864                           
   865  0073                     ??___lldiv:	
   866                           ; 1 bytes @ 0x3
   867                           
   868  0073                     ?_I2C_Master_Read:	
   869                           ; 1 bytes @ 0x3
   870                           
   871  0073                     ?___lwdiv:	
   872                           ; 2 bytes @ 0x3
   873                           
   874  0073                     ?___lwmod:	
   875                           ; 2 bytes @ 0x3
   876                           
   877  0073                     step@dir:	
   878                           ; 2 bytes @ 0x3
   879                           
   880  0073                     I2C_Master_Write@d:	
   881                           ; 1 bytes @ 0x3
   882                           
   883  0073                     I2C_Master_Read@a:	
   884                           ; 2 bytes @ 0x3
   885                           
   886  0073                     ___lwdiv@divisor:	
   887                           ; 2 bytes @ 0x3
   888                           
   889  0073                     ___lwmod@divisor:	
   890                           ; 2 bytes @ 0x3
   891                           
   892                           
   893                           ; 2 bytes @ 0x3
   894  0073                     	ds	1
   895  0074                     ??_UARTInit:
   896  0074                     ??_I2C_Master_Init:	
   897                           ; 1 bytes @ 0x4
   898                           
   899  0074                     ??_step:	
   900                           ; 1 bytes @ 0x4
   901                           
   902  0074                     LcdPort@value:	
   903                           ; 1 bytes @ 0x4
   904                           
   905                           
   906                           ; 1 bytes @ 0x4
   907  0074                     	ds	1
   908  0075                     ??_I2C_Master_Write:
   909  0075                     ??_I2C_Master_Read:	
   910                           ; 1 bytes @ 0x5
   911                           
   912  0075                     ??_LcdWriteChar:	
   913                           ; 1 bytes @ 0x5
   914                           
   915  0075                     ??_LcdCmd:	
   916                           ; 1 bytes @ 0x5
   917                           
   918  0075                     ___lwdiv@dividend:	
   919                           ; 1 bytes @ 0x5
   920                           
   921  0075                     ___lwmod@dividend:	
   922                           ; 2 bytes @ 0x5
   923                           
   924                           
   925                           ; 2 bytes @ 0x5
   926  0075                     	ds	1
   927  0076                     LcdWriteChar@value:
   928                           
   929                           ; 1 bytes @ 0x6
   930  0076                     	ds	1
   931  0077                     ??___lwdiv:
   932  0077                     ??___lwmod:	
   933                           ; 1 bytes @ 0x7
   934                           
   935  0077                     LcdCmd@value:	
   936                           ; 1 bytes @ 0x7
   937                           
   938                           
   939                           ; 1 bytes @ 0x7
   940  0077                     	ds	1
   941                           
   942                           	psect	cstackBANK0
   943  0020                     __pcstackBANK0:
   944  0020                     ??_LcdInit:
   945  0020                     ?_LcdSetCursor:	
   946                           ; 1 bytes @ 0x0
   947                           
   948  0020                     ?_LcdWriteString:	
   949                           ; 1 bytes @ 0x0
   950                           
   951  0020                     ?___lldiv:	
   952                           ; 1 bytes @ 0x0
   953                           
   954  0020                     LcdSetCursor@column:	
   955                           ; 4 bytes @ 0x0
   956                           
   957  0020                     ___lwdiv@counter:	
   958                           ; 1 bytes @ 0x0
   959                           
   960  0020                     ___lwmod@counter:	
   961                           ; 1 bytes @ 0x0
   962                           
   963  0020                     step@i:	
   964                           ; 1 bytes @ 0x0
   965                           
   966  0020                     I2C_Master_Read@temp:	
   967                           ; 2 bytes @ 0x0
   968                           
   969  0020                     LcdWriteString@value:	
   970                           ; 2 bytes @ 0x0
   971                           
   972  0020                     ___lldiv@divisor:	
   973                           ; 2 bytes @ 0x0
   974                           
   975                           
   976                           ; 4 bytes @ 0x0
   977  0020                     	ds	1
   978  0021                     ??_LcdSetCursor:
   979  0021                     ___lwdiv@quotient:	
   980                           ; 1 bytes @ 0x1
   981                           
   982                           
   983                           ; 2 bytes @ 0x1
   984  0021                     	ds	1
   985  0022                     ??_LcdWriteString:
   986  0022                     step@i_296:	
   987                           ; 1 bytes @ 0x2
   988                           
   989                           
   990                           ; 2 bytes @ 0x2
   991  0022                     	ds	1
   992  0023                     ?_utoa:
   993  0023                     LcdSetCursor@row:	
   994                           ; 1 bytes @ 0x3
   995                           
   996  0023                     utoa@val:	
   997                           ; 1 bytes @ 0x3
   998                           
   999                           
  1000                           ; 2 bytes @ 0x3
  1001  0023                     	ds	1
  1002  0024                     step@steps:
  1003  0024                     ___lldiv@dividend:	
  1004                           ; 1 bytes @ 0x4
  1005                           
  1006                           
  1007                           ; 4 bytes @ 0x4
  1008  0024                     	ds	1
  1009  0025                     LcdWriteString@i:
  1010  0025                     utoa@base:	
  1011                           ; 2 bytes @ 0x5
  1012                           
  1013                           
  1014                           ; 2 bytes @ 0x5
  1015  0025                     	ds	2
  1016  0027                     ??_utoa:
  1017                           
  1018                           ; 1 bytes @ 0x7
  1019  0027                     	ds	1
  1020  0028                     utoa@v:
  1021  0028                     ___lldiv@quotient:	
  1022                           ; 2 bytes @ 0x8
  1023                           
  1024                           
  1025                           ; 4 bytes @ 0x8
  1026  0028                     	ds	2
  1027  002A                     utoa@c:
  1028                           
  1029                           ; 1 bytes @ 0xA
  1030  002A                     	ds	1
  1031  002B                     utoa@buf:
  1032                           
  1033                           ; 1 bytes @ 0xB
  1034  002B                     	ds	1
  1035  002C                     ?_itoa:
  1036  002C                     ___lldiv@counter:	
  1037                           ; 1 bytes @ 0xC
  1038                           
  1039  002C                     itoa@val:	
  1040                           ; 1 bytes @ 0xC
  1041                           
  1042                           
  1043                           ; 2 bytes @ 0xC
  1044  002C                     	ds	1
  1045  002D                     ?_UARTInit:
  1046  002D                     ?_I2C_Master_Init:	
  1047                           ; 1 bytes @ 0xD
  1048                           
  1049  002D                     I2C_Master_Init@c:	
  1050                           ; 1 bytes @ 0xD
  1051                           
  1052  002D                     UARTInit@baud_rate:	
  1053                           ; 4 bytes @ 0xD
  1054                           
  1055                           
  1056                           ; 4 bytes @ 0xD
  1057  002D                     	ds	1
  1058  002E                     itoa@base:
  1059                           
  1060                           ; 2 bytes @ 0xE
  1061  002E                     	ds	2
  1062  0030                     ??_itoa:
  1063                           
  1064                           ; 1 bytes @ 0x10
  1065  0030                     	ds	1
  1066  0031                     UARTInit@BRGH:
  1067                           
  1068                           ; 1 bytes @ 0x11
  1069  0031                     	ds	1
  1070  0032                     itoa@buf:
  1071                           
  1072                           ; 1 bytes @ 0x12
  1073  0032                     	ds	1
  1074  0033                     ??_main:
  1075                           
  1076                           ; 1 bytes @ 0x13
  1077  0033                     	ds	3
  1078                           
  1079                           	psect	maintext
  1080  0035                     __pmaintext:	
  1081 ;;
  1082 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1083 ;;
  1084 ;; *************** function _main *****************
  1085 ;; Defined at:
  1086 ;;		line 63 in file "MasterMain.c"
  1087 ;; Parameters:    Size  Location     Type
  1088 ;;		None
  1089 ;; Auto vars:     Size  Location     Type
  1090 ;;		None
  1091 ;; Return value:  Size  Location     Type
  1092 ;;                  1    wreg      void 
  1093 ;; Registers used:
  1094 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1095 ;; Tracked objects:
  1096 ;;		On entry : B00/0
  1097 ;;		On exit  : 0/0
  1098 ;;		Unchanged: 0/0
  1099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1100 ;;      Params:         0       0       0       0       0
  1101 ;;      Locals:         0       0       0       0       0
  1102 ;;      Temps:          0       3       0       0       0
  1103 ;;      Totals:         0       3       0       0       0
  1104 ;;Total ram usage:        3 bytes
  1105 ;; Hardware stack levels required when called:    4
  1106 ;; This function calls:
  1107 ;;		_I2C_Master_Init
  1108 ;;		_I2C_Master_Read
  1109 ;;		_I2C_Master_Start
  1110 ;;		_I2C_Master_Stop
  1111 ;;		_I2C_Master_Write
  1112 ;;		_LcdInit
  1113 ;;		_LcdSetCursor
  1114 ;;		_LcdWriteChar
  1115 ;;		_LcdWriteString
  1116 ;;		_UARTInit
  1117 ;;		_itoa
  1118 ;;		_step
  1119 ;; This function is called by:
  1120 ;;		Startup code after reset
  1121 ;; This function uses a non-reentrant model
  1122 ;;
  1123                           
  1124                           
  1125                           ;psect for function _main
  1126  0035                     _main:
  1127  0035                     l2557:	
  1128                           ;incstack = 0
  1129                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1130                           
  1131                           
  1132                           ;MasterMain.c: 64:     ANSEL = 0;
  1133  0035  1683               	bsf	3,5	;RP0=1, select bank3
  1134  0036  1703               	bsf	3,6	;RP1=1, select bank3
  1135  0037  0188               	clrf	8	;volatile
  1136                           
  1137                           ;MasterMain.c: 65:     ANSELH = 0;
  1138  0038  0189               	clrf	9	;volatile
  1139                           
  1140                           ;MasterMain.c: 67:     TRISD = 0;
  1141  0039  1683               	bsf	3,5	;RP0=1, select bank1
  1142  003A  1303               	bcf	3,6	;RP1=0, select bank1
  1143  003B  0188               	clrf	8	;volatile
  1144                           
  1145                           ;MasterMain.c: 68:     TRISE = 0;
  1146  003C  0189               	clrf	9	;volatile
  1147  003D                     l2559:
  1148                           
  1149                           ;MasterMain.c: 69:     TRISB = 31;
  1150  003D  301F               	movlw	31
  1151  003E  0086               	movwf	6	;volatile
  1152  003F                     l2561:
  1153                           
  1154                           ;MasterMain.c: 70:     OPTION_REGbits.nRBPU= 0;
  1155  003F  1381               	bcf	1,7	;volatile
  1156  0040                     l2563:
  1157                           
  1158                           ;MasterMain.c: 71:     TRISA = 0;
  1159  0040  0185               	clrf	5	;volatile
  1160  0041                     l2565:
  1161                           
  1162                           ;MasterMain.c: 74:     PORTA = 0;
  1163  0041  1283               	bcf	3,5	;RP0=0, select bank0
  1164  0042  1303               	bcf	3,6	;RP1=0, select bank0
  1165  0043  0185               	clrf	5	;volatile
  1166  0044                     l2567:
  1167                           
  1168                           ;MasterMain.c: 75:     LcdInit();
  1169  0044  120A  118A  26CC  120A  118A  	fcall	_LcdInit
  1170  0049                     l2569:
  1171                           
  1172                           ;MasterMain.c: 76:     UARTInit(9600,1);
  1173  0049  3000               	movlw	0
  1174  004A  1283               	bcf	3,5	;RP0=0, select bank0
  1175  004B  1303               	bcf	3,6	;RP1=0, select bank0
  1176  004C  00B0               	movwf	UARTInit@baud_rate+3
  1177  004D  3000               	movlw	0
  1178  004E  00AF               	movwf	UARTInit@baud_rate+2
  1179  004F  3025               	movlw	37
  1180  0050  00AE               	movwf	UARTInit@baud_rate+1
  1181  0051  3080               	movlw	128
  1182  0052  00AD               	movwf	UARTInit@baud_rate
  1183  0053  01B1               	clrf	UARTInit@BRGH
  1184  0054  0AB1               	incf	UARTInit@BRGH,f
  1185  0055  120A  118A  257F  120A  118A  	fcall	_UARTInit
  1186  005A                     l2571:
  1187                           
  1188                           ;MasterMain.c: 77:     I2C_Master_Init(100000);
  1189  005A  3000               	movlw	0
  1190  005B  1283               	bcf	3,5	;RP0=0, select bank0
  1191  005C  1303               	bcf	3,6	;RP1=0, select bank0
  1192  005D  00B0               	movwf	I2C_Master_Init@c+3
  1193  005E  3001               	movlw	1
  1194  005F  00AF               	movwf	I2C_Master_Init@c+2
  1195  0060  3086               	movlw	134
  1196  0061  00AE               	movwf	I2C_Master_Init@c+1
  1197  0062  30A0               	movlw	160
  1198  0063  00AD               	movwf	I2C_Master_Init@c
  1199  0064  120A  158A  27C6  120A  118A  	fcall	_I2C_Master_Init
  1200  0069                     l2573:
  1201                           
  1202                           ;MasterMain.c: 79:     PR2 =255;
  1203  0069  30FF               	movlw	255
  1204  006A  1683               	bsf	3,5	;RP0=1, select bank1
  1205  006B  1303               	bcf	3,6	;RP1=0, select bank1
  1206  006C  0092               	movwf	18	;volatile
  1207  006D                     l2575:
  1208                           
  1209                           ;MasterMain.c: 80:     T2CONbits.TOUTPS = 0b1111;
  1210  006D  3078               	movlw	120
  1211  006E  1283               	bcf	3,5	;RP0=0, select bank0
  1212  006F  1303               	bcf	3,6	;RP1=0, select bank0
  1213  0070  0492               	iorwf	18,f	;volatile
  1214  0071                     l2577:
  1215                           
  1216                           ;MasterMain.c: 81:     T2CONbits.T2CKPS = 3;
  1217  0071  3003               	movlw	3
  1218  0072  0492               	iorwf	18,f	;volatile
  1219  0073                     l2579:
  1220                           
  1221                           ;MasterMain.c: 82:     T2CONbits.TMR2ON = 1;
  1222  0073  1512               	bsf	18,2	;volatile
  1223  0074                     l2581:
  1224                           
  1225                           ;MasterMain.c: 85:     INTCONbits.GIE = 1;
  1226  0074  178B               	bsf	11,7	;volatile
  1227  0075                     l2583:
  1228                           
  1229                           ;MasterMain.c: 86:     INTCONbits.PEIE = 1;
  1230  0075  170B               	bsf	11,6	;volatile
  1231  0076                     l2585:
  1232                           
  1233                           ;MasterMain.c: 87:     PIE1bits.TMR2IE = 1;
  1234  0076  1683               	bsf	3,5	;RP0=1, select bank1
  1235  0077  1303               	bcf	3,6	;RP1=0, select bank1
  1236  0078  148C               	bsf	12,1	;volatile
  1237  0079                     l2587:
  1238                           
  1239                           ;MasterMain.c: 90:         portbAnterior = portbActual;
  1240  0079  0878               	movf	_portbActual,w
  1241  007A  1283               	bcf	3,5	;RP0=0, select bank0
  1242  007B  1303               	bcf	3,6	;RP1=0, select bank0
  1243  007C  00B3               	movwf	??_main
  1244  007D  0833               	movf	??_main,w
  1245  007E  00F9               	movwf	_portbAnterior
  1246  007F                     l2589:
  1247                           
  1248                           ;MasterMain.c: 91:         portbActual = PORTB;
  1249  007F  0806               	movf	6,w	;volatile
  1250  0080  00B3               	movwf	??_main
  1251  0081  0833               	movf	??_main,w
  1252  0082  00F8               	movwf	_portbActual
  1253  0083                     l2591:
  1254                           
  1255                           ;MasterMain.c: 93:         if((portbAnterior&1) == 0 && (portbActual&1) == 1 ) menu = ~m
      +                          enu;
  1256  0083  1879               	btfsc	_portbAnterior,0
  1257  0084  2886               	goto	u2461
  1258  0085  2887               	goto	u2460
  1259  0086                     u2461:
  1260  0086  288C               	goto	l96
  1261  0087                     u2460:
  1262  0087                     l2593:
  1263  0087  1C78               	btfss	_portbActual,0
  1264  0088  288A               	goto	u2471
  1265  0089  288B               	goto	u2470
  1266  008A                     u2471:
  1267  008A  288C               	goto	l96
  1268  008B                     u2470:
  1269  008B                     l2595:
  1270  008B  09BC               	comf	_menu,f
  1271  008C                     l96:
  1272                           
  1273                           ;MasterMain.c: 94:         if((portbAnterior&2) == 0 && (portbActual&2) == 2 ) decrement
      +                          ar = 1;
  1274  008C  18F9               	btfsc	_portbAnterior,1
  1275  008D  288F               	goto	u2481
  1276  008E  2890               	goto	u2480
  1277  008F                     u2481:
  1278  008F  2896               	goto	l97
  1279  0090                     u2480:
  1280  0090                     l2597:
  1281  0090  1CF8               	btfss	_portbActual,1
  1282  0091  2893               	goto	u2491
  1283  0092  2894               	goto	u2490
  1284  0093                     u2491:
  1285  0093  2896               	goto	l97
  1286  0094                     u2490:
  1287  0094                     l2599:
  1288  0094  01B9               	clrf	_decrementar
  1289  0095  0AB9               	incf	_decrementar,f
  1290  0096                     l97:
  1291                           
  1292                           ;MasterMain.c: 95:         if((portbAnterior&4) == 0 && (portbActual&4) == 4 ) increment
      +                          ar = 1;
  1293  0096  1979               	btfsc	_portbAnterior,2
  1294  0097  2899               	goto	u2501
  1295  0098  289A               	goto	u2500
  1296  0099                     u2501:
  1297  0099  28A0               	goto	l98
  1298  009A                     u2500:
  1299  009A                     l2601:
  1300  009A  1D78               	btfss	_portbActual,2
  1301  009B  289D               	goto	u2511
  1302  009C  289E               	goto	u2510
  1303  009D                     u2511:
  1304  009D  28A0               	goto	l98
  1305  009E                     u2510:
  1306  009E                     l2603:
  1307  009E  01BA               	clrf	_incrementar
  1308  009F  0ABA               	incf	_incrementar,f
  1309  00A0                     l98:
  1310                           
  1311                           ;MasterMain.c: 96:         if((portbAnterior&8) == 0 && (portbActual&8) == 8 ) ok = 1;
  1312  00A0  19F9               	btfsc	_portbAnterior,3
  1313  00A1  28A3               	goto	u2521
  1314  00A2  28A4               	goto	u2520
  1315  00A3                     u2521:
  1316  00A3  28AA               	goto	l2609
  1317  00A4                     u2520:
  1318  00A4                     l2605:
  1319  00A4  1DF8               	btfss	_portbActual,3
  1320  00A5  28A7               	goto	u2531
  1321  00A6  28A8               	goto	u2530
  1322  00A7                     u2531:
  1323  00A7  28AA               	goto	l2609
  1324  00A8                     u2530:
  1325  00A8                     l2607:
  1326  00A8  01B8               	clrf	_ok
  1327  00A9  0AB8               	incf	_ok,f
  1328  00AA                     l2609:
  1329                           
  1330                           ;MasterMain.c: 98:         if(contador == 45){
  1331  00AA  302D               	movlw	45
  1332  00AB  0637               	xorwf	_contador,w
  1333  00AC  1D03               	btfss	3,2
  1334  00AD  28AF               	goto	u2541
  1335  00AE  28B0               	goto	u2540
  1336  00AF                     u2541:
  1337  00AF  28C2               	goto	l2617
  1338  00B0                     u2540:
  1339  00B0                     l2611:
  1340                           
  1341                           ;MasterMain.c: 100:             contador = 0;
  1342  00B0  01B7               	clrf	_contador
  1343  00B1                     l2613:
  1344                           
  1345                           ;MasterMain.c: 101:             step(128,direccion);
  1346  00B1  0836               	movf	_direccion,w
  1347  00B2  00B3               	movwf	??_main
  1348  00B3  0833               	movf	??_main,w
  1349  00B4  00F3               	movwf	step@dir
  1350  00B5  3080               	movlw	128
  1351  00B6  120A  118A  237C  120A  118A  	fcall	_step
  1352  00BB                     l2615:
  1353                           
  1354                           ;MasterMain.c: 103:             direccion = ~direccion&1;
  1355  00BB  1283               	bcf	3,5	;RP0=0, select bank0
  1356  00BC  1303               	bcf	3,6	;RP1=0, select bank0
  1357  00BD  0936               	comf	_direccion,w
  1358  00BE  3901               	andlw	1
  1359  00BF  00B3               	movwf	??_main
  1360  00C0  0833               	movf	??_main,w
  1361  00C1  00B6               	movwf	_direccion
  1362  00C2                     l2617:
  1363                           
  1364                           ;MasterMain.c: 107:         if(!menu){
  1365  00C2  083C               	movf	_menu,w
  1366  00C3  1D03               	btfss	3,2
  1367  00C4  28C6               	goto	u2551
  1368  00C5  28C7               	goto	u2550
  1369  00C6                     u2551:
  1370  00C6  2A2A               	goto	l2691
  1371  00C7                     u2550:
  1372  00C7                     l2619:
  1373                           
  1374                           ;MasterMain.c: 108:             LcdSetCursor(1,1);
  1375  00C7  01A0               	clrf	LcdSetCursor@column
  1376  00C8  0AA0               	incf	LcdSetCursor@column,f
  1377  00C9  3001               	movlw	1
  1378  00CA  120A  158A  274B  120A  118A  	fcall	_LcdSetCursor
  1379  00CF                     l2621:
  1380                           
  1381                           ;MasterMain.c: 109:             LcdWriteString("Hall: Temp: Hum:");
  1382  00CF  3061               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1383  00D0  1283               	bcf	3,5	;RP0=0, select bank0
  1384  00D1  1303               	bcf	3,6	;RP1=0, select bank0
  1385  00D2  00A0               	movwf	LcdWriteString@value
  1386  00D3  3080               	movlw	128
  1387  00D4  00A1               	movwf	LcdWriteString@value+1
  1388  00D5  120A  118A  275D  120A  118A  	fcall	_LcdWriteString
  1389  00DA                     l2623:
  1390                           
  1391                           ;MasterMain.c: 110:             I2C_Master_Start();
  1392  00DA  120A  158A  26FB  120A  118A  	fcall	_I2C_Master_Start
  1393  00DF                     l2625:
  1394                           
  1395                           ;MasterMain.c: 111:             I2C_Master_Write(0b00000011);
  1396  00DF  3003               	movlw	3
  1397  00E0  00F3               	movwf	I2C_Master_Write@d
  1398  00E1  3000               	movlw	0
  1399  00E2  00F4               	movwf	I2C_Master_Write@d+1
  1400  00E3  120A  158A  270D  120A  118A  	fcall	_I2C_Master_Write
  1401  00E8                     l2627:
  1402                           
  1403                           ;MasterMain.c: 112:             hall = I2C_Master_Read(0);
  1404  00E8  3000               	movlw	0
  1405  00E9  00F3               	movwf	I2C_Master_Read@a
  1406  00EA  00F4               	movwf	I2C_Master_Read@a+1
  1407  00EB  120A  158A  2796  120A  118A  	fcall	_I2C_Master_Read
  1408  00F0  0873               	movf	?_I2C_Master_Read,w
  1409  00F1  1283               	bcf	3,5	;RP0=0, select bank0
  1410  00F2  1303               	bcf	3,6	;RP1=0, select bank0
  1411  00F3  00B3               	movwf	??_main
  1412  00F4  0833               	movf	??_main,w
  1413  00F5  00BE               	movwf	_hall
  1414  00F6                     l2629:
  1415                           
  1416                           ;MasterMain.c: 113:             I2C_Master_Stop();
  1417  00F6  120A  158A  2704  120A  118A  	fcall	_I2C_Master_Stop
  1418  00FB                     l2631:
  1419                           
  1420                           ;MasterMain.c: 114:             _delay((unsigned long)((10)*(4000000/4000.0)));
  1421  00FB  300D               	movlw	13
  1422  00FC  1283               	bcf	3,5	;RP0=0, select bank0
  1423  00FD  1303               	bcf	3,6	;RP1=0, select bank0
  1424  00FE  00B4               	movwf	??_main+1
  1425  00FF  30FB               	movlw	251
  1426  0100  00B3               	movwf	??_main
  1427  0101                     u2757:
  1428  0101  0BB3               	decfsz	??_main,f
  1429  0102  2901               	goto	u2757
  1430  0103  0BB4               	decfsz	??_main+1,f
  1431  0104  2901               	goto	u2757
  1432  0105                     l2633:
  1433                           
  1434                           ;MasterMain.c: 115:             LcdSetCursor(2,1);
  1435  0105  1283               	bcf	3,5	;RP0=0, select bank0
  1436  0106  1303               	bcf	3,6	;RP1=0, select bank0
  1437  0107  01A0               	clrf	LcdSetCursor@column
  1438  0108  0AA0               	incf	LcdSetCursor@column,f
  1439  0109  3002               	movlw	2
  1440  010A  120A  158A  274B  120A  118A  	fcall	_LcdSetCursor
  1441                           
  1442                           ;MasterMain.c: 117:             switch(hall){
  1443  010F  2924               	goto	l2641
  1444  0110                     l2635:
  1445                           
  1446                           ;MasterMain.c: 119:                     LcdWriteString("open ");
  1447  0110  3092               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1448  0111  00A0               	movwf	LcdWriteString@value
  1449  0112  3080               	movlw	128
  1450  0113  00A1               	movwf	LcdWriteString@value+1
  1451  0114  120A  118A  275D  120A  118A  	fcall	_LcdWriteString
  1452                           
  1453                           ;MasterMain.c: 120:                     break;
  1454  0119  2936               	goto	l2643
  1455  011A                     l2637:
  1456                           
  1457                           ;MasterMain.c: 122:                     LcdWriteString("close");
  1458  011A  3098               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1459  011B  00A0               	movwf	LcdWriteString@value
  1460  011C  3080               	movlw	128
  1461  011D  00A1               	movwf	LcdWriteString@value+1
  1462  011E  120A  118A  275D  120A  118A  	fcall	_LcdWriteString
  1463                           
  1464                           ;MasterMain.c: 123:                     break;
  1465  0123  2936               	goto	l2643
  1466  0124                     l2641:
  1467  0124  1283               	bcf	3,5	;RP0=0, select bank0
  1468  0125  1303               	bcf	3,6	;RP1=0, select bank0
  1469  0126  083E               	movf	_hall,w
  1470  0127  00B3               	movwf	??_main
  1471  0128  01B4               	clrf	??_main+1
  1472                           
  1473                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1474                           ; Switch size 1, requested type "simple"
  1475                           ; Number of cases is 1, Range of values is 0 to 0
  1476                           ; switch strategies available:
  1477                           ; Name         Instructions Cycles
  1478                           ; simple_byte            4     3 (average)
  1479                           ; direct_byte           11     8 (fixed)
  1480                           ; jumptable            260     6 (fixed)
  1481                           ;	Chosen strategy is simple_byte
  1482  0129  0834               	movf	??_main+1,w
  1483  012A  3A00               	xorlw	0	; case 0
  1484  012B  1903               	skipnz
  1485  012C  292E               	goto	l2895
  1486  012D  2936               	goto	l2643
  1487  012E                     l2895:
  1488                           
  1489                           ; Switch size 1, requested type "simple"
  1490                           ; Number of cases is 2, Range of values is 0 to 1
  1491                           ; switch strategies available:
  1492                           ; Name         Instructions Cycles
  1493                           ; simple_byte            7     4 (average)
  1494                           ; direct_byte           14     8 (fixed)
  1495                           ; jumptable            260     6 (fixed)
  1496                           ;	Chosen strategy is simple_byte
  1497  012E  0833               	movf	??_main,w
  1498  012F  3A00               	xorlw	0	; case 0
  1499  0130  1903               	skipnz
  1500  0131  2910               	goto	l2635
  1501  0132  3A01               	xorlw	1	; case 1
  1502  0133  1903               	skipnz
  1503  0134  291A               	goto	l2637
  1504  0135  2936               	goto	l2643
  1505  0136                     l2643:
  1506                           
  1507                           ;MasterMain.c: 126:             I2C_Master_Start();
  1508  0136  120A  158A  26FB  120A  118A  	fcall	_I2C_Master_Start
  1509                           
  1510                           ;MasterMain.c: 127:             I2C_Master_Write(0b00000001);
  1511  013B  3001               	movlw	1
  1512  013C  00F3               	movwf	I2C_Master_Write@d
  1513  013D  3000               	movlw	0
  1514  013E  00F4               	movwf	I2C_Master_Write@d+1
  1515  013F  120A  158A  270D  120A  118A  	fcall	_I2C_Master_Write
  1516                           
  1517                           ;MasterMain.c: 128:            temp = I2C_Master_Read(0);
  1518  0144  3000               	movlw	0
  1519  0145  00F3               	movwf	I2C_Master_Read@a
  1520  0146  00F4               	movwf	I2C_Master_Read@a+1
  1521  0147  120A  158A  2796  120A  118A  	fcall	_I2C_Master_Read
  1522  014C  0873               	movf	?_I2C_Master_Read,w
  1523  014D  1283               	bcf	3,5	;RP0=0, select bank0
  1524  014E  1303               	bcf	3,6	;RP1=0, select bank0
  1525  014F  00B3               	movwf	??_main
  1526  0150  0833               	movf	??_main,w
  1527  0151  00FA               	movwf	_temp
  1528                           
  1529                           ;MasterMain.c: 129:             I2C_Master_Stop();
  1530  0152  120A  158A  2704  120A  118A  	fcall	_I2C_Master_Stop
  1531  0157                     l2645:
  1532                           
  1533                           ;MasterMain.c: 130:             _delay((unsigned long)((10)*(4000000/4000.0)));
  1534  0157  300D               	movlw	13
  1535  0158  1283               	bcf	3,5	;RP0=0, select bank0
  1536  0159  1303               	bcf	3,6	;RP1=0, select bank0
  1537  015A  00B4               	movwf	??_main+1
  1538  015B  30FB               	movlw	251
  1539  015C  00B3               	movwf	??_main
  1540  015D                     u2767:
  1541  015D  0BB3               	decfsz	??_main,f
  1542  015E  295D               	goto	u2767
  1543  015F  0BB4               	decfsz	??_main+1,f
  1544  0160  295D               	goto	u2767
  1545  0161                     l2647:
  1546                           
  1547                           ;MasterMain.c: 132:             I2C_Master_Start();
  1548  0161  120A  158A  26FB  120A  118A  	fcall	_I2C_Master_Start
  1549  0166                     l2649:
  1550                           
  1551                           ;MasterMain.c: 133:             I2C_Master_Write(0b00000001);
  1552  0166  3001               	movlw	1
  1553  0167  00F3               	movwf	I2C_Master_Write@d
  1554  0168  3000               	movlw	0
  1555  0169  00F4               	movwf	I2C_Master_Write@d+1
  1556  016A  120A  158A  270D  120A  118A  	fcall	_I2C_Master_Write
  1557  016F                     l2651:
  1558                           
  1559                           ;MasterMain.c: 134:             hum = I2C_Master_Read(0);
  1560  016F  3000               	movlw	0
  1561  0170  00F3               	movwf	I2C_Master_Read@a
  1562  0171  00F4               	movwf	I2C_Master_Read@a+1
  1563  0172  120A  158A  2796  120A  118A  	fcall	_I2C_Master_Read
  1564  0177  0873               	movf	?_I2C_Master_Read,w
  1565  0178  1283               	bcf	3,5	;RP0=0, select bank0
  1566  0179  1303               	bcf	3,6	;RP1=0, select bank0
  1567  017A  00B3               	movwf	??_main
  1568  017B  0833               	movf	??_main,w
  1569  017C  00BD               	movwf	_hum
  1570  017D                     l2653:
  1571                           
  1572                           ;MasterMain.c: 135:             I2C_Master_Stop();
  1573  017D  120A  158A  2704  120A  118A  	fcall	_I2C_Master_Stop
  1574  0182                     l2655:
  1575                           
  1576                           ;MasterMain.c: 136:             _delay((unsigned long)((10)*(4000000/4000.0)));
  1577  0182  300D               	movlw	13
  1578  0183  1283               	bcf	3,5	;RP0=0, select bank0
  1579  0184  1303               	bcf	3,6	;RP1=0, select bank0
  1580  0185  00B4               	movwf	??_main+1
  1581  0186  30FB               	movlw	251
  1582  0187  00B3               	movwf	??_main
  1583  0188                     u2777:
  1584  0188  0BB3               	decfsz	??_main,f
  1585  0189  2988               	goto	u2777
  1586  018A  0BB4               	decfsz	??_main+1,f
  1587  018B  2988               	goto	u2777
  1588  018C                     l2657:
  1589                           
  1590                           ;MasterMain.c: 140:             itoa(numero,temp,10);
  1591  018C  087A               	movf	_temp,w
  1592  018D  1283               	bcf	3,5	;RP0=0, select bank0
  1593  018E  1303               	bcf	3,6	;RP1=0, select bank0
  1594  018F  00B3               	movwf	??_main
  1595  0190  01B4               	clrf	??_main+1
  1596  0191  0833               	movf	??_main,w
  1597  0192  00AC               	movwf	itoa@val
  1598  0193  0834               	movf	??_main+1,w
  1599  0194  00AD               	movwf	itoa@val+1
  1600  0195  300A               	movlw	10
  1601  0196  00AE               	movwf	itoa@base
  1602  0197  3000               	movlw	0
  1603  0198  00AF               	movwf	itoa@base+1
  1604  0199  303F               	movlw	(low (_numero| 0))& (0+255)
  1605  019A  120A  158A  2770  120A  118A  	fcall	_itoa
  1606  019F                     l2659:
  1607                           
  1608                           ;MasterMain.c: 141:             LcdWriteChar(' ');
  1609  019F  3020               	movlw	32
  1610  01A0  120A  158A  2736  120A  118A  	fcall	_LcdWriteChar
  1611  01A5                     l2661:
  1612                           
  1613                           ;MasterMain.c: 142:             LcdWriteChar(' ');
  1614  01A5  3020               	movlw	32
  1615  01A6  120A  158A  2736  120A  118A  	fcall	_LcdWriteChar
  1616  01AB                     l2663:
  1617                           
  1618                           ;MasterMain.c: 143:             LcdWriteString(numero);
  1619  01AB  303F               	movlw	(low (_numero| 0))& (0+255)
  1620  01AC  1283               	bcf	3,5	;RP0=0, select bank0
  1621  01AD  1303               	bcf	3,6	;RP1=0, select bank0
  1622  01AE  00A0               	movwf	LcdWriteString@value
  1623  01AF  3000               	movlw	0
  1624  01B0  00A1               	movwf	LcdWriteString@value+1
  1625  01B1  120A  118A  275D  120A  118A  	fcall	_LcdWriteString
  1626  01B6                     l2665:
  1627                           
  1628                           ;MasterMain.c: 144:             LcdWriteChar(0xDF);
  1629  01B6  30DF               	movlw	223
  1630  01B7  120A  158A  2736  120A  118A  	fcall	_LcdWriteChar
  1631  01BC                     l2667:
  1632                           
  1633                           ;MasterMain.c: 145:             LcdWriteChar('C');
  1634  01BC  3043               	movlw	67
  1635  01BD  120A  158A  2736  120A  118A  	fcall	_LcdWriteChar
  1636  01C2                     l2669:
  1637                           
  1638                           ;MasterMain.c: 147:             if(hum > umbralHum){
  1639  01C2  1283               	bcf	3,5	;RP0=0, select bank0
  1640  01C3  1303               	bcf	3,6	;RP1=0, select bank0
  1641  01C4  083D               	movf	_hum,w
  1642  01C5  0249               	subwf	_umbralHum,w
  1643  01C6  1803               	skipnc
  1644  01C7  29C9               	goto	u2561
  1645  01C8  29CA               	goto	u2560
  1646  01C9                     u2561:
  1647  01C9  29F9               	goto	l2681
  1648  01CA                     u2560:
  1649  01CA                     l2671:
  1650                           
  1651                           ;MasterMain.c: 148:                 itoa(numero,hum,10);
  1652  01CA  083D               	movf	_hum,w
  1653  01CB  00B3               	movwf	??_main
  1654  01CC  01B4               	clrf	??_main+1
  1655  01CD  0833               	movf	??_main,w
  1656  01CE  00AC               	movwf	itoa@val
  1657  01CF  0834               	movf	??_main+1,w
  1658  01D0  00AD               	movwf	itoa@val+1
  1659  01D1  300A               	movlw	10
  1660  01D2  00AE               	movwf	itoa@base
  1661  01D3  3000               	movlw	0
  1662  01D4  00AF               	movwf	itoa@base+1
  1663  01D5  303F               	movlw	(low (_numero| 0))& (0+255)
  1664  01D6  120A  158A  2770  120A  118A  	fcall	_itoa
  1665  01DB                     l2673:
  1666                           
  1667                           ;MasterMain.c: 150:                 LcdWriteChar(' ');
  1668  01DB  3020               	movlw	32
  1669  01DC  120A  158A  2736  120A  118A  	fcall	_LcdWriteChar
  1670  01E1                     l2675:
  1671                           
  1672                           ;MasterMain.c: 151:                 LcdWriteString(numero);
  1673  01E1  303F               	movlw	(low (_numero| 0))& (0+255)
  1674  01E2  1283               	bcf	3,5	;RP0=0, select bank0
  1675  01E3  1303               	bcf	3,6	;RP1=0, select bank0
  1676  01E4  00A0               	movwf	LcdWriteString@value
  1677  01E5  3000               	movlw	0
  1678  01E6  00A1               	movwf	LcdWriteString@value+1
  1679  01E7  120A  118A  275D  120A  118A  	fcall	_LcdWriteString
  1680  01EC                     l2677:
  1681                           
  1682                           ;MasterMain.c: 152:                 LcdWriteChar('%');
  1683  01EC  3025               	movlw	37
  1684  01ED  120A  158A  2736  120A  118A  	fcall	_LcdWriteChar
  1685  01F2                     l2679:
  1686                           
  1687                           ;MasterMain.c: 153:                 LcdWriteChar(' ');
  1688  01F2  3020               	movlw	32
  1689  01F3  120A  158A  2736  120A  118A  	fcall	_LcdWriteChar
  1690                           
  1691                           ;MasterMain.c: 154:             }else{
  1692  01F8  2A02               	goto	l2683
  1693  01F9                     l2681:
  1694                           
  1695                           ;MasterMain.c: 155:                 LcdWriteString(" N.A");
  1696  01F9  309E               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1697  01FA  00A0               	movwf	LcdWriteString@value
  1698  01FB  3080               	movlw	128
  1699  01FC  00A1               	movwf	LcdWriteString@value+1
  1700  01FD  120A  118A  275D  120A  118A  	fcall	_LcdWriteString
  1701  0202                     l2683:
  1702                           
  1703                           ;MasterMain.c: 160:             if(temp > umbralTemp) PORTA |= 48;
  1704  0202  087A               	movf	_temp,w
  1705  0203  1283               	bcf	3,5	;RP0=0, select bank0
  1706  0204  1303               	bcf	3,6	;RP1=0, select bank0
  1707  0205  024A               	subwf	_umbralTemp,w
  1708  0206  1803               	skipnc
  1709  0207  2A09               	goto	u2571
  1710  0208  2A0A               	goto	u2570
  1711  0209                     u2571:
  1712  0209  2A0F               	goto	l2687
  1713  020A                     u2570:
  1714  020A                     l2685:
  1715  020A  3030               	movlw	48
  1716  020B  00B3               	movwf	??_main
  1717  020C  0833               	movf	??_main,w
  1718  020D  0485               	iorwf	5,f	;volatile
  1719  020E  2879               	goto	l2587
  1720  020F                     l2687:
  1721  020F  084A               	movf	_umbralTemp,w
  1722  0210  3EFB               	addlw	251
  1723  0211  00B3               	movwf	??_main
  1724  0212  30FF               	movlw	255
  1725  0213  1803               	skipnc
  1726  0214  3000               	movlw	0
  1727  0215  00B4               	movwf	??_main+1
  1728  0216  0834               	movf	??_main+1,w
  1729  0217  3A80               	xorlw	128
  1730  0218  00B5               	movwf	??_main+2
  1731  0219  3080               	movlw	128
  1732  021A  0235               	subwf	??_main+2,w
  1733  021B  1D03               	skipz
  1734  021C  2A1F               	goto	u2585
  1735  021D  087A               	movf	_temp,w
  1736  021E  0233               	subwf	??_main,w
  1737  021F                     u2585:
  1738  021F  1C03               	skipc
  1739  0220  2A22               	goto	u2581
  1740  0221  2A23               	goto	u2580
  1741  0222                     u2581:
  1742  0222  2B78               	goto	l111
  1743  0223                     u2580:
  1744  0223                     l2689:
  1745  0223  30CF               	movlw	207
  1746  0224  1283               	bcf	3,5	;RP0=0, select bank0
  1747  0225  1303               	bcf	3,6	;RP1=0, select bank0
  1748  0226  00B3               	movwf	??_main
  1749  0227  0833               	movf	??_main,w
  1750  0228  0585               	andwf	5,f	;volatile
  1751  0229  2879               	goto	l2587
  1752  022A                     l2691:
  1753                           
  1754                           ;MasterMain.c: 163:             LcdSetCursor(1,1);
  1755  022A  01A0               	clrf	LcdSetCursor@column
  1756  022B  0AA0               	incf	LcdSetCursor@column,f
  1757  022C  3001               	movlw	1
  1758  022D  120A  158A  274B  120A  118A  	fcall	_LcdSetCursor
  1759  0232                     l2693:
  1760                           
  1761                           ;MasterMain.c: 164:             LcdWriteString(" Selec. opcion: ");
  1762  0232  3050               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1763  0233  1283               	bcf	3,5	;RP0=0, select bank0
  1764  0234  1303               	bcf	3,6	;RP1=0, select bank0
  1765  0235  00A0               	movwf	LcdWriteString@value
  1766  0236  3080               	movlw	128
  1767  0237  00A1               	movwf	LcdWriteString@value+1
  1768  0238  120A  118A  275D  120A  118A  	fcall	_LcdWriteString
  1769  023D                     l2695:
  1770                           
  1771                           ;MasterMain.c: 165:             LcdSetCursor(2,1);
  1772  023D  1283               	bcf	3,5	;RP0=0, select bank0
  1773  023E  1303               	bcf	3,6	;RP1=0, select bank0
  1774  023F  01A0               	clrf	LcdSetCursor@column
  1775  0240  0AA0               	incf	LcdSetCursor@column,f
  1776  0241  3002               	movlw	2
  1777  0242  120A  158A  274B  120A  118A  	fcall	_LcdSetCursor
  1778  0247                     l2697:
  1779                           
  1780                           ;MasterMain.c: 166:             if(incrementar || decrementar){
  1781  0247  1283               	bcf	3,5	;RP0=0, select bank0
  1782  0248  1303               	bcf	3,6	;RP1=0, select bank0
  1783  0249  083A               	movf	_incrementar,w
  1784  024A  1D03               	btfss	3,2
  1785  024B  2A4D               	goto	u2591
  1786  024C  2A4E               	goto	u2590
  1787  024D                     u2591:
  1788  024D  2A53               	goto	l114
  1789  024E                     u2590:
  1790  024E                     l2699:
  1791  024E  0839               	movf	_decrementar,w
  1792  024F  1903               	btfsc	3,2
  1793  0250  2A52               	goto	u2601
  1794  0251  2A53               	goto	u2600
  1795  0252                     u2601:
  1796  0252  2A56               	goto	l2703
  1797  0253                     u2600:
  1798  0253                     l114:
  1799                           
  1800                           ;MasterMain.c: 167:                 opcion = ~opcion;
  1801  0253  09BB               	comf	_opcion,f
  1802  0254                     l2701:
  1803                           
  1804                           ;MasterMain.c: 168:                 incrementar = decrementar = 0;
  1805  0254  01B9               	clrf	_decrementar
  1806  0255  01BA               	clrf	_incrementar
  1807  0256                     l2703:
  1808                           
  1809                           ;MasterMain.c: 170:             if(opcion)LcdWriteString(" Temp  >humedad");
  1810  0256  083B               	movf	_opcion,w
  1811  0257  1903               	btfsc	3,2
  1812  0258  2A5A               	goto	u2611
  1813  0259  2A5B               	goto	u2610
  1814  025A                     u2611:
  1815  025A  2A65               	goto	l2707
  1816  025B                     u2610:
  1817  025B                     l2705:
  1818  025B  3082               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1819  025C  00A0               	movwf	LcdWriteString@value
  1820  025D  3080               	movlw	128
  1821  025E  00A1               	movwf	LcdWriteString@value+1
  1822  025F  120A  118A  275D  120A  118A  	fcall	_LcdWriteString
  1823  0264  2A6E               	goto	l2709
  1824  0265                     l2707:
  1825  0265  3072               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1826  0266  00A0               	movwf	LcdWriteString@value
  1827  0267  3080               	movlw	128
  1828  0268  00A1               	movwf	LcdWriteString@value+1
  1829  0269  120A  118A  275D  120A  118A  	fcall	_LcdWriteString
  1830  026E                     l2709:
  1831                           
  1832                           ;MasterMain.c: 173:             if(ok){
  1833  026E  1283               	bcf	3,5	;RP0=0, select bank0
  1834  026F  1303               	bcf	3,6	;RP1=0, select bank0
  1835  0270  0838               	movf	_ok,w
  1836  0271  1903               	btfsc	3,2
  1837  0272  2A74               	goto	u2621
  1838  0273  2A75               	goto	u2620
  1839  0274                     u2621:
  1840  0274  2879               	goto	l2587
  1841  0275                     u2620:
  1842  0275                     l2711:
  1843                           
  1844                           ;MasterMain.c: 174:                 ok = 0;
  1845  0275  01B8               	clrf	_ok
  1846                           
  1847                           ;MasterMain.c: 176:                 while(ok == 0){
  1848  0276  2B6F               	goto	l2785
  1849  0277                     l2713:
  1850                           
  1851                           ;MasterMain.c: 177:                     portbAnterior = portbActual;
  1852  0277  0878               	movf	_portbActual,w
  1853  0278  00B3               	movwf	??_main
  1854  0279  0833               	movf	??_main,w
  1855  027A  00F9               	movwf	_portbAnterior
  1856                           
  1857                           ;MasterMain.c: 178:                     portbActual = PORTB;
  1858  027B  0806               	movf	6,w	;volatile
  1859  027C  00B3               	movwf	??_main
  1860  027D  0833               	movf	??_main,w
  1861  027E  00F8               	movwf	_portbActual
  1862  027F                     l2715:
  1863                           
  1864                           ;MasterMain.c: 181:                     if((portbAnterior&2) == 0 && (portbActual&2) == 
      +                          2 ) decrementar = 1;
  1865  027F  18F9               	btfsc	_portbAnterior,1
  1866  0280  2A82               	goto	u2631
  1867  0281  2A83               	goto	u2630
  1868  0282                     u2631:
  1869  0282  2A89               	goto	l120
  1870  0283                     u2630:
  1871  0283                     l2717:
  1872  0283  1CF8               	btfss	_portbActual,1
  1873  0284  2A86               	goto	u2641
  1874  0285  2A87               	goto	u2640
  1875  0286                     u2641:
  1876  0286  2A89               	goto	l120
  1877  0287                     u2640:
  1878  0287                     l2719:
  1879  0287  01B9               	clrf	_decrementar
  1880  0288  0AB9               	incf	_decrementar,f
  1881  0289                     l120:
  1882                           
  1883                           ;MasterMain.c: 182:                     if((portbAnterior&4) == 0 && (portbActual&4) == 
      +                          4 ) incrementar = 1;
  1884  0289  1979               	btfsc	_portbAnterior,2
  1885  028A  2A8C               	goto	u2651
  1886  028B  2A8D               	goto	u2650
  1887  028C                     u2651:
  1888  028C  2A93               	goto	l121
  1889  028D                     u2650:
  1890  028D                     l2721:
  1891  028D  1D78               	btfss	_portbActual,2
  1892  028E  2A90               	goto	u2661
  1893  028F  2A91               	goto	u2660
  1894  0290                     u2661:
  1895  0290  2A93               	goto	l121
  1896  0291                     u2660:
  1897  0291                     l2723:
  1898  0291  01BA               	clrf	_incrementar
  1899  0292  0ABA               	incf	_incrementar,f
  1900  0293                     l121:
  1901                           
  1902                           ;MasterMain.c: 183:                     if((portbAnterior&8) == 0 && (portbActual&8) == 
      +                          8 ) ok = 1;
  1903  0293  19F9               	btfsc	_portbAnterior,3
  1904  0294  2A96               	goto	u2671
  1905  0295  2A97               	goto	u2670
  1906  0296                     u2671:
  1907  0296  2A9D               	goto	l2729
  1908  0297                     u2670:
  1909  0297                     l2725:
  1910  0297  1DF8               	btfss	_portbActual,3
  1911  0298  2A9A               	goto	u2681
  1912  0299  2A9B               	goto	u2680
  1913  029A                     u2681:
  1914  029A  2A9D               	goto	l2729
  1915  029B                     u2680:
  1916  029B                     l2727:
  1917  029B  01B8               	clrf	_ok
  1918  029C  0AB8               	incf	_ok,f
  1919  029D                     l2729:
  1920                           
  1921                           ;MasterMain.c: 186:                     if(opcion){
  1922  029D  083B               	movf	_opcion,w
  1923  029E  1903               	btfsc	3,2
  1924  029F  2AA1               	goto	u2691
  1925  02A0  2AA2               	goto	u2690
  1926  02A1                     u2691:
  1927  02A1  2B06               	goto	l2757
  1928  02A2                     u2690:
  1929  02A2                     l2731:
  1930                           
  1931                           ;MasterMain.c: 188:                         if (incrementar){
  1932  02A2  083A               	movf	_incrementar,w
  1933  02A3  1903               	btfsc	3,2
  1934  02A4  2AA6               	goto	u2701
  1935  02A5  2AA7               	goto	u2700
  1936  02A6                     u2701:
  1937  02A6  2AAC               	goto	l2737
  1938  02A7                     u2700:
  1939  02A7                     l2733:
  1940                           
  1941                           ;MasterMain.c: 189:                             incrementar = 0;
  1942  02A7  01BA               	clrf	_incrementar
  1943  02A8                     l2735:
  1944                           
  1945                           ;MasterMain.c: 190:                             umbralHum++;
  1946  02A8  3001               	movlw	1
  1947  02A9  00B3               	movwf	??_main
  1948  02AA  0833               	movf	??_main,w
  1949  02AB  07C9               	addwf	_umbralHum,f
  1950  02AC                     l2737:
  1951                           
  1952                           ;MasterMain.c: 192:                         if(decrementar && umbralHum>=0){
  1953  02AC  0839               	movf	_decrementar,w
  1954  02AD  1903               	btfsc	3,2
  1955  02AE  2AB0               	goto	u2711
  1956  02AF  2AB1               	goto	u2710
  1957  02B0                     u2711:
  1958  02B0  2AB4               	goto	l2743
  1959  02B1                     u2710:
  1960  02B1                     l2739:
  1961                           
  1962                           ;MasterMain.c: 193:                             decrementar = 0;
  1963  02B1  01B9               	clrf	_decrementar
  1964  02B2                     l2741:
  1965                           
  1966                           ;MasterMain.c: 194:                             umbralHum--;
  1967  02B2  3001               	movlw	1
  1968  02B3  02C9               	subwf	_umbralHum,f
  1969  02B4                     l2743:
  1970                           
  1971                           ;MasterMain.c: 196:                         LcdSetCursor(1,1);
  1972  02B4  01A0               	clrf	LcdSetCursor@column
  1973  02B5  0AA0               	incf	LcdSetCursor@column,f
  1974  02B6  3001               	movlw	1
  1975  02B7  120A  158A  274B  120A  118A  	fcall	_LcdSetCursor
  1976  02BC                     l2745:
  1977                           
  1978                           ;MasterMain.c: 197:                         LcdWriteString("  Hum. minima:  ");
  1979  02BC  302E               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1980  02BD  1283               	bcf	3,5	;RP0=0, select bank0
  1981  02BE  1303               	bcf	3,6	;RP1=0, select bank0
  1982  02BF  00A0               	movwf	LcdWriteString@value
  1983  02C0  3080               	movlw	128
  1984  02C1  00A1               	movwf	LcdWriteString@value+1
  1985  02C2  120A  118A  275D  120A  118A  	fcall	_LcdWriteString
  1986  02C7                     l2747:
  1987                           
  1988                           ;MasterMain.c: 198:                         LcdSetCursor(2,1);
  1989  02C7  1283               	bcf	3,5	;RP0=0, select bank0
  1990  02C8  1303               	bcf	3,6	;RP1=0, select bank0
  1991  02C9  01A0               	clrf	LcdSetCursor@column
  1992  02CA  0AA0               	incf	LcdSetCursor@column,f
  1993  02CB  3002               	movlw	2
  1994  02CC  120A  158A  274B  120A  118A  	fcall	_LcdSetCursor
  1995  02D1                     l2749:
  1996                           
  1997                           ;MasterMain.c: 199:                         LcdWriteString("  ");
  1998  02D1  3016               	movlw	(low (((STR_10+21)-__stringbase)| (0+32768)))& (0+255)
  1999  02D2  1283               	bcf	3,5	;RP0=0, select bank0
  2000  02D3  1303               	bcf	3,6	;RP1=0, select bank0
  2001  02D4  00A0               	movwf	LcdWriteString@value
  2002  02D5  3080               	movlw	128
  2003  02D6  00A1               	movwf	LcdWriteString@value+1
  2004  02D7  120A  118A  275D  120A  118A  	fcall	_LcdWriteString
  2005  02DC                     l2751:
  2006                           
  2007                           ;MasterMain.c: 200:                         itoa(numero,umbralHum,10);
  2008  02DC  1283               	bcf	3,5	;RP0=0, select bank0
  2009  02DD  1303               	bcf	3,6	;RP1=0, select bank0
  2010  02DE  0849               	movf	_umbralHum,w
  2011  02DF  00B3               	movwf	??_main
  2012  02E0  01B4               	clrf	??_main+1
  2013  02E1  0833               	movf	??_main,w
  2014  02E2  00AC               	movwf	itoa@val
  2015  02E3  0834               	movf	??_main+1,w
  2016  02E4  00AD               	movwf	itoa@val+1
  2017  02E5  300A               	movlw	10
  2018  02E6  00AE               	movwf	itoa@base
  2019  02E7  3000               	movlw	0
  2020  02E8  00AF               	movwf	itoa@base+1
  2021  02E9  303F               	movlw	(low (_numero| 0))& (0+255)
  2022  02EA  120A  158A  2770  120A  118A  	fcall	_itoa
  2023  02EF                     l2753:
  2024                           
  2025                           ;MasterMain.c: 201:                         LcdWriteString(numero);
  2026  02EF  303F               	movlw	(low (_numero| 0))& (0+255)
  2027  02F0  1283               	bcf	3,5	;RP0=0, select bank0
  2028  02F1  1303               	bcf	3,6	;RP1=0, select bank0
  2029  02F2  00A0               	movwf	LcdWriteString@value
  2030  02F3  3000               	movlw	0
  2031  02F4  00A1               	movwf	LcdWriteString@value+1
  2032  02F5  120A  118A  275D  120A  118A  	fcall	_LcdWriteString
  2033  02FA                     l2755:
  2034                           
  2035                           ;MasterMain.c: 202:                         LcdWriteString("%                      ");
  2036  02FA  3001               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  2037  02FB  1283               	bcf	3,5	;RP0=0, select bank0
  2038  02FC  1303               	bcf	3,6	;RP1=0, select bank0
  2039  02FD  00A0               	movwf	LcdWriteString@value
  2040  02FE  3080               	movlw	128
  2041  02FF  00A1               	movwf	LcdWriteString@value+1
  2042  0300  120A  118A  275D  120A  118A  	fcall	_LcdWriteString
  2043                           
  2044                           ;MasterMain.c: 203:                     }else{
  2045  0305  2B6F               	goto	l2785
  2046  0306                     l2757:
  2047                           
  2048                           ;MasterMain.c: 204:                         LcdSetCursor(1,1);
  2049  0306  01A0               	clrf	LcdSetCursor@column
  2050  0307  0AA0               	incf	LcdSetCursor@column,f
  2051  0308  3001               	movlw	1
  2052  0309  120A  158A  274B  120A  118A  	fcall	_LcdSetCursor
  2053  030E                     l2759:
  2054                           
  2055                           ;MasterMain.c: 205:                         LcdWriteString("  Temp. Maxima: ");
  2056  030E  303F               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  2057  030F  1283               	bcf	3,5	;RP0=0, select bank0
  2058  0310  1303               	bcf	3,6	;RP1=0, select bank0
  2059  0311  00A0               	movwf	LcdWriteString@value
  2060  0312  3080               	movlw	128
  2061  0313  00A1               	movwf	LcdWriteString@value+1
  2062  0314  120A  118A  275D  120A  118A  	fcall	_LcdWriteString
  2063  0319                     l2761:
  2064                           
  2065                           ;MasterMain.c: 206:                         if (incrementar){
  2066  0319  1283               	bcf	3,5	;RP0=0, select bank0
  2067  031A  1303               	bcf	3,6	;RP1=0, select bank0
  2068  031B  083A               	movf	_incrementar,w
  2069  031C  1903               	btfsc	3,2
  2070  031D  2B1F               	goto	u2721
  2071  031E  2B20               	goto	u2720
  2072  031F                     u2721:
  2073  031F  2B25               	goto	l2767
  2074  0320                     u2720:
  2075  0320                     l2763:
  2076                           
  2077                           ;MasterMain.c: 207:                             incrementar = 0;
  2078  0320  01BA               	clrf	_incrementar
  2079  0321                     l2765:
  2080                           
  2081                           ;MasterMain.c: 208:                             umbralTemp++;
  2082  0321  3001               	movlw	1
  2083  0322  00B3               	movwf	??_main
  2084  0323  0833               	movf	??_main,w
  2085  0324  07CA               	addwf	_umbralTemp,f
  2086  0325                     l2767:
  2087                           
  2088                           ;MasterMain.c: 210:                         if(decrementar && umbralTemp>=0){
  2089  0325  0839               	movf	_decrementar,w
  2090  0326  1903               	btfsc	3,2
  2091  0327  2B29               	goto	u2731
  2092  0328  2B2A               	goto	u2730
  2093  0329                     u2731:
  2094  0329  2B2D               	goto	l2773
  2095  032A                     u2730:
  2096  032A                     l2769:
  2097                           
  2098                           ;MasterMain.c: 211:                             decrementar = 0;
  2099  032A  01B9               	clrf	_decrementar
  2100  032B                     l2771:
  2101                           
  2102                           ;MasterMain.c: 212:                             umbralTemp--;
  2103  032B  3001               	movlw	1
  2104  032C  02CA               	subwf	_umbralTemp,f
  2105  032D                     l2773:
  2106                           
  2107                           ;MasterMain.c: 215:                         LcdSetCursor(2,1);
  2108  032D  01A0               	clrf	LcdSetCursor@column
  2109  032E  0AA0               	incf	LcdSetCursor@column,f
  2110  032F  3002               	movlw	2
  2111  0330  120A  158A  274B  120A  118A  	fcall	_LcdSetCursor
  2112  0335                     l2775:
  2113                           
  2114                           ;MasterMain.c: 216:                         LcdWriteString("  ");
  2115  0335  3016               	movlw	(low (((STR_10+21)-__stringbase)| (0+32768)))& (0+255)
  2116  0336  1283               	bcf	3,5	;RP0=0, select bank0
  2117  0337  1303               	bcf	3,6	;RP1=0, select bank0
  2118  0338  00A0               	movwf	LcdWriteString@value
  2119  0339  3080               	movlw	128
  2120  033A  00A1               	movwf	LcdWriteString@value+1
  2121  033B  120A  118A  275D  120A  118A  	fcall	_LcdWriteString
  2122  0340                     l2777:
  2123                           
  2124                           ;MasterMain.c: 217:                         itoa(numero,umbralTemp,10);
  2125  0340  1283               	bcf	3,5	;RP0=0, select bank0
  2126  0341  1303               	bcf	3,6	;RP1=0, select bank0
  2127  0342  084A               	movf	_umbralTemp,w
  2128  0343  00B3               	movwf	??_main
  2129  0344  01B4               	clrf	??_main+1
  2130  0345  0833               	movf	??_main,w
  2131  0346  00AC               	movwf	itoa@val
  2132  0347  0834               	movf	??_main+1,w
  2133  0348  00AD               	movwf	itoa@val+1
  2134  0349  300A               	movlw	10
  2135  034A  00AE               	movwf	itoa@base
  2136  034B  3000               	movlw	0
  2137  034C  00AF               	movwf	itoa@base+1
  2138  034D  303F               	movlw	(low (_numero| 0))& (0+255)
  2139  034E  120A  158A  2770  120A  118A  	fcall	_itoa
  2140  0353                     l2779:
  2141                           
  2142                           ;MasterMain.c: 218:                         LcdWriteString(numero);
  2143  0353  303F               	movlw	(low (_numero| 0))& (0+255)
  2144  0354  1283               	bcf	3,5	;RP0=0, select bank0
  2145  0355  1303               	bcf	3,6	;RP1=0, select bank0
  2146  0356  00A0               	movwf	LcdWriteString@value
  2147  0357  3000               	movlw	0
  2148  0358  00A1               	movwf	LcdWriteString@value+1
  2149  0359  120A  118A  275D  120A  118A  	fcall	_LcdWriteString
  2150  035E                     l2781:
  2151                           
  2152                           ;MasterMain.c: 219:                         LcdWriteChar(0xDF);
  2153  035E  30DF               	movlw	223
  2154  035F  120A  158A  2736  120A  118A  	fcall	_LcdWriteChar
  2155  0364                     l2783:
  2156                           
  2157                           ;MasterMain.c: 220:                         LcdWriteString("C                   ");
  2158  0364  3019               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  2159  0365  1283               	bcf	3,5	;RP0=0, select bank0
  2160  0366  1303               	bcf	3,6	;RP1=0, select bank0
  2161  0367  00A0               	movwf	LcdWriteString@value
  2162  0368  3080               	movlw	128
  2163  0369  00A1               	movwf	LcdWriteString@value+1
  2164  036A  120A  118A  275D  120A  118A  	fcall	_LcdWriteString
  2165  036F                     l2785:
  2166                           
  2167                           ;MasterMain.c: 176:                 while(ok == 0){
  2168  036F  1283               	bcf	3,5	;RP0=0, select bank0
  2169  0370  1303               	bcf	3,6	;RP1=0, select bank0
  2170  0371  0838               	movf	_ok,w
  2171  0372  1903               	btfsc	3,2
  2172  0373  2B75               	goto	u2741
  2173  0374  2B76               	goto	u2740
  2174  0375                     u2741:
  2175  0375  2A77               	goto	l2713
  2176  0376                     u2740:
  2177  0376                     l2787:
  2178                           
  2179                           ;MasterMain.c: 224:                 ok = 0;
  2180  0376  01B8               	clrf	_ok
  2181  0377  2879               	goto	l2587
  2182  0378                     l111:	
  2183                           ;MasterMain.c: 227:         }
  2184                           
  2185  0378  2879               	goto	l2587
  2186  0379  120A  118A  280C   	ljmp	start
  2187  037C                     __end_of_main:
  2188                           
  2189                           	psect	text1
  2190  037C                     __ptext1:	
  2191 ;; *************** function _step *****************
  2192 ;; Defined at:
  2193 ;;		line 236 in file "MasterMain.c"
  2194 ;; Parameters:    Size  Location     Type
  2195 ;;  steps           1    wreg     unsigned char 
  2196 ;;  dir             1    3[COMMON] unsigned char 
  2197 ;; Auto vars:     Size  Location     Type
  2198 ;;  steps           1    4[BANK0 ] unsigned char 
  2199 ;;  i               2    2[BANK0 ] int 
  2200 ;;  i               2    0[BANK0 ] int 
  2201 ;; Return value:  Size  Location     Type
  2202 ;;                  1    wreg      void 
  2203 ;; Registers used:
  2204 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2205 ;; Tracked objects:
  2206 ;;		On entry : 0/0
  2207 ;;		On exit  : 0/0
  2208 ;;		Unchanged: 0/0
  2209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2210 ;;      Params:         1       0       0       0       0
  2211 ;;      Locals:         0       5       0       0       0
  2212 ;;      Temps:          2       0       0       0       0
  2213 ;;      Totals:         3       5       0       0       0
  2214 ;;Total ram usage:        8 bytes
  2215 ;; Hardware stack levels used:    1
  2216 ;; Hardware stack levels required when called:    1
  2217 ;; This function calls:
  2218 ;;		Nothing
  2219 ;; This function is called by:
  2220 ;;		_main
  2221 ;; This function uses a non-reentrant model
  2222 ;;
  2223                           
  2224                           
  2225                           ;psect for function _step
  2226  037C                     _step:
  2227                           
  2228                           ;incstack = 0
  2229                           ; Regs used in _step: [wreg-fsr0h+status,2+status,0]
  2230                           ;step@steps stored from wreg
  2231  037C  1283               	bcf	3,5	;RP0=0, select bank0
  2232  037D  1303               	bcf	3,6	;RP1=0, select bank0
  2233  037E  00A4               	movwf	step@steps
  2234  037F                     l2427:
  2235                           
  2236                           ;MasterMain.c: 238:     switch(dir){
  2237  037F  2C32               	goto	l2483
  2238  0380                     l2429:
  2239                           
  2240                           ;MasterMain.c: 240:             for (int i = 0; i<steps; i++){
  2241  0380  01A0               	clrf	step@i
  2242  0381  01A1               	clrf	step@i+1
  2243  0382  2BCB               	goto	l2453
  2244  0383                     l2431:
  2245                           
  2246                           ;MasterMain.c: 241:                 PORTA &= ~14;
  2247  0383  30F1               	movlw	241
  2248  0384  00F4               	movwf	??_step
  2249  0385  0874               	movf	??_step,w
  2250  0386  1283               	bcf	3,5	;RP0=0, select bank0
  2251  0387  1303               	bcf	3,6	;RP1=0, select bank0
  2252  0388  0585               	andwf	5,f	;volatile
  2253  0389                     l2433:
  2254                           
  2255                           ;MasterMain.c: 242:                 PORTA |= 1;
  2256  0389  1405               	bsf	5,0	;volatile
  2257  038A                     l2435:
  2258                           
  2259                           ;MasterMain.c: 243:                 _delay((unsigned long)((10)*(4000000/4000.0)));
  2260  038A  300D               	movlw	13
  2261  038B  00F5               	movwf	??_step+1
  2262  038C  30FB               	movlw	251
  2263  038D  00F4               	movwf	??_step
  2264  038E                     u2787:
  2265  038E  0BF4               	decfsz	??_step,f
  2266  038F  2B8E               	goto	u2787
  2267  0390  0BF5               	decfsz	??_step+1,f
  2268  0391  2B8E               	goto	u2787
  2269  0392  2B93               	nop2
  2270  0393                     l2437:
  2271                           
  2272                           ;MasterMain.c: 244:                 PORTA &= ~13;
  2273  0393  30F2               	movlw	242
  2274  0394  00F4               	movwf	??_step
  2275  0395  0874               	movf	??_step,w
  2276  0396  1283               	bcf	3,5	;RP0=0, select bank0
  2277  0397  1303               	bcf	3,6	;RP1=0, select bank0
  2278  0398  0585               	andwf	5,f	;volatile
  2279  0399                     l2439:
  2280                           
  2281                           ;MasterMain.c: 245:                 PORTA |= 2;
  2282  0399  1485               	bsf	5,1	;volatile
  2283                           
  2284                           ;MasterMain.c: 246:                 _delay((unsigned long)((10)*(4000000/4000.0)));
  2285  039A  300D               	movlw	13
  2286  039B  00F5               	movwf	??_step+1
  2287  039C  30FB               	movlw	251
  2288  039D  00F4               	movwf	??_step
  2289  039E                     u2797:
  2290  039E  0BF4               	decfsz	??_step,f
  2291  039F  2B9E               	goto	u2797
  2292  03A0  0BF5               	decfsz	??_step+1,f
  2293  03A1  2B9E               	goto	u2797
  2294  03A2  2BA3               	nop2
  2295  03A3                     l2441:
  2296                           
  2297                           ;MasterMain.c: 247:                 PORTA &= ~11;
  2298  03A3  30F4               	movlw	244
  2299  03A4  00F4               	movwf	??_step
  2300  03A5  0874               	movf	??_step,w
  2301  03A6  1283               	bcf	3,5	;RP0=0, select bank0
  2302  03A7  1303               	bcf	3,6	;RP1=0, select bank0
  2303  03A8  0585               	andwf	5,f	;volatile
  2304  03A9                     l2443:
  2305                           
  2306                           ;MasterMain.c: 248:                 PORTA |= 4;
  2307  03A9  1505               	bsf	5,2	;volatile
  2308  03AA                     l2445:
  2309                           
  2310                           ;MasterMain.c: 249:                 _delay((unsigned long)((10)*(4000000/4000.0)));
  2311  03AA  300D               	movlw	13
  2312  03AB  00F5               	movwf	??_step+1
  2313  03AC  30FB               	movlw	251
  2314  03AD  00F4               	movwf	??_step
  2315  03AE                     u2807:
  2316  03AE  0BF4               	decfsz	??_step,f
  2317  03AF  2BAE               	goto	u2807
  2318  03B0  0BF5               	decfsz	??_step+1,f
  2319  03B1  2BAE               	goto	u2807
  2320  03B2  2BB3               	nop2
  2321                           
  2322                           ;MasterMain.c: 250:                 PORTA &= ~5;
  2323  03B3  30FA               	movlw	250
  2324  03B4  00F4               	movwf	??_step
  2325  03B5  0874               	movf	??_step,w
  2326  03B6  1283               	bcf	3,5	;RP0=0, select bank0
  2327  03B7  1303               	bcf	3,6	;RP1=0, select bank0
  2328  03B8  0585               	andwf	5,f	;volatile
  2329  03B9                     l2447:
  2330                           
  2331                           ;MasterMain.c: 251:                 PORTA |= 8;
  2332  03B9  1585               	bsf	5,3	;volatile
  2333  03BA                     l2449:
  2334                           
  2335                           ;MasterMain.c: 252:                 _delay((unsigned long)((10)*(4000000/4000.0)));
  2336  03BA  300D               	movlw	13
  2337  03BB  00F5               	movwf	??_step+1
  2338  03BC  30FB               	movlw	251
  2339  03BD  00F4               	movwf	??_step
  2340  03BE                     u2817:
  2341  03BE  0BF4               	decfsz	??_step,f
  2342  03BF  2BBE               	goto	u2817
  2343  03C0  0BF5               	decfsz	??_step+1,f
  2344  03C1  2BBE               	goto	u2817
  2345  03C2  2BC3               	nop2
  2346  03C3                     l2451:
  2347                           
  2348                           ;MasterMain.c: 253:             }
  2349  03C3  3001               	movlw	1
  2350  03C4  1283               	bcf	3,5	;RP0=0, select bank0
  2351  03C5  1303               	bcf	3,6	;RP1=0, select bank0
  2352  03C6  07A0               	addwf	step@i,f
  2353  03C7  1803               	skipnc
  2354  03C8  0AA1               	incf	step@i+1,f
  2355  03C9  3000               	movlw	0
  2356  03CA  07A1               	addwf	step@i+1,f
  2357  03CB                     l2453:
  2358  03CB  0821               	movf	step@i+1,w
  2359  03CC  3A80               	xorlw	128
  2360  03CD  00F4               	movwf	??_step
  2361  03CE  3080               	movlw	128
  2362  03CF  0274               	subwf	??_step,w
  2363  03D0  1D03               	skipz
  2364  03D1  2BD4               	goto	u2395
  2365  03D2  0824               	movf	step@steps,w
  2366  03D3  0220               	subwf	step@i,w
  2367  03D4                     u2395:
  2368  03D4  1C03               	skipc
  2369  03D5  2BD7               	goto	u2391
  2370  03D6  2BD8               	goto	u2390
  2371  03D7                     u2391:
  2372  03D7  2B83               	goto	l2431
  2373  03D8                     u2390:
  2374  03D8  2C42               	goto	l145
  2375  03D9                     l2455:
  2376                           
  2377                           ;MasterMain.c: 256:             for (int i = 0; i<steps; i++){
  2378  03D9  01A2               	clrf	step@i_296
  2379  03DA  01A3               	clrf	step@i_296+1
  2380  03DB  2C24               	goto	l2479
  2381  03DC                     l2457:
  2382                           
  2383                           ;MasterMain.c: 257:                 PORTA &= ~5;
  2384  03DC  30FA               	movlw	250
  2385  03DD  00F4               	movwf	??_step
  2386  03DE  0874               	movf	??_step,w
  2387  03DF  1283               	bcf	3,5	;RP0=0, select bank0
  2388  03E0  1303               	bcf	3,6	;RP1=0, select bank0
  2389  03E1  0585               	andwf	5,f	;volatile
  2390  03E2                     l2459:
  2391                           
  2392                           ;MasterMain.c: 258:                 PORTA |= 8;
  2393  03E2  1585               	bsf	5,3	;volatile
  2394  03E3                     l2461:
  2395                           
  2396                           ;MasterMain.c: 259:                 _delay((unsigned long)((10)*(4000000/4000.0)));
  2397  03E3  300D               	movlw	13
  2398  03E4  00F5               	movwf	??_step+1
  2399  03E5  30FB               	movlw	251
  2400  03E6  00F4               	movwf	??_step
  2401  03E7                     u2827:
  2402  03E7  0BF4               	decfsz	??_step,f
  2403  03E8  2BE7               	goto	u2827
  2404  03E9  0BF5               	decfsz	??_step+1,f
  2405  03EA  2BE7               	goto	u2827
  2406  03EB  2BEC               	nop2
  2407  03EC                     l2463:
  2408                           
  2409                           ;MasterMain.c: 261:                 PORTA &= ~11;
  2410  03EC  30F4               	movlw	244
  2411  03ED  00F4               	movwf	??_step
  2412  03EE  0874               	movf	??_step,w
  2413  03EF  1283               	bcf	3,5	;RP0=0, select bank0
  2414  03F0  1303               	bcf	3,6	;RP1=0, select bank0
  2415  03F1  0585               	andwf	5,f	;volatile
  2416  03F2                     l2465:
  2417                           
  2418                           ;MasterMain.c: 262:                 PORTA |= 4;
  2419  03F2  1505               	bsf	5,2	;volatile
  2420                           
  2421                           ;MasterMain.c: 263:                 _delay((unsigned long)((10)*(4000000/4000.0)));
  2422  03F3  300D               	movlw	13
  2423  03F4  00F5               	movwf	??_step+1
  2424  03F5  30FB               	movlw	251
  2425  03F6  00F4               	movwf	??_step
  2426  03F7                     u2837:
  2427  03F7  0BF4               	decfsz	??_step,f
  2428  03F8  2BF7               	goto	u2837
  2429  03F9  0BF5               	decfsz	??_step+1,f
  2430  03FA  2BF7               	goto	u2837
  2431  03FB  2BFC               	nop2
  2432  03FC                     l2467:
  2433                           
  2434                           ;MasterMain.c: 266:                 PORTA &= ~13;
  2435  03FC  30F2               	movlw	242
  2436  03FD  00F4               	movwf	??_step
  2437  03FE  0874               	movf	??_step,w
  2438  03FF  1283               	bcf	3,5	;RP0=0, select bank0
  2439  0400  1303               	bcf	3,6	;RP1=0, select bank0
  2440  0401  0585               	andwf	5,f	;volatile
  2441  0402                     l2469:
  2442                           
  2443                           ;MasterMain.c: 267:                 PORTA |= 2;
  2444  0402  1485               	bsf	5,1	;volatile
  2445  0403                     l2471:
  2446                           
  2447                           ;MasterMain.c: 268:                 _delay((unsigned long)((10)*(4000000/4000.0)));
  2448  0403  300D               	movlw	13
  2449  0404  00F5               	movwf	??_step+1
  2450  0405  30FB               	movlw	251
  2451  0406  00F4               	movwf	??_step
  2452  0407                     u2847:
  2453  0407  0BF4               	decfsz	??_step,f
  2454  0408  2C07               	goto	u2847
  2455  0409  0BF5               	decfsz	??_step+1,f
  2456  040A  2C07               	goto	u2847
  2457  040B  2C0C               	nop2
  2458                           
  2459                           ;MasterMain.c: 271:                 PORTA &= ~14;
  2460  040C  30F1               	movlw	241
  2461  040D  00F4               	movwf	??_step
  2462  040E  0874               	movf	??_step,w
  2463  040F  1283               	bcf	3,5	;RP0=0, select bank0
  2464  0410  1303               	bcf	3,6	;RP1=0, select bank0
  2465  0411  0585               	andwf	5,f	;volatile
  2466  0412                     l2473:
  2467                           
  2468                           ;MasterMain.c: 272:                 PORTA |= 1;
  2469  0412  1405               	bsf	5,0	;volatile
  2470  0413                     l2475:
  2471                           
  2472                           ;MasterMain.c: 273:                 _delay((unsigned long)((10)*(4000000/4000.0)));
  2473  0413  300D               	movlw	13
  2474  0414  00F5               	movwf	??_step+1
  2475  0415  30FB               	movlw	251
  2476  0416  00F4               	movwf	??_step
  2477  0417                     u2857:
  2478  0417  0BF4               	decfsz	??_step,f
  2479  0418  2C17               	goto	u2857
  2480  0419  0BF5               	decfsz	??_step+1,f
  2481  041A  2C17               	goto	u2857
  2482  041B  2C1C               	nop2
  2483  041C                     l2477:
  2484                           
  2485                           ;MasterMain.c: 275:             }
  2486  041C  3001               	movlw	1
  2487  041D  1283               	bcf	3,5	;RP0=0, select bank0
  2488  041E  1303               	bcf	3,6	;RP1=0, select bank0
  2489  041F  07A2               	addwf	step@i_296,f
  2490  0420  1803               	skipnc
  2491  0421  0AA3               	incf	step@i_296+1,f
  2492  0422  3000               	movlw	0
  2493  0423  07A3               	addwf	step@i_296+1,f
  2494  0424                     l2479:
  2495  0424  0823               	movf	step@i_296+1,w
  2496  0425  3A80               	xorlw	128
  2497  0426  00F4               	movwf	??_step
  2498  0427  3080               	movlw	128
  2499  0428  0274               	subwf	??_step,w
  2500  0429  1D03               	skipz
  2501  042A  2C2D               	goto	u2405
  2502  042B  0824               	movf	step@steps,w
  2503  042C  0222               	subwf	step@i_296,w
  2504  042D                     u2405:
  2505  042D  1C03               	skipc
  2506  042E  2C30               	goto	u2401
  2507  042F  2C31               	goto	u2400
  2508  0430                     u2401:
  2509  0430  2BDC               	goto	l2457
  2510  0431                     u2400:
  2511  0431  2C42               	goto	l145
  2512  0432                     l2483:
  2513  0432  0873               	movf	step@dir,w
  2514  0433  00F4               	movwf	??_step
  2515  0434  01F5               	clrf	??_step+1
  2516                           
  2517                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2518                           ; Switch size 1, requested type "simple"
  2519                           ; Number of cases is 1, Range of values is 0 to 0
  2520                           ; switch strategies available:
  2521                           ; Name         Instructions Cycles
  2522                           ; simple_byte            4     3 (average)
  2523                           ; direct_byte           11     8 (fixed)
  2524                           ; jumptable            260     6 (fixed)
  2525                           ;	Chosen strategy is simple_byte
  2526  0435  0875               	movf	??_step+1,w
  2527  0436  3A00               	xorlw	0	; case 0
  2528  0437  1903               	skipnz
  2529  0438  2C3A               	goto	l2897
  2530  0439  2C42               	goto	l145
  2531  043A                     l2897:
  2532                           
  2533                           ; Switch size 1, requested type "simple"
  2534                           ; Number of cases is 2, Range of values is 0 to 1
  2535                           ; switch strategies available:
  2536                           ; Name         Instructions Cycles
  2537                           ; simple_byte            7     4 (average)
  2538                           ; direct_byte           14     8 (fixed)
  2539                           ; jumptable            260     6 (fixed)
  2540                           ;	Chosen strategy is simple_byte
  2541  043A  0874               	movf	??_step,w
  2542  043B  3A00               	xorlw	0	; case 0
  2543  043C  1903               	skipnz
  2544  043D  2B80               	goto	l2429
  2545  043E  3A01               	xorlw	1	; case 1
  2546  043F  1903               	skipnz
  2547  0440  2BD9               	goto	l2455
  2548  0441  2C42               	goto	l145
  2549  0442                     l145:
  2550  0442  0008               	return
  2551  0443                     __end_of_step:
  2552                           
  2553                           	psect	text2
  2554  0F70                     __ptext2:	
  2555 ;; *************** function _itoa *****************
  2556 ;; Defined at:
  2557 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\itoa.c"
  2558 ;; Parameters:    Size  Location     Type
  2559 ;;  buf             1    wreg     PTR unsigned char 
  2560 ;;		 -> numero(10), 
  2561 ;;  val             2   12[BANK0 ] int 
  2562 ;;  base            2   14[BANK0 ] int 
  2563 ;; Auto vars:     Size  Location     Type
  2564 ;;  buf             1   18[BANK0 ] PTR unsigned char 
  2565 ;;		 -> numero(10), 
  2566 ;;  cp              1    0        PTR unsigned char 
  2567 ;;		 -> numero(10), 
  2568 ;; Return value:  Size  Location     Type
  2569 ;;                  1    wreg      PTR unsigned char 
  2570 ;; Registers used:
  2571 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2572 ;; Tracked objects:
  2573 ;;		On entry : 0/0
  2574 ;;		On exit  : 0/0
  2575 ;;		Unchanged: 0/0
  2576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2577 ;;      Params:         0       4       0       0       0
  2578 ;;      Locals:         0       2       0       0       0
  2579 ;;      Temps:          0       1       0       0       0
  2580 ;;      Totals:         0       7       0       0       0
  2581 ;;Total ram usage:        7 bytes
  2582 ;; Hardware stack levels used:    1
  2583 ;; Hardware stack levels required when called:    3
  2584 ;; This function calls:
  2585 ;;		_utoa
  2586 ;; This function is called by:
  2587 ;;		_main
  2588 ;; This function uses a non-reentrant model
  2589 ;;
  2590                           
  2591                           
  2592                           ;psect for function _itoa
  2593  0F70                     _itoa:
  2594                           
  2595                           ;incstack = 0
  2596                           ; Regs used in _itoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2597                           ;itoa@buf stored from wreg
  2598  0F70  1283               	bcf	3,5	;RP0=0, select bank0
  2599  0F71  1303               	bcf	3,6	;RP1=0, select bank0
  2600  0F72  00B2               	movwf	itoa@buf
  2601  0F73                     l2543:
  2602  0F73                     l2545:
  2603  0F73  1FAD               	btfss	itoa@val+1,7
  2604  0F74  2F76               	goto	u2451
  2605  0F75  2F77               	goto	u2450
  2606  0F76                     u2451:
  2607  0F76  2F87               	goto	l2553
  2608  0F77                     u2450:
  2609  0F77                     l2547:
  2610  0F77  302D               	movlw	45
  2611  0F78  00B0               	movwf	??_itoa
  2612  0F79  0832               	movf	itoa@buf,w
  2613  0F7A  0084               	movwf	4
  2614  0F7B  0830               	movf	??_itoa,w
  2615  0F7C  1383               	bcf	3,7	;select IRP bank0
  2616  0F7D  0080               	movwf	0
  2617  0F7E                     l2549:
  2618  0F7E  3001               	movlw	1
  2619  0F7F  00B0               	movwf	??_itoa
  2620  0F80  0830               	movf	??_itoa,w
  2621  0F81  07B2               	addwf	itoa@buf,f
  2622  0F82                     l2551:
  2623  0F82  09AC               	comf	itoa@val,f
  2624  0F83  09AD               	comf	itoa@val+1,f
  2625  0F84  0AAC               	incf	itoa@val,f
  2626  0F85  1903               	skipnz
  2627  0F86  0AAD               	incf	itoa@val+1,f
  2628  0F87                     l2553:
  2629  0F87  082D               	movf	itoa@val+1,w
  2630  0F88  00A4               	movwf	utoa@val+1
  2631  0F89  082C               	movf	itoa@val,w
  2632  0F8A  00A3               	movwf	utoa@val
  2633  0F8B  082F               	movf	itoa@base+1,w
  2634  0F8C  00A6               	movwf	utoa@base+1
  2635  0F8D  082E               	movf	itoa@base,w
  2636  0F8E  00A5               	movwf	utoa@base
  2637  0F8F  0832               	movf	itoa@buf,w
  2638  0F90  120A  118A  25F2  120A  158A  	fcall	_utoa
  2639  0F95                     l847:
  2640  0F95  0008               	return
  2641  0F96                     __end_of_itoa:
  2642                           
  2643                           	psect	text3
  2644  05F2                     __ptext3:	
  2645 ;; *************** function _utoa *****************
  2646 ;; Defined at:
  2647 ;;		line 17 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\itoa.c"
  2648 ;; Parameters:    Size  Location     Type
  2649 ;;  buf             1    wreg     PTR unsigned char 
  2650 ;;		 -> numero(10), 
  2651 ;;  val             2    3[BANK0 ] unsigned int 
  2652 ;;  base            2    5[BANK0 ] int 
  2653 ;; Auto vars:     Size  Location     Type
  2654 ;;  buf             1   11[BANK0 ] PTR unsigned char 
  2655 ;;		 -> numero(10), 
  2656 ;;  v               2    8[BANK0 ] unsigned int 
  2657 ;;  c               1   10[BANK0 ] unsigned char 
  2658 ;; Return value:  Size  Location     Type
  2659 ;;                  1    wreg      PTR unsigned char 
  2660 ;; Registers used:
  2661 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2662 ;; Tracked objects:
  2663 ;;		On entry : 0/0
  2664 ;;		On exit  : 0/0
  2665 ;;		Unchanged: 0/0
  2666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2667 ;;      Params:         0       4       0       0       0
  2668 ;;      Locals:         0       4       0       0       0
  2669 ;;      Temps:          0       1       0       0       0
  2670 ;;      Totals:         0       9       0       0       0
  2671 ;;Total ram usage:        9 bytes
  2672 ;; Hardware stack levels used:    1
  2673 ;; Hardware stack levels required when called:    2
  2674 ;; This function calls:
  2675 ;;		___lwdiv
  2676 ;;		___lwmod
  2677 ;; This function is called by:
  2678 ;;		_itoa
  2679 ;; This function uses a non-reentrant model
  2680 ;;
  2681                           
  2682                           
  2683                           ;psect for function _utoa
  2684  05F2                     _utoa:
  2685                           
  2686                           ;incstack = 0
  2687                           ; Regs used in _utoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2688                           ;utoa@buf stored from wreg
  2689  05F2  1283               	bcf	3,5	;RP0=0, select bank0
  2690  05F3  1303               	bcf	3,6	;RP1=0, select bank0
  2691  05F4  00AB               	movwf	utoa@buf
  2692  05F5                     l2345:
  2693  05F5  0824               	movf	utoa@val+1,w
  2694  05F6  00A9               	movwf	utoa@v+1
  2695  05F7  0823               	movf	utoa@val,w
  2696  05F8  00A8               	movwf	utoa@v
  2697  05F9                     l2347:
  2698  05F9  0826               	movf	utoa@base+1,w
  2699  05FA  00F4               	movwf	___lwdiv@divisor+1
  2700  05FB  0825               	movf	utoa@base,w
  2701  05FC  00F3               	movwf	___lwdiv@divisor
  2702  05FD  0829               	movf	utoa@v+1,w
  2703  05FE  00F6               	movwf	___lwdiv@dividend+1
  2704  05FF  0828               	movf	utoa@v,w
  2705  0600  00F5               	movwf	___lwdiv@dividend
  2706  0601  120A  118A  2717  120A  118A  	fcall	___lwdiv
  2707  0606  0874               	movf	?___lwdiv+1,w
  2708  0607  1283               	bcf	3,5	;RP0=0, select bank0
  2709  0608  1303               	bcf	3,6	;RP1=0, select bank0
  2710  0609  00A9               	movwf	utoa@v+1
  2711  060A  0873               	movf	?___lwdiv,w
  2712  060B  00A8               	movwf	utoa@v
  2713  060C                     l2349:
  2714  060C  3001               	movlw	1
  2715  060D  00A7               	movwf	??_utoa
  2716  060E  0827               	movf	??_utoa,w
  2717  060F  07AB               	addwf	utoa@buf,f
  2718  0610                     l2351:
  2719  0610  0828               	movf	utoa@v,w
  2720  0611  0429               	iorwf	utoa@v+1,w
  2721  0612  1D03               	btfss	3,2
  2722  0613  2E15               	goto	u2321
  2723  0614  2E16               	goto	u2320
  2724  0615                     u2321:
  2725  0615  2DF9               	goto	l2347
  2726  0616                     u2320:
  2727  0616                     l2353:
  2728  0616  082B               	movf	utoa@buf,w
  2729  0617  0084               	movwf	4
  2730  0618  1383               	bcf	3,7	;select IRP bank0
  2731  0619  0180               	clrf	0
  2732  061A                     l2355:
  2733  061A  3001               	movlw	1
  2734  061B  02AB               	subwf	utoa@buf,f
  2735  061C                     l2357:
  2736  061C  0826               	movf	utoa@base+1,w
  2737  061D  00F4               	movwf	___lwmod@divisor+1
  2738  061E  0825               	movf	utoa@base,w
  2739  061F  00F3               	movwf	___lwmod@divisor
  2740  0620  0824               	movf	utoa@val+1,w
  2741  0621  00F6               	movwf	___lwmod@dividend+1
  2742  0622  0823               	movf	utoa@val,w
  2743  0623  00F5               	movwf	___lwmod@dividend
  2744  0624  120A  118A  27A3  120A  118A  	fcall	___lwmod
  2745  0629  0873               	movf	?___lwmod,w
  2746  062A  1283               	bcf	3,5	;RP0=0, select bank0
  2747  062B  1303               	bcf	3,6	;RP1=0, select bank0
  2748  062C  00A7               	movwf	??_utoa
  2749  062D  0827               	movf	??_utoa,w
  2750  062E  00AA               	movwf	utoa@c
  2751  062F                     l2359:
  2752  062F  0826               	movf	utoa@base+1,w
  2753  0630  00F4               	movwf	___lwdiv@divisor+1
  2754  0631  0825               	movf	utoa@base,w
  2755  0632  00F3               	movwf	___lwdiv@divisor
  2756  0633  0824               	movf	utoa@val+1,w
  2757  0634  00F6               	movwf	___lwdiv@dividend+1
  2758  0635  0823               	movf	utoa@val,w
  2759  0636  00F5               	movwf	___lwdiv@dividend
  2760  0637  120A  118A  2717  120A  118A  	fcall	___lwdiv
  2761  063C  0874               	movf	?___lwdiv+1,w
  2762  063D  1283               	bcf	3,5	;RP0=0, select bank0
  2763  063E  1303               	bcf	3,6	;RP1=0, select bank0
  2764  063F  00A4               	movwf	utoa@val+1
  2765  0640  0873               	movf	?___lwdiv,w
  2766  0641  00A3               	movwf	utoa@val
  2767  0642                     l2361:
  2768  0642  300A               	movlw	10
  2769  0643  022A               	subwf	utoa@c,w
  2770  0644  1C03               	skipc
  2771  0645  2E47               	goto	u2331
  2772  0646  2E48               	goto	u2330
  2773  0647                     u2331:
  2774  0647  2E4C               	goto	l853
  2775  0648                     u2330:
  2776  0648                     l2363:
  2777  0648  3007               	movlw	7
  2778  0649  00A7               	movwf	??_utoa
  2779  064A  0827               	movf	??_utoa,w
  2780  064B  07AA               	addwf	utoa@c,f
  2781  064C                     l853:
  2782  064C  3030               	movlw	48
  2783  064D  00A7               	movwf	??_utoa
  2784  064E  0827               	movf	??_utoa,w
  2785  064F  07AA               	addwf	utoa@c,f
  2786  0650                     l2365:
  2787  0650  082A               	movf	utoa@c,w
  2788  0651  00A7               	movwf	??_utoa
  2789  0652  082B               	movf	utoa@buf,w
  2790  0653  0084               	movwf	4
  2791  0654  0827               	movf	??_utoa,w
  2792  0655  1383               	bcf	3,7	;select IRP bank0
  2793  0656  0080               	movwf	0
  2794  0657                     l2367:
  2795  0657  3001               	movlw	1
  2796  0658  02AB               	subwf	utoa@buf,f
  2797  0659                     l2369:
  2798  0659  0823               	movf	utoa@val,w
  2799  065A  0424               	iorwf	utoa@val+1,w
  2800  065B  1D03               	btfss	3,2
  2801  065C  2E5E               	goto	u2341
  2802  065D  2E5F               	goto	u2340
  2803  065E                     u2341:
  2804  065E  2E1C               	goto	l2357
  2805  065F                     u2340:
  2806  065F                     l2371:
  2807                           
  2808                           ;	Return value of _utoa is never used
  2809  065F  3001               	movlw	1
  2810  0660  00A7               	movwf	??_utoa
  2811  0661  0827               	movf	??_utoa,w
  2812  0662  07AB               	addwf	utoa@buf,f
  2813  0663                     l855:
  2814  0663  0008               	return
  2815  0664                     __end_of_utoa:
  2816                           
  2817                           	psect	text4
  2818  07A3                     __ptext4:	
  2819 ;; *************** function ___lwmod *****************
  2820 ;; Defined at:
  2821 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  2822 ;; Parameters:    Size  Location     Type
  2823 ;;  divisor         2    3[COMMON] unsigned int 
  2824 ;;  dividend        2    5[COMMON] unsigned int 
  2825 ;; Auto vars:     Size  Location     Type
  2826 ;;  counter         1    0[BANK0 ] unsigned char 
  2827 ;; Return value:  Size  Location     Type
  2828 ;;                  2    3[COMMON] unsigned int 
  2829 ;; Registers used:
  2830 ;;		wreg, status,2, status,0
  2831 ;; Tracked objects:
  2832 ;;		On entry : 0/0
  2833 ;;		On exit  : 0/0
  2834 ;;		Unchanged: 0/0
  2835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2836 ;;      Params:         4       0       0       0       0
  2837 ;;      Locals:         0       1       0       0       0
  2838 ;;      Temps:          1       0       0       0       0
  2839 ;;      Totals:         5       1       0       0       0
  2840 ;;Total ram usage:        6 bytes
  2841 ;; Hardware stack levels used:    1
  2842 ;; Hardware stack levels required when called:    1
  2843 ;; This function calls:
  2844 ;;		Nothing
  2845 ;; This function is called by:
  2846 ;;		_utoa
  2847 ;; This function uses a non-reentrant model
  2848 ;;
  2849                           
  2850                           
  2851                           ;psect for function ___lwmod
  2852  07A3                     ___lwmod:
  2853  07A3                     l2275:	
  2854                           ;incstack = 0
  2855                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2856                           
  2857  07A3  0873               	movf	___lwmod@divisor,w
  2858  07A4  0474               	iorwf	___lwmod@divisor+1,w
  2859  07A5  1903               	btfsc	3,2
  2860  07A6  2FA8               	goto	u2171
  2861  07A7  2FA9               	goto	u2170
  2862  07A8                     u2171:
  2863  07A8  2FDA               	goto	l2293
  2864  07A9                     u2170:
  2865  07A9                     l2277:
  2866  07A9  1283               	bcf	3,5	;RP0=0, select bank0
  2867  07AA  1303               	bcf	3,6	;RP1=0, select bank0
  2868  07AB  01A0               	clrf	___lwmod@counter
  2869  07AC  0AA0               	incf	___lwmod@counter,f
  2870  07AD  2FB9               	goto	l2283
  2871  07AE                     l2279:
  2872  07AE  3001               	movlw	1
  2873  07AF                     u2185:
  2874  07AF  1003               	clrc
  2875  07B0  0DF3               	rlf	___lwmod@divisor,f
  2876  07B1  0DF4               	rlf	___lwmod@divisor+1,f
  2877  07B2  3EFF               	addlw	-1
  2878  07B3  1D03               	skipz
  2879  07B4  2FAF               	goto	u2185
  2880  07B5                     l2281:
  2881  07B5  3001               	movlw	1
  2882  07B6  00F7               	movwf	??___lwmod
  2883  07B7  0877               	movf	??___lwmod,w
  2884  07B8  07A0               	addwf	___lwmod@counter,f
  2885  07B9                     l2283:
  2886  07B9  1FF4               	btfss	___lwmod@divisor+1,7
  2887  07BA  2FBC               	goto	u2191
  2888  07BB  2FBD               	goto	u2190
  2889  07BC                     u2191:
  2890  07BC  2FAE               	goto	l2279
  2891  07BD                     u2190:
  2892  07BD                     l2285:
  2893  07BD  0874               	movf	___lwmod@divisor+1,w
  2894  07BE  0276               	subwf	___lwmod@dividend+1,w
  2895  07BF  1D03               	skipz
  2896  07C0  2FC3               	goto	u2205
  2897  07C1  0873               	movf	___lwmod@divisor,w
  2898  07C2  0275               	subwf	___lwmod@dividend,w
  2899  07C3                     u2205:
  2900  07C3  1C03               	skipc
  2901  07C4  2FC6               	goto	u2201
  2902  07C5  2FC7               	goto	u2200
  2903  07C6                     u2201:
  2904  07C6  2FCD               	goto	l2289
  2905  07C7                     u2200:
  2906  07C7                     l2287:
  2907  07C7  0873               	movf	___lwmod@divisor,w
  2908  07C8  02F5               	subwf	___lwmod@dividend,f
  2909  07C9  0874               	movf	___lwmod@divisor+1,w
  2910  07CA  1C03               	skipc
  2911  07CB  03F6               	decf	___lwmod@dividend+1,f
  2912  07CC  02F6               	subwf	___lwmod@dividend+1,f
  2913  07CD                     l2289:
  2914  07CD  3001               	movlw	1
  2915  07CE                     u2215:
  2916  07CE  1003               	clrc
  2917  07CF  0CF4               	rrf	___lwmod@divisor+1,f
  2918  07D0  0CF3               	rrf	___lwmod@divisor,f
  2919  07D1  3EFF               	addlw	-1
  2920  07D2  1D03               	skipz
  2921  07D3  2FCE               	goto	u2215
  2922  07D4                     l2291:
  2923  07D4  3001               	movlw	1
  2924  07D5  02A0               	subwf	___lwmod@counter,f
  2925  07D6  1D03               	btfss	3,2
  2926  07D7  2FD9               	goto	u2221
  2927  07D8  2FDA               	goto	u2220
  2928  07D9                     u2221:
  2929  07D9  2FBD               	goto	l2285
  2930  07DA                     u2220:
  2931  07DA                     l2293:
  2932  07DA  0876               	movf	___lwmod@dividend+1,w
  2933  07DB  00F4               	movwf	?___lwmod+1
  2934  07DC  0875               	movf	___lwmod@dividend,w
  2935  07DD  00F3               	movwf	?___lwmod
  2936  07DE                     l675:
  2937  07DE  0008               	return
  2938  07DF                     __end_of___lwmod:
  2939                           
  2940                           	psect	text5
  2941  0717                     __ptext5:	
  2942 ;; *************** function ___lwdiv *****************
  2943 ;; Defined at:
  2944 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  2945 ;; Parameters:    Size  Location     Type
  2946 ;;  divisor         2    3[COMMON] unsigned int 
  2947 ;;  dividend        2    5[COMMON] unsigned int 
  2948 ;; Auto vars:     Size  Location     Type
  2949 ;;  quotient        2    1[BANK0 ] unsigned int 
  2950 ;;  counter         1    0[BANK0 ] unsigned char 
  2951 ;; Return value:  Size  Location     Type
  2952 ;;                  2    3[COMMON] unsigned int 
  2953 ;; Registers used:
  2954 ;;		wreg, status,2, status,0
  2955 ;; Tracked objects:
  2956 ;;		On entry : 0/0
  2957 ;;		On exit  : 0/0
  2958 ;;		Unchanged: 0/0
  2959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2960 ;;      Params:         4       0       0       0       0
  2961 ;;      Locals:         0       3       0       0       0
  2962 ;;      Temps:          1       0       0       0       0
  2963 ;;      Totals:         5       3       0       0       0
  2964 ;;Total ram usage:        8 bytes
  2965 ;; Hardware stack levels used:    1
  2966 ;; Hardware stack levels required when called:    1
  2967 ;; This function calls:
  2968 ;;		Nothing
  2969 ;; This function is called by:
  2970 ;;		_utoa
  2971 ;; This function uses a non-reentrant model
  2972 ;;
  2973                           
  2974                           
  2975                           ;psect for function ___lwdiv
  2976  0717                     ___lwdiv:
  2977  0717                     l2249:	
  2978                           ;incstack = 0
  2979                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2980                           
  2981  0717  1283               	bcf	3,5	;RP0=0, select bank0
  2982  0718  1303               	bcf	3,6	;RP1=0, select bank0
  2983  0719  01A1               	clrf	___lwdiv@quotient
  2984  071A  01A2               	clrf	___lwdiv@quotient+1
  2985  071B                     l2251:
  2986  071B  0873               	movf	___lwdiv@divisor,w
  2987  071C  0474               	iorwf	___lwdiv@divisor+1,w
  2988  071D  1903               	btfsc	3,2
  2989  071E  2F20               	goto	u2101
  2990  071F  2F21               	goto	u2100
  2991  0720                     u2101:
  2992  0720  2F58               	goto	l2271
  2993  0721                     u2100:
  2994  0721                     l2253:
  2995  0721  01A0               	clrf	___lwdiv@counter
  2996  0722  0AA0               	incf	___lwdiv@counter,f
  2997  0723  2F2F               	goto	l2259
  2998  0724                     l2255:
  2999  0724  3001               	movlw	1
  3000  0725                     u2115:
  3001  0725  1003               	clrc
  3002  0726  0DF3               	rlf	___lwdiv@divisor,f
  3003  0727  0DF4               	rlf	___lwdiv@divisor+1,f
  3004  0728  3EFF               	addlw	-1
  3005  0729  1D03               	skipz
  3006  072A  2F25               	goto	u2115
  3007  072B                     l2257:
  3008  072B  3001               	movlw	1
  3009  072C  00F7               	movwf	??___lwdiv
  3010  072D  0877               	movf	??___lwdiv,w
  3011  072E  07A0               	addwf	___lwdiv@counter,f
  3012  072F                     l2259:
  3013  072F  1FF4               	btfss	___lwdiv@divisor+1,7
  3014  0730  2F32               	goto	u2121
  3015  0731  2F33               	goto	u2120
  3016  0732                     u2121:
  3017  0732  2F24               	goto	l2255
  3018  0733                     u2120:
  3019  0733                     l2261:
  3020  0733  3001               	movlw	1
  3021  0734                     u2135:
  3022  0734  1003               	clrc
  3023  0735  0DA1               	rlf	___lwdiv@quotient,f
  3024  0736  0DA2               	rlf	___lwdiv@quotient+1,f
  3025  0737  3EFF               	addlw	-1
  3026  0738  1D03               	skipz
  3027  0739  2F34               	goto	u2135
  3028  073A  0874               	movf	___lwdiv@divisor+1,w
  3029  073B  0276               	subwf	___lwdiv@dividend+1,w
  3030  073C  1D03               	skipz
  3031  073D  2F40               	goto	u2145
  3032  073E  0873               	movf	___lwdiv@divisor,w
  3033  073F  0275               	subwf	___lwdiv@dividend,w
  3034  0740                     u2145:
  3035  0740  1C03               	skipc
  3036  0741  2F43               	goto	u2141
  3037  0742  2F44               	goto	u2140
  3038  0743                     u2141:
  3039  0743  2F4B               	goto	l2267
  3040  0744                     u2140:
  3041  0744                     l2263:
  3042  0744  0873               	movf	___lwdiv@divisor,w
  3043  0745  02F5               	subwf	___lwdiv@dividend,f
  3044  0746  0874               	movf	___lwdiv@divisor+1,w
  3045  0747  1C03               	skipc
  3046  0748  03F6               	decf	___lwdiv@dividend+1,f
  3047  0749  02F6               	subwf	___lwdiv@dividend+1,f
  3048  074A                     l2265:
  3049  074A  1421               	bsf	___lwdiv@quotient,0
  3050  074B                     l2267:
  3051  074B  3001               	movlw	1
  3052  074C                     u2155:
  3053  074C  1003               	clrc
  3054  074D  0CF4               	rrf	___lwdiv@divisor+1,f
  3055  074E  0CF3               	rrf	___lwdiv@divisor,f
  3056  074F  3EFF               	addlw	-1
  3057  0750  1D03               	skipz
  3058  0751  2F4C               	goto	u2155
  3059  0752                     l2269:
  3060  0752  3001               	movlw	1
  3061  0753  02A0               	subwf	___lwdiv@counter,f
  3062  0754  1D03               	btfss	3,2
  3063  0755  2F57               	goto	u2161
  3064  0756  2F58               	goto	u2160
  3065  0757                     u2161:
  3066  0757  2F33               	goto	l2261
  3067  0758                     u2160:
  3068  0758                     l2271:
  3069  0758  0822               	movf	___lwdiv@quotient+1,w
  3070  0759  00F4               	movwf	?___lwdiv+1
  3071  075A  0821               	movf	___lwdiv@quotient,w
  3072  075B  00F3               	movwf	?___lwdiv
  3073  075C                     l665:
  3074  075C  0008               	return
  3075  075D                     __end_of___lwdiv:
  3076                           
  3077                           	psect	text6
  3078  057F                     __ptext6:	
  3079 ;; *************** function _UARTInit *****************
  3080 ;; Defined at:
  3081 ;;		line 8 in file "USART.c"
  3082 ;; Parameters:    Size  Location     Type
  3083 ;;  baud_rate       4   13[BANK0 ] const unsigned long 
  3084 ;;  BRGH            1   17[BANK0 ] const unsigned char 
  3085 ;; Auto vars:     Size  Location     Type
  3086 ;;		None
  3087 ;; Return value:  Size  Location     Type
  3088 ;;                  1    wreg      void 
  3089 ;; Registers used:
  3090 ;;		wreg, status,2, status,0, pclath, cstack
  3091 ;; Tracked objects:
  3092 ;;		On entry : 0/0
  3093 ;;		On exit  : 0/0
  3094 ;;		Unchanged: 0/0
  3095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3096 ;;      Params:         0       5       0       0       0
  3097 ;;      Locals:         0       0       0       0       0
  3098 ;;      Temps:          4       0       0       0       0
  3099 ;;      Totals:         4       5       0       0       0
  3100 ;;Total ram usage:        9 bytes
  3101 ;; Hardware stack levels used:    1
  3102 ;; Hardware stack levels required when called:    2
  3103 ;; This function calls:
  3104 ;;		___lldiv
  3105 ;; This function is called by:
  3106 ;;		_main
  3107 ;; This function uses a non-reentrant model
  3108 ;;
  3109                           
  3110                           
  3111                           ;psect for function _UARTInit
  3112  057F                     _UARTInit:
  3113  057F                     l2385:	
  3114                           ;incstack = 0
  3115                           ; Regs used in _UARTInit: [wreg+status,2+status,0+pclath+cstack]
  3116                           
  3117                           
  3118                           ;USART.c: 10:     if (BRGH == 0) {
  3119  057F  1283               	bcf	3,5	;RP0=0, select bank0
  3120  0580  1303               	bcf	3,6	;RP1=0, select bank0
  3121  0581  0831               	movf	UARTInit@BRGH,w
  3122  0582  1D03               	btfss	3,2
  3123  0583  2D85               	goto	u2351
  3124  0584  2D86               	goto	u2350
  3125  0585                     u2351:
  3126  0585  2DB5               	goto	l2391
  3127  0586                     u2350:
  3128  0586                     l2387:
  3129                           
  3130                           ;USART.c: 11:         SPBRG = 4000000/(64*baud_rate) - 1;
  3131  0586  082D               	movf	UARTInit@baud_rate,w
  3132  0587  00F4               	movwf	??_UARTInit
  3133  0588  082E               	movf	UARTInit@baud_rate+1,w
  3134  0589  00F5               	movwf	??_UARTInit+1
  3135  058A  082F               	movf	UARTInit@baud_rate+2,w
  3136  058B  00F6               	movwf	??_UARTInit+2
  3137  058C  0830               	movf	UARTInit@baud_rate+3,w
  3138  058D  00F7               	movwf	??_UARTInit+3
  3139  058E  3006               	movlw	6
  3140  058F                     u2365:
  3141  058F  1003               	clrc
  3142  0590  0DF4               	rlf	??_UARTInit,f
  3143  0591  0DF5               	rlf	??_UARTInit+1,f
  3144  0592  0DF6               	rlf	??_UARTInit+2,f
  3145  0593  0DF7               	rlf	??_UARTInit+3,f
  3146  0594                     u2360:
  3147  0594  3EFF               	addlw	-1
  3148  0595  1D03               	skipz
  3149  0596  2D8F               	goto	u2365
  3150  0597  0877               	movf	??_UARTInit+3,w
  3151  0598  00A3               	movwf	___lldiv@divisor+3
  3152  0599  0876               	movf	??_UARTInit+2,w
  3153  059A  00A2               	movwf	___lldiv@divisor+2
  3154  059B  0875               	movf	??_UARTInit+1,w
  3155  059C  00A1               	movwf	___lldiv@divisor+1
  3156  059D  0874               	movf	??_UARTInit,w
  3157  059E  00A0               	movwf	___lldiv@divisor
  3158  059F  3000               	movlw	0
  3159  05A0  00A7               	movwf	___lldiv@dividend+3
  3160  05A1  303D               	movlw	61
  3161  05A2  00A6               	movwf	___lldiv@dividend+2
  3162  05A3  3009               	movlw	9
  3163  05A4  00A5               	movwf	___lldiv@dividend+1
  3164  05A5  3000               	movlw	0
  3165  05A6  00A4               	movwf	___lldiv@dividend
  3166  05A7  120A  118A  2664  120A  118A  	fcall	___lldiv
  3167  05AC  1283               	bcf	3,5	;RP0=0, select bank0
  3168  05AD  1303               	bcf	3,6	;RP1=0, select bank0
  3169  05AE  0820               	movf	?___lldiv,w
  3170  05AF  3EFF               	addlw	255
  3171  05B0  1683               	bsf	3,5	;RP0=1, select bank1
  3172  05B1  1303               	bcf	3,6	;RP1=0, select bank1
  3173  05B2  0099               	movwf	25	;volatile
  3174  05B3                     l2389:
  3175                           
  3176                           ;USART.c: 12:         TXSTAbits.BRGH = 0;
  3177  05B3  1118               	bcf	24,2	;volatile
  3178                           
  3179                           ;USART.c: 13:     } else {
  3180  05B4  2DE3               	goto	l2395
  3181  05B5                     l2391:
  3182                           
  3183                           ;USART.c: 14:         SPBRG = 4000000/(16*baud_rate) - 1;
  3184  05B5  082D               	movf	UARTInit@baud_rate,w
  3185  05B6  00F4               	movwf	??_UARTInit
  3186  05B7  082E               	movf	UARTInit@baud_rate+1,w
  3187  05B8  00F5               	movwf	??_UARTInit+1
  3188  05B9  082F               	movf	UARTInit@baud_rate+2,w
  3189  05BA  00F6               	movwf	??_UARTInit+2
  3190  05BB  0830               	movf	UARTInit@baud_rate+3,w
  3191  05BC  00F7               	movwf	??_UARTInit+3
  3192  05BD  3004               	movlw	4
  3193  05BE                     u2375:
  3194  05BE  1003               	clrc
  3195  05BF  0DF4               	rlf	??_UARTInit,f
  3196  05C0  0DF5               	rlf	??_UARTInit+1,f
  3197  05C1  0DF6               	rlf	??_UARTInit+2,f
  3198  05C2  0DF7               	rlf	??_UARTInit+3,f
  3199  05C3                     u2370:
  3200  05C3  3EFF               	addlw	-1
  3201  05C4  1D03               	skipz
  3202  05C5  2DBE               	goto	u2375
  3203  05C6  0877               	movf	??_UARTInit+3,w
  3204  05C7  00A3               	movwf	___lldiv@divisor+3
  3205  05C8  0876               	movf	??_UARTInit+2,w
  3206  05C9  00A2               	movwf	___lldiv@divisor+2
  3207  05CA  0875               	movf	??_UARTInit+1,w
  3208  05CB  00A1               	movwf	___lldiv@divisor+1
  3209  05CC  0874               	movf	??_UARTInit,w
  3210  05CD  00A0               	movwf	___lldiv@divisor
  3211  05CE  3000               	movlw	0
  3212  05CF  00A7               	movwf	___lldiv@dividend+3
  3213  05D0  303D               	movlw	61
  3214  05D1  00A6               	movwf	___lldiv@dividend+2
  3215  05D2  3009               	movlw	9
  3216  05D3  00A5               	movwf	___lldiv@dividend+1
  3217  05D4  3000               	movlw	0
  3218  05D5  00A4               	movwf	___lldiv@dividend
  3219  05D6  120A  118A  2664  120A  118A  	fcall	___lldiv
  3220  05DB  1283               	bcf	3,5	;RP0=0, select bank0
  3221  05DC  1303               	bcf	3,6	;RP1=0, select bank0
  3222  05DD  0820               	movf	?___lldiv,w
  3223  05DE  3EFF               	addlw	255
  3224  05DF  1683               	bsf	3,5	;RP0=1, select bank1
  3225  05E0  1303               	bcf	3,6	;RP1=0, select bank1
  3226  05E1  0099               	movwf	25	;volatile
  3227  05E2                     l2393:
  3228                           
  3229                           ;USART.c: 15:         TXSTAbits.BRGH = 1;
  3230  05E2  1518               	bsf	24,2	;volatile
  3231  05E3                     l2395:
  3232                           
  3233                           ;USART.c: 19:     TXSTAbits.TX9 = 0;
  3234  05E3  1318               	bcf	24,6	;volatile
  3235  05E4                     l2397:
  3236                           
  3237                           ;USART.c: 20:     TXSTAbits.TXEN = 1;
  3238  05E4  1698               	bsf	24,5	;volatile
  3239  05E5                     l2399:
  3240                           
  3241                           ;USART.c: 21:     TXSTAbits.SYNC = 0;
  3242  05E5  1218               	bcf	24,4	;volatile
  3243  05E6                     l2401:
  3244                           
  3245                           ;USART.c: 24:     RCSTAbits.SPEN = 1;
  3246  05E6  1283               	bcf	3,5	;RP0=0, select bank0
  3247  05E7  1303               	bcf	3,6	;RP1=0, select bank0
  3248  05E8  1798               	bsf	24,7	;volatile
  3249  05E9                     l2403:
  3250                           
  3251                           ;USART.c: 25:     RCSTAbits.RX9 = 0;
  3252  05E9  1318               	bcf	24,6	;volatile
  3253  05EA                     l2405:
  3254                           
  3255                           ;USART.c: 26:     RCSTAbits.CREN = 1;
  3256  05EA  1618               	bsf	24,4	;volatile
  3257  05EB                     l2407:
  3258                           
  3259                           ;USART.c: 27:     RCSTAbits.FERR = 0;
  3260  05EB  1118               	bcf	24,2	;volatile
  3261  05EC                     l2409:
  3262                           
  3263                           ;USART.c: 28:     RCSTAbits.OERR = 0;
  3264  05EC  1098               	bcf	24,1	;volatile
  3265  05ED                     l2411:
  3266                           
  3267                           ;USART.c: 31:     TRISCbits.TRISC7 = 1;
  3268  05ED  1683               	bsf	3,5	;RP0=1, select bank1
  3269  05EE  1303               	bcf	3,6	;RP1=0, select bank1
  3270  05EF  1787               	bsf	7,7	;volatile
  3271  05F0                     l2413:
  3272                           
  3273                           ;USART.c: 32:     TRISCbits.TRISC6 = 0;
  3274  05F0  1307               	bcf	7,6	;volatile
  3275  05F1                     l275:
  3276  05F1  0008               	return
  3277  05F2                     __end_of_UARTInit:
  3278                           
  3279                           	psect	text7
  3280  075D                     __ptext7:	
  3281 ;; *************** function _LcdWriteString *****************
  3282 ;; Defined at:
  3283 ;;		line 64 in file "LCD.c"
  3284 ;; Parameters:    Size  Location     Type
  3285 ;;  value           2    0[BANK0 ] PTR const unsigned char 
  3286 ;;		 -> STR_13(21), STR_12(3), STR_11(17), STR_10(24), 
  3287 ;;		 -> STR_9(3), STR_8(17), STR_7(16), STR_6(16), 
  3288 ;;		 -> STR_5(17), STR_4(5), numero(10), STR_3(6), 
  3289 ;;		 -> STR_2(6), STR_1(17), 
  3290 ;; Auto vars:     Size  Location     Type
  3291 ;;  i               2    5[BANK0 ] int 
  3292 ;; Return value:  Size  Location     Type
  3293 ;;                  1    wreg      void 
  3294 ;; Registers used:
  3295 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3296 ;; Tracked objects:
  3297 ;;		On entry : 0/0
  3298 ;;		On exit  : 0/0
  3299 ;;		Unchanged: 0/0
  3300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3301 ;;      Params:         0       2       0       0       0
  3302 ;;      Locals:         0       2       0       0       0
  3303 ;;      Temps:          0       3       0       0       0
  3304 ;;      Totals:         0       7       0       0       0
  3305 ;;Total ram usage:        7 bytes
  3306 ;; Hardware stack levels used:    1
  3307 ;; Hardware stack levels required when called:    3
  3308 ;; This function calls:
  3309 ;;		_LcdWriteChar
  3310 ;; This function is called by:
  3311 ;;		_main
  3312 ;; This function uses a non-reentrant model
  3313 ;;
  3314                           
  3315                           
  3316                           ;psect for function _LcdWriteString
  3317  075D                     _LcdWriteString:
  3318  075D                     l2507:	
  3319                           ;incstack = 0
  3320                           ; Regs used in _LcdWriteString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3321                           
  3322                           
  3323                           ;LCD.c: 66:     for (int i = 0; value[i] != '\0'; i++)
  3324  075D  1283               	bcf	3,5	;RP0=0, select bank0
  3325  075E  1303               	bcf	3,6	;RP1=0, select bank0
  3326  075F  01A5               	clrf	LcdWriteString@i
  3327  0760  01A6               	clrf	LcdWriteString@i+1
  3328  0761  2F86               	goto	l2513
  3329  0762                     l2509:
  3330                           
  3331                           ;LCD.c: 67:         LcdWriteChar(value[i]);
  3332  0762  0825               	movf	LcdWriteString@i,w
  3333  0763  0720               	addwf	LcdWriteString@value,w
  3334  0764  00A3               	movwf	??_LcdWriteString+1
  3335  0765  0821               	movf	LcdWriteString@value+1,w
  3336  0766  00A2               	movwf	??_LcdWriteString
  3337  0767  1803               	skipnc
  3338  0768  0AA2               	incf	??_LcdWriteString,f
  3339  0769  1FA5               	btfss	LcdWriteString@i,7
  3340  076A  2F6C               	goto	u2410
  3341  076B  03A2               	decf	??_LcdWriteString,f
  3342  076C                     u2410:
  3343  076C  1283               	bcf	3,5	;RP0=0, select bank0
  3344  076D  1303               	bcf	3,6	;RP1=0, select bank0
  3345  076E  0822               	movf	??_LcdWriteString,w
  3346  076F  00A4               	movwf	??_LcdWriteString+2
  3347  0770  0824               	movf	??_LcdWriteString+2,w
  3348  0771  00FF               	movwf	btemp+1
  3349  0772  0823               	movf	??_LcdWriteString+1,w
  3350  0773  0084               	movwf	4
  3351  0774  120A  118A  2443  120A  118A  	fcall	stringtab
  3352  0779  120A  158A  2736  120A  118A  	fcall	_LcdWriteChar
  3353  077E                     l2511:
  3354  077E  3001               	movlw	1
  3355  077F  1283               	bcf	3,5	;RP0=0, select bank0
  3356  0780  1303               	bcf	3,6	;RP1=0, select bank0
  3357  0781  07A5               	addwf	LcdWriteString@i,f
  3358  0782  1803               	skipnc
  3359  0783  0AA6               	incf	LcdWriteString@i+1,f
  3360  0784  3000               	movlw	0
  3361  0785  07A6               	addwf	LcdWriteString@i+1,f
  3362  0786                     l2513:
  3363  0786  0825               	movf	LcdWriteString@i,w
  3364  0787  0720               	addwf	LcdWriteString@value,w
  3365  0788  00A3               	movwf	??_LcdWriteString+1
  3366  0789  0821               	movf	LcdWriteString@value+1,w
  3367  078A  00A2               	movwf	??_LcdWriteString
  3368  078B  1803               	skipnc
  3369  078C  0AA2               	incf	??_LcdWriteString,f
  3370  078D  1FA5               	btfss	LcdWriteString@i,7
  3371  078E  2F90               	goto	u2420
  3372  078F  03A2               	decf	??_LcdWriteString,f
  3373  0790                     u2420:
  3374  0790  1283               	bcf	3,5	;RP0=0, select bank0
  3375  0791  1303               	bcf	3,6	;RP1=0, select bank0
  3376  0792  0822               	movf	??_LcdWriteString,w
  3377  0793  00A4               	movwf	??_LcdWriteString+2
  3378  0794  0824               	movf	??_LcdWriteString+2,w
  3379  0795  00FF               	movwf	btemp+1
  3380  0796  0823               	movf	??_LcdWriteString+1,w
  3381  0797  0084               	movwf	4
  3382  0798  120A  118A  2443  120A  118A  	fcall	stringtab
  3383  079D  3A00               	xorlw	0
  3384  079E  1D03               	skipz
  3385  079F  2FA1               	goto	u2431
  3386  07A0  2FA2               	goto	u2430
  3387  07A1                     u2431:
  3388  07A1  2F62               	goto	l2509
  3389  07A2                     u2430:
  3390  07A2                     l250:
  3391  07A2  0008               	return
  3392  07A3                     __end_of_LcdWriteString:
  3393                           
  3394                           	psect	text8
  3395  0F36                     __ptext8:	
  3396 ;; *************** function _LcdWriteChar *****************
  3397 ;; Defined at:
  3398 ;;		line 56 in file "LCD.c"
  3399 ;; Parameters:    Size  Location     Type
  3400 ;;  value           1    wreg     unsigned char 
  3401 ;; Auto vars:     Size  Location     Type
  3402 ;;  value           1    6[COMMON] unsigned char 
  3403 ;; Return value:  Size  Location     Type
  3404 ;;                  1    wreg      void 
  3405 ;; Registers used:
  3406 ;;		wreg, status,2, status,0, pclath, cstack
  3407 ;; Tracked objects:
  3408 ;;		On entry : 0/0
  3409 ;;		On exit  : 0/0
  3410 ;;		Unchanged: 0/0
  3411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3412 ;;      Params:         0       0       0       0       0
  3413 ;;      Locals:         1       0       0       0       0
  3414 ;;      Temps:          1       0       0       0       0
  3415 ;;      Totals:         2       0       0       0       0
  3416 ;;Total ram usage:        2 bytes
  3417 ;; Hardware stack levels used:    1
  3418 ;; Hardware stack levels required when called:    2
  3419 ;; This function calls:
  3420 ;;		_LcdPort
  3421 ;; This function is called by:
  3422 ;;		_main
  3423 ;;		_LcdWriteString
  3424 ;; This function uses a non-reentrant model
  3425 ;;
  3426                           
  3427                           
  3428                           ;psect for function _LcdWriteChar
  3429  0F36                     _LcdWriteChar:
  3430                           
  3431                           ;incstack = 0
  3432                           ; Regs used in _LcdWriteChar: [wreg+status,2+status,0+pclath+cstack]
  3433                           ;LcdWriteChar@value stored from wreg
  3434  0F36  00F6               	movwf	LcdWriteChar@value
  3435  0F37                     l2297:
  3436                           
  3437                           ;LCD.c: 57:     RE2 = 1;
  3438  0F37  1283               	bcf	3,5	;RP0=0, select bank0
  3439  0F38  1303               	bcf	3,6	;RP1=0, select bank0
  3440  0F39  1509               	bsf	9,2	;volatile
  3441  0F3A                     l2299:
  3442                           
  3443                           ;LCD.c: 58:     LcdPort(value);
  3444  0F3A  0876               	movf	LcdWriteChar@value,w
  3445  0F3B  120A  118A  24F5  120A  158A  	fcall	_LcdPort
  3446  0F40                     l2301:
  3447                           
  3448                           ;LCD.c: 59:     RE0 = 1;
  3449  0F40  1283               	bcf	3,5	;RP0=0, select bank0
  3450  0F41  1303               	bcf	3,6	;RP1=0, select bank0
  3451  0F42  1409               	bsf	9,0	;volatile
  3452  0F43                     l2303:
  3453                           
  3454                           ;LCD.c: 60:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  3455  0F43  300D               	movlw	13
  3456  0F44  00F5               	movwf	??_LcdWriteChar
  3457  0F45                     u2867:
  3458  0F45  0BF5               	decfsz	??_LcdWriteChar,f
  3459  0F46  2F45               	goto	u2867
  3460  0F47                     l2305:
  3461                           
  3462                           ;LCD.c: 61:     RE0 = 0;
  3463  0F47  1283               	bcf	3,5	;RP0=0, select bank0
  3464  0F48  1303               	bcf	3,6	;RP1=0, select bank0
  3465  0F49  1009               	bcf	9,0	;volatile
  3466  0F4A                     l244:
  3467  0F4A  0008               	return
  3468  0F4B                     __end_of_LcdWriteChar:
  3469                           
  3470                           	psect	text9
  3471  0F4B                     __ptext9:	
  3472 ;; *************** function _LcdSetCursor *****************
  3473 ;; Defined at:
  3474 ;;		line 29 in file "LCD.c"
  3475 ;; Parameters:    Size  Location     Type
  3476 ;;  row             1    wreg     unsigned char 
  3477 ;;  column          1    0[BANK0 ] unsigned char 
  3478 ;; Auto vars:     Size  Location     Type
  3479 ;;  row             1    3[BANK0 ] unsigned char 
  3480 ;; Return value:  Size  Location     Type
  3481 ;;                  1    wreg      void 
  3482 ;; Registers used:
  3483 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3484 ;; Tracked objects:
  3485 ;;		On entry : 0/0
  3486 ;;		On exit  : 0/0
  3487 ;;		Unchanged: 0/0
  3488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3489 ;;      Params:         0       1       0       0       0
  3490 ;;      Locals:         0       1       0       0       0
  3491 ;;      Temps:          0       2       0       0       0
  3492 ;;      Totals:         0       4       0       0       0
  3493 ;;Total ram usage:        4 bytes
  3494 ;; Hardware stack levels used:    1
  3495 ;; Hardware stack levels required when called:    3
  3496 ;; This function calls:
  3497 ;;		_LcdCmd
  3498 ;; This function is called by:
  3499 ;;		_main
  3500 ;; This function uses a non-reentrant model
  3501 ;;
  3502                           
  3503                           
  3504                           ;psect for function _LcdSetCursor
  3505  0F4B                     _LcdSetCursor:
  3506                           
  3507                           ;incstack = 0
  3508                           ; Regs used in _LcdSetCursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3509                           ;LcdSetCursor@row stored from wreg
  3510  0F4B  1283               	bcf	3,5	;RP0=0, select bank0
  3511  0F4C  1303               	bcf	3,6	;RP1=0, select bank0
  3512  0F4D  00A3               	movwf	LcdSetCursor@row
  3513  0F4E                     l2491:
  3514                           
  3515                           ;LCD.c: 30:     switch(row){
  3516  0F4E  2F5F               	goto	l2499
  3517  0F4F                     l2493:
  3518                           
  3519                           ;LCD.c: 32:             LcdCmd(0x80 + column - 1);
  3520  0F4F  0820               	movf	LcdSetCursor@column,w
  3521  0F50  3E7F               	addlw	127
  3522  0F51  120A  118A  27DF  120A  158A  	fcall	_LcdCmd
  3523                           
  3524                           ;LCD.c: 33:             break;
  3525  0F56  2F6F               	goto	l238
  3526  0F57                     l2495:
  3527                           
  3528                           ;LCD.c: 35:             LcdCmd(0xC0 + column - 1);
  3529  0F57  0820               	movf	LcdSetCursor@column,w
  3530  0F58  3EBF               	addlw	191
  3531  0F59  120A  118A  27DF  120A  158A  	fcall	_LcdCmd
  3532                           
  3533                           ;LCD.c: 36:             break;
  3534  0F5E  2F6F               	goto	l238
  3535  0F5F                     l2499:
  3536  0F5F  0823               	movf	LcdSetCursor@row,w
  3537  0F60  00A1               	movwf	??_LcdSetCursor
  3538  0F61  01A2               	clrf	??_LcdSetCursor+1
  3539                           
  3540                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3541                           ; Switch size 1, requested type "simple"
  3542                           ; Number of cases is 1, Range of values is 0 to 0
  3543                           ; switch strategies available:
  3544                           ; Name         Instructions Cycles
  3545                           ; simple_byte            4     3 (average)
  3546                           ; direct_byte           11     8 (fixed)
  3547                           ; jumptable            260     6 (fixed)
  3548                           ;	Chosen strategy is simple_byte
  3549  0F62  0822               	movf	??_LcdSetCursor+1,w
  3550  0F63  3A00               	xorlw	0	; case 0
  3551  0F64  1903               	skipnz
  3552  0F65  2F67               	goto	l2899
  3553  0F66  2F6F               	goto	l238
  3554  0F67                     l2899:
  3555                           
  3556                           ; Switch size 1, requested type "simple"
  3557                           ; Number of cases is 2, Range of values is 1 to 2
  3558                           ; switch strategies available:
  3559                           ; Name         Instructions Cycles
  3560                           ; simple_byte            7     4 (average)
  3561                           ; direct_byte           17    11 (fixed)
  3562                           ; jumptable            263     9 (fixed)
  3563                           ;	Chosen strategy is simple_byte
  3564  0F67  0821               	movf	??_LcdSetCursor,w
  3565  0F68  3A01               	xorlw	1	; case 1
  3566  0F69  1903               	skipnz
  3567  0F6A  2F4F               	goto	l2493
  3568  0F6B  3A03               	xorlw	3	; case 2
  3569  0F6C  1903               	skipnz
  3570  0F6D  2F57               	goto	l2495
  3571  0F6E  2F6F               	goto	l238
  3572  0F6F                     l238:
  3573  0F6F  0008               	return
  3574  0F70                     __end_of_LcdSetCursor:
  3575                           
  3576                           	psect	text10
  3577  06CC                     __ptext10:	
  3578 ;; *************** function _LcdInit *****************
  3579 ;; Defined at:
  3580 ;;		line 41 in file "LCD.c"
  3581 ;; Parameters:    Size  Location     Type
  3582 ;;		None
  3583 ;; Auto vars:     Size  Location     Type
  3584 ;;		None
  3585 ;; Return value:  Size  Location     Type
  3586 ;;                  1    wreg      void 
  3587 ;; Registers used:
  3588 ;;		wreg, status,2, status,0, pclath, cstack
  3589 ;; Tracked objects:
  3590 ;;		On entry : 0/0
  3591 ;;		On exit  : 0/0
  3592 ;;		Unchanged: 0/0
  3593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3594 ;;      Params:         0       0       0       0       0
  3595 ;;      Locals:         0       0       0       0       0
  3596 ;;      Temps:          0       2       0       0       0
  3597 ;;      Totals:         0       2       0       0       0
  3598 ;;Total ram usage:        2 bytes
  3599 ;; Hardware stack levels used:    1
  3600 ;; Hardware stack levels required when called:    3
  3601 ;; This function calls:
  3602 ;;		_LcdCmd
  3603 ;;		_LcdPort
  3604 ;; This function is called by:
  3605 ;;		_main
  3606 ;; This function uses a non-reentrant model
  3607 ;;
  3608                           
  3609                           
  3610                           ;psect for function _LcdInit
  3611  06CC                     _LcdInit:
  3612  06CC                     l2375:	
  3613                           ;incstack = 0
  3614                           ; Regs used in _LcdInit: [wreg+status,2+status,0+pclath+cstack]
  3615                           
  3616                           
  3617                           ;LCD.c: 42:     LcdPort(0x00);
  3618  06CC  3000               	movlw	0
  3619  06CD  120A  118A  24F5  120A  118A  	fcall	_LcdPort
  3620  06D2                     l2377:
  3621                           
  3622                           ;LCD.c: 43:     _delay((unsigned long)((20)*(4000000/4000.0)));
  3623  06D2  301A               	movlw	26
  3624  06D3  1283               	bcf	3,5	;RP0=0, select bank0
  3625  06D4  1303               	bcf	3,6	;RP1=0, select bank0
  3626  06D5  00A1               	movwf	??_LcdInit+1
  3627  06D6  30F7               	movlw	247
  3628  06D7  00A0               	movwf	??_LcdInit
  3629  06D8                     u2877:
  3630  06D8  0BA0               	decfsz	??_LcdInit,f
  3631  06D9  2ED8               	goto	u2877
  3632  06DA  0BA1               	decfsz	??_LcdInit+1,f
  3633  06DB  2ED8               	goto	u2877
  3634  06DC  2EDD               	nop2
  3635  06DD                     l2379:
  3636                           
  3637                           ;LCD.c: 44:     LcdCmd(0x30);
  3638  06DD  3030               	movlw	48
  3639  06DE  120A  118A  27DF  120A  118A  	fcall	_LcdCmd
  3640                           
  3641                           ;LCD.c: 45:     _delay((unsigned long)((5)*(4000000/4000.0)));
  3642  06E3  3007               	movlw	7
  3643  06E4  1283               	bcf	3,5	;RP0=0, select bank0
  3644  06E5  1303               	bcf	3,6	;RP1=0, select bank0
  3645  06E6  00A1               	movwf	??_LcdInit+1
  3646  06E7  307C               	movlw	124
  3647  06E8  00A0               	movwf	??_LcdInit
  3648  06E9                     u2887:
  3649  06E9  0BA0               	decfsz	??_LcdInit,f
  3650  06EA  2EE9               	goto	u2887
  3651  06EB  0BA1               	decfsz	??_LcdInit+1,f
  3652  06EC  2EE9               	goto	u2887
  3653  06ED  0000               	nop
  3654  06EE                     l2381:
  3655                           
  3656                           ;LCD.c: 46:     LcdCmd(0x30);
  3657  06EE  3030               	movlw	48
  3658  06EF  120A  118A  27DF  120A  118A  	fcall	_LcdCmd
  3659  06F4                     l2383:
  3660                           
  3661                           ;LCD.c: 47:     _delay((unsigned long)((11)*(4000000/4000.0)));
  3662  06F4  300F               	movlw	15
  3663  06F5  1283               	bcf	3,5	;RP0=0, select bank0
  3664  06F6  1303               	bcf	3,6	;RP1=0, select bank0
  3665  06F7  00A1               	movwf	??_LcdInit+1
  3666  06F8  3047               	movlw	71
  3667  06F9  00A0               	movwf	??_LcdInit
  3668  06FA                     u2897:
  3669  06FA  0BA0               	decfsz	??_LcdInit,f
  3670  06FB  2EFA               	goto	u2897
  3671  06FC  0BA1               	decfsz	??_LcdInit+1,f
  3672  06FD  2EFA               	goto	u2897
  3673                           
  3674                           ;LCD.c: 48:     LcdCmd(0x30);
  3675  06FE  3030               	movlw	48
  3676  06FF  120A  118A  27DF  120A  118A  	fcall	_LcdCmd
  3677                           
  3678                           ;LCD.c: 50:     LcdCmd(0x38);
  3679  0704  3038               	movlw	56
  3680  0705  120A  118A  27DF  120A  118A  	fcall	_LcdCmd
  3681                           
  3682                           ;LCD.c: 51:     LcdCmd(0x0C);
  3683  070A  300C               	movlw	12
  3684  070B  120A  118A  27DF  120A  118A  	fcall	_LcdCmd
  3685                           
  3686                           ;LCD.c: 52:     LcdCmd(0x6);
  3687  0710  3006               	movlw	6
  3688  0711  120A  118A  27DF  120A  118A  	fcall	_LcdCmd
  3689  0716                     l241:
  3690  0716  0008               	return
  3691  0717                     __end_of_LcdInit:
  3692                           
  3693                           	psect	text11
  3694  07DF                     __ptext11:	
  3695 ;; *************** function _LcdCmd *****************
  3696 ;; Defined at:
  3697 ;;		line 16 in file "LCD.c"
  3698 ;; Parameters:    Size  Location     Type
  3699 ;;  value           1    wreg     unsigned char 
  3700 ;; Auto vars:     Size  Location     Type
  3701 ;;  value           1    7[COMMON] unsigned char 
  3702 ;; Return value:  Size  Location     Type
  3703 ;;                  1    wreg      void 
  3704 ;; Registers used:
  3705 ;;		wreg, status,2, status,0, pclath, cstack
  3706 ;; Tracked objects:
  3707 ;;		On entry : 0/0
  3708 ;;		On exit  : 0/0
  3709 ;;		Unchanged: 0/0
  3710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3711 ;;      Params:         0       0       0       0       0
  3712 ;;      Locals:         1       0       0       0       0
  3713 ;;      Temps:          2       0       0       0       0
  3714 ;;      Totals:         3       0       0       0       0
  3715 ;;Total ram usage:        3 bytes
  3716 ;; Hardware stack levels used:    1
  3717 ;; Hardware stack levels required when called:    2
  3718 ;; This function calls:
  3719 ;;		_LcdPort
  3720 ;; This function is called by:
  3721 ;;		_LcdSetCursor
  3722 ;;		_LcdInit
  3723 ;;		_LcdClear
  3724 ;;		_LcdShiftRight
  3725 ;;		_LcdShiftLeft
  3726 ;; This function uses a non-reentrant model
  3727 ;;
  3728                           
  3729                           
  3730                           ;psect for function _LcdCmd
  3731  07DF                     _LcdCmd:
  3732                           
  3733                           ;incstack = 0
  3734                           ; Regs used in _LcdCmd: [wreg+status,2+status,0+pclath+cstack]
  3735                           ;LcdCmd@value stored from wreg
  3736  07DF  00F7               	movwf	LcdCmd@value
  3737  07E0                     l2311:
  3738                           
  3739                           ;LCD.c: 17:     RE2 = 0;
  3740  07E0  1283               	bcf	3,5	;RP0=0, select bank0
  3741  07E1  1303               	bcf	3,6	;RP1=0, select bank0
  3742  07E2  1109               	bcf	9,2	;volatile
  3743  07E3                     l2313:
  3744                           
  3745                           ;LCD.c: 18:     LcdPort(value);
  3746  07E3  0877               	movf	LcdCmd@value,w
  3747  07E4  120A  118A  24F5  120A  118A  	fcall	_LcdPort
  3748  07E9                     l2315:
  3749                           
  3750                           ;LCD.c: 19:     RE0 = 1;
  3751  07E9  1283               	bcf	3,5	;RP0=0, select bank0
  3752  07EA  1303               	bcf	3,6	;RP1=0, select bank0
  3753  07EB  1409               	bsf	9,0	;volatile
  3754  07EC                     l2317:
  3755                           
  3756                           ;LCD.c: 20:     _delay((unsigned long)((4)*(4000000/4000.0)));
  3757  07EC  3006               	movlw	6
  3758  07ED  00F6               	movwf	??_LcdCmd+1
  3759  07EE  3030               	movlw	48
  3760  07EF  00F5               	movwf	??_LcdCmd
  3761  07F0                     u2907:
  3762  07F0  0BF5               	decfsz	??_LcdCmd,f
  3763  07F1  2FF0               	goto	u2907
  3764  07F2  0BF6               	decfsz	??_LcdCmd+1,f
  3765  07F3  2FF0               	goto	u2907
  3766  07F4  0000               	nop
  3767  07F5                     l2319:
  3768                           
  3769                           ;LCD.c: 21:     RE0 = 0;
  3770  07F5  1283               	bcf	3,5	;RP0=0, select bank0
  3771  07F6  1303               	bcf	3,6	;RP1=0, select bank0
  3772  07F7  1009               	bcf	9,0	;volatile
  3773  07F8                     l228:
  3774  07F8  0008               	return
  3775  07F9                     __end_of_LcdCmd:
  3776                           
  3777                           	psect	text12
  3778  04F5                     __ptext12:	
  3779 ;; *************** function _LcdPort *****************
  3780 ;; Defined at:
  3781 ;;		line 3 in file "LCD.c"
  3782 ;; Parameters:    Size  Location     Type
  3783 ;;  value           1    wreg     unsigned char 
  3784 ;; Auto vars:     Size  Location     Type
  3785 ;;  value           1    4[COMMON] unsigned char 
  3786 ;; Return value:  Size  Location     Type
  3787 ;;                  1    wreg      void 
  3788 ;; Registers used:
  3789 ;;		wreg, status,2, status,0
  3790 ;; Tracked objects:
  3791 ;;		On entry : 0/0
  3792 ;;		On exit  : 0/0
  3793 ;;		Unchanged: 0/0
  3794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3795 ;;      Params:         0       0       0       0       0
  3796 ;;      Locals:         1       0       0       0       0
  3797 ;;      Temps:          1       0       0       0       0
  3798 ;;      Totals:         2       0       0       0       0
  3799 ;;Total ram usage:        2 bytes
  3800 ;; Hardware stack levels used:    1
  3801 ;; Hardware stack levels required when called:    1
  3802 ;; This function calls:
  3803 ;;		Nothing
  3804 ;; This function is called by:
  3805 ;;		_LcdCmd
  3806 ;;		_LcdInit
  3807 ;;		_LcdWriteChar
  3808 ;; This function uses a non-reentrant model
  3809 ;;
  3810                           
  3811                           
  3812                           ;psect for function _LcdPort
  3813  04F5                     _LcdPort:
  3814                           
  3815                           ;incstack = 0
  3816                           ; Regs used in _LcdPort: [wreg+status,2+status,0]
  3817                           ;LcdPort@value stored from wreg
  3818  04F5  00F4               	movwf	LcdPort@value
  3819  04F6                     l2245:
  3820                           
  3821                           ;LCD.c: 6:     RD0 = value &1;
  3822  04F6  1874               	btfsc	LcdPort@value,0
  3823  04F7  2CF9               	goto	u1871
  3824  04F8  2CFD               	goto	u1870
  3825  04F9                     u1871:
  3826  04F9  1283               	bcf	3,5	;RP0=0, select bank0
  3827  04FA  1303               	bcf	3,6	;RP1=0, select bank0
  3828  04FB  1408               	bsf	8,0	;volatile
  3829  04FC  2D00               	goto	u1884
  3830  04FD                     u1870:
  3831  04FD  1283               	bcf	3,5	;RP0=0, select bank0
  3832  04FE  1303               	bcf	3,6	;RP1=0, select bank0
  3833  04FF  1008               	bcf	8,0	;volatile
  3834  0500                     u1884:
  3835  0500                     l2247:
  3836                           
  3837                           ;LCD.c: 7:     RD1 = (value & 2) >> 1;
  3838  0500  0874               	movf	LcdPort@value,w
  3839  0501  00F3               	movwf	??_LcdPort
  3840  0502  3001               	movlw	1
  3841  0503                     u1895:
  3842  0503  1003               	clrc
  3843  0504  0CF3               	rrf	??_LcdPort,f
  3844  0505  3EFF               	addlw	-1
  3845  0506  1D03               	skipz
  3846  0507  2D03               	goto	u1895
  3847  0508  1873               	btfsc	??_LcdPort,0
  3848  0509  2D0B               	goto	u1901
  3849  050A  2D0F               	goto	u1900
  3850  050B                     u1901:
  3851  050B  1283               	bcf	3,5	;RP0=0, select bank0
  3852  050C  1303               	bcf	3,6	;RP1=0, select bank0
  3853  050D  1488               	bsf	8,1	;volatile
  3854  050E  2D12               	goto	u1914
  3855  050F                     u1900:
  3856  050F  1283               	bcf	3,5	;RP0=0, select bank0
  3857  0510  1303               	bcf	3,6	;RP1=0, select bank0
  3858  0511  1088               	bcf	8,1	;volatile
  3859  0512                     u1914:
  3860                           
  3861                           ;LCD.c: 8:     RD2 = (value & 4) >> 2;
  3862  0512  0874               	movf	LcdPort@value,w
  3863  0513  00F3               	movwf	??_LcdPort
  3864  0514  3002               	movlw	2
  3865  0515                     u1925:
  3866  0515  1003               	clrc
  3867  0516  0CF3               	rrf	??_LcdPort,f
  3868  0517  3EFF               	addlw	-1
  3869  0518  1D03               	skipz
  3870  0519  2D15               	goto	u1925
  3871  051A  1873               	btfsc	??_LcdPort,0
  3872  051B  2D1D               	goto	u1931
  3873  051C  2D21               	goto	u1930
  3874  051D                     u1931:
  3875  051D  1283               	bcf	3,5	;RP0=0, select bank0
  3876  051E  1303               	bcf	3,6	;RP1=0, select bank0
  3877  051F  1508               	bsf	8,2	;volatile
  3878  0520  2D24               	goto	u1944
  3879  0521                     u1930:
  3880  0521  1283               	bcf	3,5	;RP0=0, select bank0
  3881  0522  1303               	bcf	3,6	;RP1=0, select bank0
  3882  0523  1108               	bcf	8,2	;volatile
  3883  0524                     u1944:
  3884                           
  3885                           ;LCD.c: 9:     RD3 = (value &8) >> 3;
  3886  0524  0874               	movf	LcdPort@value,w
  3887  0525  00F3               	movwf	??_LcdPort
  3888  0526  3003               	movlw	3
  3889  0527                     u1955:
  3890  0527  1003               	clrc
  3891  0528  0CF3               	rrf	??_LcdPort,f
  3892  0529  3EFF               	addlw	-1
  3893  052A  1D03               	skipz
  3894  052B  2D27               	goto	u1955
  3895  052C  1873               	btfsc	??_LcdPort,0
  3896  052D  2D2F               	goto	u1961
  3897  052E  2D33               	goto	u1960
  3898  052F                     u1961:
  3899  052F  1283               	bcf	3,5	;RP0=0, select bank0
  3900  0530  1303               	bcf	3,6	;RP1=0, select bank0
  3901  0531  1588               	bsf	8,3	;volatile
  3902  0532  2D36               	goto	u1974
  3903  0533                     u1960:
  3904  0533  1283               	bcf	3,5	;RP0=0, select bank0
  3905  0534  1303               	bcf	3,6	;RP1=0, select bank0
  3906  0535  1188               	bcf	8,3	;volatile
  3907  0536                     u1974:
  3908                           
  3909                           ;LCD.c: 10:     RD4 = (value & 16)>>4;
  3910  0536  0874               	movf	LcdPort@value,w
  3911  0537  00F3               	movwf	??_LcdPort
  3912  0538  3004               	movlw	4
  3913  0539                     u1985:
  3914  0539  1003               	clrc
  3915  053A  0CF3               	rrf	??_LcdPort,f
  3916  053B  3EFF               	addlw	-1
  3917  053C  1D03               	skipz
  3918  053D  2D39               	goto	u1985
  3919  053E  1873               	btfsc	??_LcdPort,0
  3920  053F  2D41               	goto	u1991
  3921  0540  2D45               	goto	u1990
  3922  0541                     u1991:
  3923  0541  1283               	bcf	3,5	;RP0=0, select bank0
  3924  0542  1303               	bcf	3,6	;RP1=0, select bank0
  3925  0543  1608               	bsf	8,4	;volatile
  3926  0544  2D48               	goto	u2004
  3927  0545                     u1990:
  3928  0545  1283               	bcf	3,5	;RP0=0, select bank0
  3929  0546  1303               	bcf	3,6	;RP1=0, select bank0
  3930  0547  1208               	bcf	8,4	;volatile
  3931  0548                     u2004:
  3932                           
  3933                           ;LCD.c: 11:     RD5 = (value & 32) >> 5 ;
  3934  0548  0874               	movf	LcdPort@value,w
  3935  0549  00F3               	movwf	??_LcdPort
  3936  054A  3005               	movlw	5
  3937  054B                     u2015:
  3938  054B  1003               	clrc
  3939  054C  0CF3               	rrf	??_LcdPort,f
  3940  054D  3EFF               	addlw	-1
  3941  054E  1D03               	skipz
  3942  054F  2D4B               	goto	u2015
  3943  0550  1873               	btfsc	??_LcdPort,0
  3944  0551  2D53               	goto	u2021
  3945  0552  2D57               	goto	u2020
  3946  0553                     u2021:
  3947  0553  1283               	bcf	3,5	;RP0=0, select bank0
  3948  0554  1303               	bcf	3,6	;RP1=0, select bank0
  3949  0555  1688               	bsf	8,5	;volatile
  3950  0556  2D5A               	goto	u2034
  3951  0557                     u2020:
  3952  0557  1283               	bcf	3,5	;RP0=0, select bank0
  3953  0558  1303               	bcf	3,6	;RP1=0, select bank0
  3954  0559  1288               	bcf	8,5	;volatile
  3955  055A                     u2034:
  3956                           
  3957                           ;LCD.c: 12:     RD6 = (value & 64) >> 6;
  3958  055A  0874               	movf	LcdPort@value,w
  3959  055B  00F3               	movwf	??_LcdPort
  3960  055C  3006               	movlw	6
  3961  055D                     u2045:
  3962  055D  1003               	clrc
  3963  055E  0CF3               	rrf	??_LcdPort,f
  3964  055F  3EFF               	addlw	-1
  3965  0560  1D03               	skipz
  3966  0561  2D5D               	goto	u2045
  3967  0562  1873               	btfsc	??_LcdPort,0
  3968  0563  2D65               	goto	u2051
  3969  0564  2D69               	goto	u2050
  3970  0565                     u2051:
  3971  0565  1283               	bcf	3,5	;RP0=0, select bank0
  3972  0566  1303               	bcf	3,6	;RP1=0, select bank0
  3973  0567  1708               	bsf	8,6	;volatile
  3974  0568  2D6C               	goto	u2064
  3975  0569                     u2050:
  3976  0569  1283               	bcf	3,5	;RP0=0, select bank0
  3977  056A  1303               	bcf	3,6	;RP1=0, select bank0
  3978  056B  1308               	bcf	8,6	;volatile
  3979  056C                     u2064:
  3980                           
  3981                           ;LCD.c: 13:     RD7 = (value & 128) >> 7;
  3982  056C  0874               	movf	LcdPort@value,w
  3983  056D  00F3               	movwf	??_LcdPort
  3984  056E  3007               	movlw	7
  3985  056F                     u2075:
  3986  056F  1003               	clrc
  3987  0570  0CF3               	rrf	??_LcdPort,f
  3988  0571  3EFF               	addlw	-1
  3989  0572  1D03               	skipz
  3990  0573  2D6F               	goto	u2075
  3991  0574  1873               	btfsc	??_LcdPort,0
  3992  0575  2D77               	goto	u2081
  3993  0576  2D7B               	goto	u2080
  3994  0577                     u2081:
  3995  0577  1283               	bcf	3,5	;RP0=0, select bank0
  3996  0578  1303               	bcf	3,6	;RP1=0, select bank0
  3997  0579  1788               	bsf	8,7	;volatile
  3998  057A  2D7E               	goto	u2094
  3999  057B                     u2080:
  4000  057B  1283               	bcf	3,5	;RP0=0, select bank0
  4001  057C  1303               	bcf	3,6	;RP1=0, select bank0
  4002  057D  1388               	bcf	8,7	;volatile
  4003  057E                     u2094:
  4004  057E                     l225:
  4005  057E  0008               	return
  4006  057F                     __end_of_LcdPort:
  4007                           
  4008                           	psect	text13
  4009  0F0D                     __ptext13:	
  4010 ;; *************** function _I2C_Master_Write *****************
  4011 ;; Defined at:
  4012 ;;		line 67 in file "I2C.c"
  4013 ;; Parameters:    Size  Location     Type
  4014 ;;  d               2    3[COMMON] unsigned int 
  4015 ;; Auto vars:     Size  Location     Type
  4016 ;;		None
  4017 ;; Return value:  Size  Location     Type
  4018 ;;                  1    wreg      void 
  4019 ;; Registers used:
  4020 ;;		wreg, status,2, status,0, pclath, cstack
  4021 ;; Tracked objects:
  4022 ;;		On entry : 0/0
  4023 ;;		On exit  : 0/0
  4024 ;;		Unchanged: 0/0
  4025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4026 ;;      Params:         2       0       0       0       0
  4027 ;;      Locals:         0       0       0       0       0
  4028 ;;      Temps:          0       0       0       0       0
  4029 ;;      Totals:         2       0       0       0       0
  4030 ;;Total ram usage:        2 bytes
  4031 ;; Hardware stack levels used:    1
  4032 ;; Hardware stack levels required when called:    2
  4033 ;; This function calls:
  4034 ;;		_I2C_Master_Wait
  4035 ;; This function is called by:
  4036 ;;		_main
  4037 ;; This function uses a non-reentrant model
  4038 ;;
  4039                           
  4040                           
  4041                           ;psect for function _I2C_Master_Write
  4042  0F0D                     _I2C_Master_Write:
  4043  0F0D                     l2519:	
  4044                           ;incstack = 0
  4045                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  4046                           
  4047                           
  4048                           ;I2C.c: 67: void I2C_Master_Write(unsigned d);I2C.c: 68: {;I2C.c: 69:     I2C_Master_Wai
      +                          t();
  4049  0F0D  120A  158A  2717  120A  158A  	fcall	_I2C_Master_Wait
  4050  0F12                     l2521:
  4051                           
  4052                           ;I2C.c: 70:     SSPBUF = d;
  4053  0F12  0873               	movf	I2C_Master_Write@d,w
  4054  0F13  1283               	bcf	3,5	;RP0=0, select bank0
  4055  0F14  1303               	bcf	3,6	;RP1=0, select bank0
  4056  0F15  0093               	movwf	19	;volatile
  4057  0F16                     l192:
  4058  0F16  0008               	return
  4059  0F17                     __end_of_I2C_Master_Write:
  4060                           
  4061                           	psect	text14
  4062  0F04                     __ptext14:	
  4063 ;; *************** function _I2C_Master_Stop *****************
  4064 ;; Defined at:
  4065 ;;		line 57 in file "I2C.c"
  4066 ;; Parameters:    Size  Location     Type
  4067 ;;		None
  4068 ;; Auto vars:     Size  Location     Type
  4069 ;;		None
  4070 ;; Return value:  Size  Location     Type
  4071 ;;                  1    wreg      void 
  4072 ;; Registers used:
  4073 ;;		wreg, status,2, status,0, pclath, cstack
  4074 ;; Tracked objects:
  4075 ;;		On entry : 0/0
  4076 ;;		On exit  : 0/0
  4077 ;;		Unchanged: 0/0
  4078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4079 ;;      Params:         0       0       0       0       0
  4080 ;;      Locals:         0       0       0       0       0
  4081 ;;      Temps:          0       0       0       0       0
  4082 ;;      Totals:         0       0       0       0       0
  4083 ;;Total ram usage:        0 bytes
  4084 ;; Hardware stack levels used:    1
  4085 ;; Hardware stack levels required when called:    2
  4086 ;; This function calls:
  4087 ;;		_I2C_Master_Wait
  4088 ;; This function is called by:
  4089 ;;		_main
  4090 ;; This function uses a non-reentrant model
  4091 ;;
  4092                           
  4093                           
  4094                           ;psect for function _I2C_Master_Stop
  4095  0F04                     _I2C_Master_Stop:
  4096  0F04                     l2539:	
  4097                           ;incstack = 0
  4098                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  4099                           
  4100                           
  4101                           ;I2C.c: 59:     I2C_Master_Wait();
  4102  0F04  120A  158A  2717  120A  158A  	fcall	_I2C_Master_Wait
  4103  0F09                     l2541:
  4104                           
  4105                           ;I2C.c: 60:     SSPCON2bits.PEN = 1;
  4106  0F09  1683               	bsf	3,5	;RP0=1, select bank1
  4107  0F0A  1303               	bcf	3,6	;RP1=0, select bank1
  4108  0F0B  1511               	bsf	17,2	;volatile
  4109  0F0C                     l189:
  4110  0F0C  0008               	return
  4111  0F0D                     __end_of_I2C_Master_Stop:
  4112                           
  4113                           	psect	text15
  4114  0EFB                     __ptext15:	
  4115 ;; *************** function _I2C_Master_Start *****************
  4116 ;; Defined at:
  4117 ;;		line 41 in file "I2C.c"
  4118 ;; Parameters:    Size  Location     Type
  4119 ;;		None
  4120 ;; Auto vars:     Size  Location     Type
  4121 ;;		None
  4122 ;; Return value:  Size  Location     Type
  4123 ;;                  1    wreg      void 
  4124 ;; Registers used:
  4125 ;;		wreg, status,2, status,0, pclath, cstack
  4126 ;; Tracked objects:
  4127 ;;		On entry : 0/0
  4128 ;;		On exit  : 0/0
  4129 ;;		Unchanged: 0/0
  4130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4131 ;;      Params:         0       0       0       0       0
  4132 ;;      Locals:         0       0       0       0       0
  4133 ;;      Temps:          0       0       0       0       0
  4134 ;;      Totals:         0       0       0       0       0
  4135 ;;Total ram usage:        0 bytes
  4136 ;; Hardware stack levels used:    1
  4137 ;; Hardware stack levels required when called:    2
  4138 ;; This function calls:
  4139 ;;		_I2C_Master_Wait
  4140 ;; This function is called by:
  4141 ;;		_main
  4142 ;; This function uses a non-reentrant model
  4143 ;;
  4144                           
  4145                           
  4146                           ;psect for function _I2C_Master_Start
  4147  0EFB                     _I2C_Master_Start:
  4148  0EFB                     l2515:	
  4149                           ;incstack = 0
  4150                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  4151                           
  4152                           
  4153                           ;I2C.c: 43:     I2C_Master_Wait();
  4154  0EFB  120A  158A  2717  120A  158A  	fcall	_I2C_Master_Wait
  4155  0F00                     l2517:
  4156                           
  4157                           ;I2C.c: 44:     SSPCON2bits.SEN = 1;
  4158  0F00  1683               	bsf	3,5	;RP0=1, select bank1
  4159  0F01  1303               	bcf	3,6	;RP1=0, select bank1
  4160  0F02  1411               	bsf	17,0	;volatile
  4161  0F03                     l183:
  4162  0F03  0008               	return
  4163  0F04                     __end_of_I2C_Master_Start:
  4164                           
  4165                           	psect	text16
  4166  0F96                     __ptext16:	
  4167 ;; *************** function _I2C_Master_Read *****************
  4168 ;; Defined at:
  4169 ;;		line 76 in file "I2C.c"
  4170 ;; Parameters:    Size  Location     Type
  4171 ;;  a               2    3[COMMON] unsigned short 
  4172 ;; Auto vars:     Size  Location     Type
  4173 ;;  temp            2    0[BANK0 ] unsigned short 
  4174 ;; Return value:  Size  Location     Type
  4175 ;;                  2    3[COMMON] unsigned short 
  4176 ;; Registers used:
  4177 ;;		wreg, status,2, status,0, pclath, cstack
  4178 ;; Tracked objects:
  4179 ;;		On entry : 0/0
  4180 ;;		On exit  : 0/0
  4181 ;;		Unchanged: 0/0
  4182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4183 ;;      Params:         2       0       0       0       0
  4184 ;;      Locals:         0       2       0       0       0
  4185 ;;      Temps:          2       0       0       0       0
  4186 ;;      Totals:         4       2       0       0       0
  4187 ;;Total ram usage:        6 bytes
  4188 ;; Hardware stack levels used:    1
  4189 ;; Hardware stack levels required when called:    2
  4190 ;; This function calls:
  4191 ;;		_I2C_Master_Wait
  4192 ;; This function is called by:
  4193 ;;		_main
  4194 ;; This function uses a non-reentrant model
  4195 ;;
  4196                           
  4197                           
  4198                           ;psect for function _I2C_Master_Read
  4199  0F96                     _I2C_Master_Read:
  4200  0F96                     l2523:	
  4201                           ;incstack = 0
  4202                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  4203                           
  4204                           
  4205                           ;I2C.c: 76: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 77: {;I2C.c: 78:    
      +                           unsigned short temp;;I2C.c: 79:     I2C_Master_Wait();
  4206  0F96  120A  158A  2717  120A  158A  	fcall	_I2C_Master_Wait
  4207  0F9B                     l2525:
  4208                           
  4209                           ;I2C.c: 80:     SSPCON2bits.RCEN = 1;
  4210  0F9B  1683               	bsf	3,5	;RP0=1, select bank1
  4211  0F9C  1303               	bcf	3,6	;RP1=0, select bank1
  4212  0F9D  1591               	bsf	17,3	;volatile
  4213                           
  4214                           ;I2C.c: 81:     I2C_Master_Wait();
  4215  0F9E  120A  158A  2717  120A  158A  	fcall	_I2C_Master_Wait
  4216  0FA3                     l2527:
  4217                           
  4218                           ;I2C.c: 82:     temp = SSPBUF;
  4219  0FA3  1283               	bcf	3,5	;RP0=0, select bank0
  4220  0FA4  1303               	bcf	3,6	;RP1=0, select bank0
  4221  0FA5  0813               	movf	19,w	;volatile
  4222  0FA6  00F5               	movwf	??_I2C_Master_Read
  4223  0FA7  01F6               	clrf	??_I2C_Master_Read+1
  4224  0FA8  0875               	movf	??_I2C_Master_Read,w
  4225  0FA9  00A0               	movwf	I2C_Master_Read@temp
  4226  0FAA  0876               	movf	??_I2C_Master_Read+1,w
  4227  0FAB  00A1               	movwf	I2C_Master_Read@temp+1
  4228  0FAC                     l2529:
  4229                           
  4230                           ;I2C.c: 83:     I2C_Master_Wait();
  4231  0FAC  120A  158A  2717  120A  158A  	fcall	_I2C_Master_Wait
  4232  0FB1                     l2531:
  4233                           
  4234                           ;I2C.c: 84:     if(a == 1){
  4235  0FB1  0373               	decf	I2C_Master_Read@a,w
  4236  0FB2  0474               	iorwf	I2C_Master_Read@a+1,w
  4237  0FB3  1D03               	btfss	3,2
  4238  0FB4  2FB6               	goto	u2441
  4239  0FB5  2FB7               	goto	u2440
  4240  0FB6                     u2441:
  4241  0FB6  2FBB               	goto	l195
  4242  0FB7                     u2440:
  4243  0FB7                     l2533:
  4244                           
  4245                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 0;
  4246  0FB7  1683               	bsf	3,5	;RP0=1, select bank1
  4247  0FB8  1303               	bcf	3,6	;RP1=0, select bank1
  4248  0FB9  1291               	bcf	17,5	;volatile
  4249                           
  4250                           ;I2C.c: 86:     }else{
  4251  0FBA  2FBE               	goto	l196
  4252  0FBB                     l195:
  4253                           
  4254                           ;I2C.c: 87:         SSPCON2bits.ACKDT = 1;
  4255  0FBB  1683               	bsf	3,5	;RP0=1, select bank1
  4256  0FBC  1303               	bcf	3,6	;RP1=0, select bank1
  4257  0FBD  1691               	bsf	17,5	;volatile
  4258  0FBE                     l196:	
  4259                           ;I2C.c: 88:     }
  4260                           
  4261                           
  4262                           ;I2C.c: 89:     SSPCON2bits.ACKEN = 1;
  4263  0FBE  1611               	bsf	17,4	;volatile
  4264  0FBF                     l2535:
  4265                           
  4266                           ;I2C.c: 90:     return temp;
  4267  0FBF  1283               	bcf	3,5	;RP0=0, select bank0
  4268  0FC0  1303               	bcf	3,6	;RP1=0, select bank0
  4269  0FC1  0821               	movf	I2C_Master_Read@temp+1,w
  4270  0FC2  00F4               	movwf	?_I2C_Master_Read+1
  4271  0FC3  0820               	movf	I2C_Master_Read@temp,w
  4272  0FC4  00F3               	movwf	?_I2C_Master_Read
  4273  0FC5                     l197:
  4274  0FC5  0008               	return
  4275  0FC6                     __end_of_I2C_Master_Read:
  4276                           
  4277                           	psect	text17
  4278  0F17                     __ptext17:	
  4279 ;; *************** function _I2C_Master_Wait *****************
  4280 ;; Defined at:
  4281 ;;		line 34 in file "I2C.c"
  4282 ;; Parameters:    Size  Location     Type
  4283 ;;		None
  4284 ;; Auto vars:     Size  Location     Type
  4285 ;;		None
  4286 ;; Return value:  Size  Location     Type
  4287 ;;                  1    wreg      void 
  4288 ;; Registers used:
  4289 ;;		wreg, status,2
  4290 ;; Tracked objects:
  4291 ;;		On entry : 0/0
  4292 ;;		On exit  : 0/0
  4293 ;;		Unchanged: 0/0
  4294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4295 ;;      Params:         0       0       0       0       0
  4296 ;;      Locals:         0       0       0       0       0
  4297 ;;      Temps:          0       0       0       0       0
  4298 ;;      Totals:         0       0       0       0       0
  4299 ;;Total ram usage:        0 bytes
  4300 ;; Hardware stack levels used:    1
  4301 ;; Hardware stack levels required when called:    1
  4302 ;; This function calls:
  4303 ;;		Nothing
  4304 ;; This function is called by:
  4305 ;;		_I2C_Master_Start
  4306 ;;		_I2C_Master_Stop
  4307 ;;		_I2C_Master_Write
  4308 ;;		_I2C_Master_Read
  4309 ;;		_I2C_Master_RepeatedStart
  4310 ;; This function uses a non-reentrant model
  4311 ;;
  4312                           
  4313                           
  4314                           ;psect for function _I2C_Master_Wait
  4315  0F17                     _I2C_Master_Wait:
  4316  0F17                     l2307:	
  4317                           ;incstack = 0
  4318                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  4319                           
  4320  0F17                     l177:	
  4321                           ;I2C.c: 36:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  4322                           
  4323  0F17  1683               	bsf	3,5	;RP0=1, select bank1
  4324  0F18  1303               	bcf	3,6	;RP1=0, select bank1
  4325  0F19  1914               	btfsc	20,2	;volatile
  4326  0F1A  2F1C               	goto	u2231
  4327  0F1B  2F1D               	goto	u2230
  4328  0F1C                     u2231:
  4329  0F1C  2F17               	goto	l177
  4330  0F1D                     u2230:
  4331  0F1D                     l2309:
  4332  0F1D  0811               	movf	17,w	;volatile
  4333  0F1E  391F               	andlw	31
  4334  0F1F  1D03               	btfss	3,2
  4335  0F20  2F22               	goto	u2241
  4336  0F21  2F23               	goto	u2240
  4337  0F22                     u2241:
  4338  0F22  2F17               	goto	l177
  4339  0F23                     u2240:
  4340  0F23                     l180:
  4341  0F23  0008               	return
  4342  0F24                     __end_of_I2C_Master_Wait:
  4343                           
  4344                           	psect	text18
  4345  0FC6                     __ptext18:	
  4346 ;; *************** function _I2C_Master_Init *****************
  4347 ;; Defined at:
  4348 ;;		line 18 in file "I2C.c"
  4349 ;; Parameters:    Size  Location     Type
  4350 ;;  c               4   13[BANK0 ] const unsigned long 
  4351 ;; Auto vars:     Size  Location     Type
  4352 ;;		None
  4353 ;; Return value:  Size  Location     Type
  4354 ;;                  1    wreg      void 
  4355 ;; Registers used:
  4356 ;;		wreg, status,2, status,0, pclath, cstack
  4357 ;; Tracked objects:
  4358 ;;		On entry : 0/0
  4359 ;;		On exit  : 0/0
  4360 ;;		Unchanged: 0/0
  4361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4362 ;;      Params:         0       4       0       0       0
  4363 ;;      Locals:         0       0       0       0       0
  4364 ;;      Temps:          4       0       0       0       0
  4365 ;;      Totals:         4       4       0       0       0
  4366 ;;Total ram usage:        8 bytes
  4367 ;; Hardware stack levels used:    1
  4368 ;; Hardware stack levels required when called:    2
  4369 ;; This function calls:
  4370 ;;		___lldiv
  4371 ;; This function is called by:
  4372 ;;		_main
  4373 ;; This function uses a non-reentrant model
  4374 ;;
  4375                           
  4376                           
  4377                           ;psect for function _I2C_Master_Init
  4378  0FC6                     _I2C_Master_Init:
  4379  0FC6                     l2415:	
  4380                           ;incstack = 0
  4381                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  4382                           
  4383                           
  4384                           ;I2C.c: 18: void I2C_Master_Init(const unsigned long c);I2C.c: 19: {;I2C.c: 20:     SSPC
      +                          ON = 0b00101000;
  4385  0FC6  3028               	movlw	40
  4386  0FC7  1283               	bcf	3,5	;RP0=0, select bank0
  4387  0FC8  1303               	bcf	3,6	;RP1=0, select bank0
  4388  0FC9  0094               	movwf	20	;volatile
  4389  0FCA                     l2417:
  4390                           
  4391                           ;I2C.c: 21:     SSPCON2 = 0;
  4392  0FCA  1683               	bsf	3,5	;RP0=1, select bank1
  4393  0FCB  1303               	bcf	3,6	;RP1=0, select bank1
  4394  0FCC  0191               	clrf	17	;volatile
  4395  0FCD                     l2419:
  4396                           
  4397                           ;I2C.c: 22:     SSPADD = (4000000/(4*c))-1;
  4398  0FCD  1283               	bcf	3,5	;RP0=0, select bank0
  4399  0FCE  1303               	bcf	3,6	;RP1=0, select bank0
  4400  0FCF  082D               	movf	I2C_Master_Init@c,w
  4401  0FD0  00F4               	movwf	??_I2C_Master_Init
  4402  0FD1  082E               	movf	I2C_Master_Init@c+1,w
  4403  0FD2  00F5               	movwf	??_I2C_Master_Init+1
  4404  0FD3  082F               	movf	I2C_Master_Init@c+2,w
  4405  0FD4  00F6               	movwf	??_I2C_Master_Init+2
  4406  0FD5  0830               	movf	I2C_Master_Init@c+3,w
  4407  0FD6  00F7               	movwf	??_I2C_Master_Init+3
  4408  0FD7  3002               	movlw	2
  4409  0FD8                     u2385:
  4410  0FD8  1003               	clrc
  4411  0FD9  0DF4               	rlf	??_I2C_Master_Init,f
  4412  0FDA  0DF5               	rlf	??_I2C_Master_Init+1,f
  4413  0FDB  0DF6               	rlf	??_I2C_Master_Init+2,f
  4414  0FDC  0DF7               	rlf	??_I2C_Master_Init+3,f
  4415  0FDD                     u2380:
  4416  0FDD  3EFF               	addlw	-1
  4417  0FDE  1D03               	skipz
  4418  0FDF  2FD8               	goto	u2385
  4419  0FE0  0877               	movf	??_I2C_Master_Init+3,w
  4420  0FE1  00A3               	movwf	___lldiv@divisor+3
  4421  0FE2  0876               	movf	??_I2C_Master_Init+2,w
  4422  0FE3  00A2               	movwf	___lldiv@divisor+2
  4423  0FE4  0875               	movf	??_I2C_Master_Init+1,w
  4424  0FE5  00A1               	movwf	___lldiv@divisor+1
  4425  0FE6  0874               	movf	??_I2C_Master_Init,w
  4426  0FE7  00A0               	movwf	___lldiv@divisor
  4427  0FE8  3000               	movlw	0
  4428  0FE9  00A7               	movwf	___lldiv@dividend+3
  4429  0FEA  303D               	movlw	61
  4430  0FEB  00A6               	movwf	___lldiv@dividend+2
  4431  0FEC  3009               	movlw	9
  4432  0FED  00A5               	movwf	___lldiv@dividend+1
  4433  0FEE  3000               	movlw	0
  4434  0FEF  00A4               	movwf	___lldiv@dividend
  4435  0FF0  120A  118A  2664  120A  158A  	fcall	___lldiv
  4436  0FF5  1283               	bcf	3,5	;RP0=0, select bank0
  4437  0FF6  1303               	bcf	3,6	;RP1=0, select bank0
  4438  0FF7  0820               	movf	?___lldiv,w
  4439  0FF8  3EFF               	addlw	255
  4440  0FF9  1683               	bsf	3,5	;RP0=1, select bank1
  4441  0FFA  1303               	bcf	3,6	;RP1=0, select bank1
  4442  0FFB  0093               	movwf	19	;volatile
  4443  0FFC                     l2421:
  4444                           
  4445                           ;I2C.c: 23:     SSPSTAT = 0;
  4446  0FFC  0194               	clrf	20	;volatile
  4447  0FFD                     l2423:
  4448                           
  4449                           ;I2C.c: 24:     TRISCbits.TRISC3 = 1;
  4450  0FFD  1587               	bsf	7,3	;volatile
  4451  0FFE                     l2425:
  4452                           
  4453                           ;I2C.c: 25:     TRISCbits.TRISC4 = 1;
  4454  0FFE  1607               	bsf	7,4	;volatile
  4455  0FFF                     l174:
  4456  0FFF  0008               	return
  4457  1000                     __end_of_I2C_Master_Init:
  4458                           
  4459                           	psect	text19
  4460  0664                     __ptext19:	
  4461 ;; *************** function ___lldiv *****************
  4462 ;; Defined at:
  4463 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  4464 ;; Parameters:    Size  Location     Type
  4465 ;;  divisor         4    0[BANK0 ] unsigned long 
  4466 ;;  dividend        4    4[BANK0 ] unsigned long 
  4467 ;; Auto vars:     Size  Location     Type
  4468 ;;  quotient        4    8[BANK0 ] unsigned long 
  4469 ;;  counter         1   12[BANK0 ] unsigned char 
  4470 ;; Return value:  Size  Location     Type
  4471 ;;                  4    0[BANK0 ] unsigned long 
  4472 ;; Registers used:
  4473 ;;		wreg, status,2, status,0
  4474 ;; Tracked objects:
  4475 ;;		On entry : 0/0
  4476 ;;		On exit  : 0/0
  4477 ;;		Unchanged: 0/0
  4478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4479 ;;      Params:         0       8       0       0       0
  4480 ;;      Locals:         0       5       0       0       0
  4481 ;;      Temps:          1       0       0       0       0
  4482 ;;      Totals:         1      13       0       0       0
  4483 ;;Total ram usage:       14 bytes
  4484 ;; Hardware stack levels used:    1
  4485 ;; Hardware stack levels required when called:    1
  4486 ;; This function calls:
  4487 ;;		Nothing
  4488 ;; This function is called by:
  4489 ;;		_I2C_Master_Init
  4490 ;;		_UARTInit
  4491 ;; This function uses a non-reentrant model
  4492 ;;
  4493                           
  4494                           
  4495                           ;psect for function ___lldiv
  4496  0664                     ___lldiv:
  4497  0664                     l2321:	
  4498                           ;incstack = 0
  4499                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  4500                           
  4501  0664  3000               	movlw	0
  4502  0665  1283               	bcf	3,5	;RP0=0, select bank0
  4503  0666  1303               	bcf	3,6	;RP1=0, select bank0
  4504  0667  00AB               	movwf	___lldiv@quotient+3
  4505  0668  3000               	movlw	0
  4506  0669  00AA               	movwf	___lldiv@quotient+2
  4507  066A  3000               	movlw	0
  4508  066B  00A9               	movwf	___lldiv@quotient+1
  4509  066C  3000               	movlw	0
  4510  066D  00A8               	movwf	___lldiv@quotient
  4511  066E  0823               	movf	___lldiv@divisor+3,w
  4512  066F  0422               	iorwf	___lldiv@divisor+2,w
  4513  0670  0421               	iorwf	___lldiv@divisor+1,w
  4514  0671  0420               	iorwf	___lldiv@divisor,w
  4515  0672  1903               	skipnz
  4516  0673  2E75               	goto	u2251
  4517  0674  2E76               	goto	u2250
  4518  0675                     u2251:
  4519  0675  2EC3               	goto	l2341
  4520  0676                     u2250:
  4521  0676                     l2323:
  4522  0676  01AC               	clrf	___lldiv@counter
  4523  0677  0AAC               	incf	___lldiv@counter,f
  4524  0678  2E86               	goto	l2327
  4525  0679                     l2325:
  4526  0679  3001               	movlw	1
  4527  067A  00F3               	movwf	??___lldiv
  4528  067B                     u2265:
  4529  067B  1003               	clrc
  4530  067C  0DA0               	rlf	___lldiv@divisor,f
  4531  067D  0DA1               	rlf	___lldiv@divisor+1,f
  4532  067E  0DA2               	rlf	___lldiv@divisor+2,f
  4533  067F  0DA3               	rlf	___lldiv@divisor+3,f
  4534  0680  0BF3               	decfsz	??___lldiv,f
  4535  0681  2E7B               	goto	u2265
  4536  0682  3001               	movlw	1
  4537  0683  00F3               	movwf	??___lldiv
  4538  0684  0873               	movf	??___lldiv,w
  4539  0685  07AC               	addwf	___lldiv@counter,f
  4540  0686                     l2327:
  4541  0686  1FA3               	btfss	___lldiv@divisor+3,7
  4542  0687  2E89               	goto	u2271
  4543  0688  2E8A               	goto	u2270
  4544  0689                     u2271:
  4545  0689  2E79               	goto	l2325
  4546  068A                     u2270:
  4547  068A                     l2329:
  4548  068A  3001               	movlw	1
  4549  068B  00F3               	movwf	??___lldiv
  4550  068C                     u2285:
  4551  068C  1003               	clrc
  4552  068D  0DA8               	rlf	___lldiv@quotient,f
  4553  068E  0DA9               	rlf	___lldiv@quotient+1,f
  4554  068F  0DAA               	rlf	___lldiv@quotient+2,f
  4555  0690  0DAB               	rlf	___lldiv@quotient+3,f
  4556  0691  0BF3               	decfsz	??___lldiv,f
  4557  0692  2E8C               	goto	u2285
  4558  0693                     l2331:
  4559  0693  0823               	movf	___lldiv@divisor+3,w
  4560  0694  0227               	subwf	___lldiv@dividend+3,w
  4561  0695  1D03               	skipz
  4562  0696  2EA1               	goto	u2295
  4563  0697  0822               	movf	___lldiv@divisor+2,w
  4564  0698  0226               	subwf	___lldiv@dividend+2,w
  4565  0699  1D03               	skipz
  4566  069A  2EA1               	goto	u2295
  4567  069B  0821               	movf	___lldiv@divisor+1,w
  4568  069C  0225               	subwf	___lldiv@dividend+1,w
  4569  069D  1D03               	skipz
  4570  069E  2EA1               	goto	u2295
  4571  069F  0820               	movf	___lldiv@divisor,w
  4572  06A0  0224               	subwf	___lldiv@dividend,w
  4573  06A1                     u2295:
  4574  06A1  1C03               	skipc
  4575  06A2  2EA4               	goto	u2291
  4576  06A3  2EA5               	goto	u2290
  4577  06A4                     u2291:
  4578  06A4  2EB4               	goto	l2337
  4579  06A5                     u2290:
  4580  06A5                     l2333:
  4581  06A5  0820               	movf	___lldiv@divisor,w
  4582  06A6  02A4               	subwf	___lldiv@dividend,f
  4583  06A7  0821               	movf	___lldiv@divisor+1,w
  4584  06A8  1C03               	skipc
  4585  06A9  0F21               	incfsz	___lldiv@divisor+1,w
  4586  06AA  02A5               	subwf	___lldiv@dividend+1,f
  4587  06AB  0822               	movf	___lldiv@divisor+2,w
  4588  06AC  1C03               	skipc
  4589  06AD  0F22               	incfsz	___lldiv@divisor+2,w
  4590  06AE  02A6               	subwf	___lldiv@dividend+2,f
  4591  06AF  0823               	movf	___lldiv@divisor+3,w
  4592  06B0  1C03               	skipc
  4593  06B1  0F23               	incfsz	___lldiv@divisor+3,w
  4594  06B2  02A7               	subwf	___lldiv@dividend+3,f
  4595  06B3                     l2335:
  4596  06B3  1428               	bsf	___lldiv@quotient,0
  4597  06B4                     l2337:
  4598  06B4  3001               	movlw	1
  4599  06B5                     u2305:
  4600  06B5  1003               	clrc
  4601  06B6  0CA3               	rrf	___lldiv@divisor+3,f
  4602  06B7  0CA2               	rrf	___lldiv@divisor+2,f
  4603  06B8  0CA1               	rrf	___lldiv@divisor+1,f
  4604  06B9  0CA0               	rrf	___lldiv@divisor,f
  4605  06BA  3EFF               	addlw	-1
  4606  06BB  1D03               	skipz
  4607  06BC  2EB5               	goto	u2305
  4608  06BD                     l2339:
  4609  06BD  3001               	movlw	1
  4610  06BE  02AC               	subwf	___lldiv@counter,f
  4611  06BF  1D03               	btfss	3,2
  4612  06C0  2EC2               	goto	u2311
  4613  06C1  2EC3               	goto	u2310
  4614  06C2                     u2311:
  4615  06C2  2E8A               	goto	l2329
  4616  06C3                     u2310:
  4617  06C3                     l2341:
  4618  06C3  082B               	movf	___lldiv@quotient+3,w
  4619  06C4  00A3               	movwf	?___lldiv+3
  4620  06C5  082A               	movf	___lldiv@quotient+2,w
  4621  06C6  00A2               	movwf	?___lldiv+2
  4622  06C7  0829               	movf	___lldiv@quotient+1,w
  4623  06C8  00A1               	movwf	?___lldiv+1
  4624  06C9  0828               	movf	___lldiv@quotient,w
  4625  06CA  00A0               	movwf	?___lldiv
  4626  06CB                     l429:
  4627  06CB  0008               	return
  4628  06CC                     __end_of___lldiv:
  4629                           
  4630                           	psect	text20
  4631  0F24                     __ptext20:	
  4632 ;; *************** function _ISR *****************
  4633 ;; Defined at:
  4634 ;;		line 54 in file "MasterMain.c"
  4635 ;; Parameters:    Size  Location     Type
  4636 ;;		None
  4637 ;; Auto vars:     Size  Location     Type
  4638 ;;		None
  4639 ;; Return value:  Size  Location     Type
  4640 ;;                  1    wreg      void 
  4641 ;; Registers used:
  4642 ;;		wreg, status,2, status,0
  4643 ;; Tracked objects:
  4644 ;;		On entry : 0/0
  4645 ;;		On exit  : 0/0
  4646 ;;		Unchanged: 0/0
  4647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4648 ;;      Params:         0       0       0       0       0
  4649 ;;      Locals:         0       0       0       0       0
  4650 ;;      Temps:          3       0       0       0       0
  4651 ;;      Totals:         3       0       0       0       0
  4652 ;;Total ram usage:        3 bytes
  4653 ;; Hardware stack levels used:    1
  4654 ;; This function calls:
  4655 ;;		Nothing
  4656 ;; This function is called by:
  4657 ;;		Interrupt level 1
  4658 ;; This function uses a non-reentrant model
  4659 ;;
  4660                           
  4661                           
  4662                           ;psect for function _ISR
  4663  0F24                     _ISR:
  4664  0F24                     i1l1911:
  4665                           
  4666                           ;MasterMain.c: 55:     if(PIR1bits.TMR2IF){
  4667  0F24  1283               	bcf	3,5	;RP0=0, select bank0
  4668  0F25  1303               	bcf	3,6	;RP1=0, select bank0
  4669  0F26  1C8C               	btfss	12,1	;volatile
  4670  0F27  2F29               	goto	u157_21
  4671  0F28  2F2A               	goto	u157_20
  4672  0F29                     u157_21:
  4673  0F29  2F2F               	goto	i1l90
  4674  0F2A                     u157_20:
  4675  0F2A                     i1l1913:
  4676                           
  4677                           ;MasterMain.c: 57:         contador++;
  4678  0F2A  3001               	movlw	1
  4679  0F2B  00F0               	movwf	??_ISR
  4680  0F2C  0870               	movf	??_ISR,w
  4681  0F2D  07B7               	addwf	_contador,f
  4682  0F2E                     i1l1915:
  4683                           
  4684                           ;MasterMain.c: 58:         PIR1bits.TMR2IF = 0;
  4685  0F2E  108C               	bcf	12,1	;volatile
  4686  0F2F                     i1l90:
  4687  0F2F  0872               	movf	??_ISR+2,w
  4688  0F30  008A               	movwf	10
  4689  0F31  0E71               	swapf	??_ISR+1,w
  4690  0F32  0083               	movwf	3
  4691  0F33  0EFE               	swapf	btemp,f
  4692  0F34  0E7E               	swapf	btemp,w
  4693  0F35  0009               	retfie
  4694  0F36                     __end_of_ISR:
  4695  007E                     btemp	set	126	;btemp
  4696  007E                     wtemp0	set	126
  4697                           
  4698                           	psect	intentry
  4699  0004                     __pintentry:	
  4700                           ;incstack = 0
  4701                           ; Regs used in _ISR: [wreg+status,2+status,0]
  4702                           
  4703  0004                     interrupt_function:
  4704  007E                     saved_w	set	btemp
  4705  0004  00FE               	movwf	btemp
  4706  0005  0E03               	swapf	3,w
  4707  0006  00F1               	movwf	??_ISR+1
  4708  0007  080A               	movf	10,w
  4709  0008  00F2               	movwf	??_ISR+2
  4710  0009  120A  158A  2F24   	ljmp	_ISR
  4711                           
  4712                           	psect	config
  4713                           
  4714                           ;Config register CONFIG1 @ 0x2007
  4715                           ;	Oscillator Selection bits
  4716                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4717                           ;	Watchdog Timer Enable bit
  4718                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4719                           ;	Power-up Timer Enable bit
  4720                           ;	PWRTE = OFF, PWRT disabled
  4721                           ;	RE3/MCLR pin function select bit
  4722                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4723                           ;	Code Protection bit
  4724                           ;	CP = OFF, Program memory code protection is disabled
  4725                           ;	Data Code Protection bit
  4726                           ;	CPD = OFF, Data memory code protection is disabled
  4727                           ;	Brown Out Reset Selection bits
  4728                           ;	BOREN = OFF, BOR disabled
  4729                           ;	Internal External Switchover bit
  4730                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4731                           ;	Fail-Safe Clock Monitor Enabled bit
  4732                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4733                           ;	Low Voltage Programming Enable bit
  4734                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4735                           ;	In-Circuit Debugger Mode bit
  4736                           ;	DEBUG = 0x1, unprogrammed default
  4737  2007                     	org	8199
  4738  2007  20D4               	dw	8404
  4739                           
  4740                           ;Config register CONFIG2 @ 0x2008
  4741                           ;	Brown-out Reset Selection bit
  4742                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4743                           ;	Flash Program Memory Self Write Enable bits
  4744                           ;	WRT = OFF, Write protection off
  4745  2008                     	org	8200
  4746  2008  3FFF               	dw	16383

Data Sizes:
    Strings     162
    Constant    0
    Data        4
    BSS         20
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     22      43
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(1) Largest target is 10
		 -> numero(BANK0[10]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 10
		 -> numero(BANK0[10]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 10
		 -> numero(BANK0[10]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 10
		 -> numero(BANK0[10]), 

    LcdWriteString@value	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_13(CODE[21]), STR_12(CODE[3]), STR_11(CODE[17]), STR_10(CODE[24]), 
		 -> STR_9(CODE[3]), STR_8(CODE[17]), STR_7(CODE[16]), STR_6(CODE[16]), 
		 -> STR_5(CODE[17]), STR_4(CODE[5]), numero(BANK0[10]), STR_3(CODE[6]), 
		 -> STR_2(CODE[6]), STR_1(CODE[17]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 10
		 -> numero(BANK0[10]), 


Critical Paths under _main in COMMON

    _main->_I2C_Master_Init
    _main->_UARTInit
    _utoa->___lwdiv
    _utoa->___lwmod
    _UARTInit->___lldiv
    _LcdWriteString->_LcdWriteChar
    _LcdWriteChar->_LcdPort
    _LcdSetCursor->_LcdCmd
    _LcdInit->_LcdCmd
    _LcdCmd->_LcdPort
    _I2C_Master_Init->___lldiv

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _UARTInit->___lldiv
    _I2C_Master_Init->___lldiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    9452
                                             19 BANK0      3     3      0
                    _I2C_Master_Init
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            _LcdInit
                       _LcdSetCursor
                       _LcdWriteChar
                     _LcdWriteString
                           _UARTInit
                               _itoa
                               _step
 ---------------------------------------------------------------------------------
 (1) _step                                                 8     7      1     257
                                              3 COMMON     3     2      1
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _itoa                                                 7     3      4    2766
                                             12 BANK0      7     3      4
                               _utoa
 ---------------------------------------------------------------------------------
 (2) _utoa                                                 9     5      4    1669
                                              3 BANK0      9     5      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     412
                                              3 COMMON     5     1      4
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     601
                                              3 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _UARTInit                                             9     4      5    1054
                                              4 COMMON     4     4      0
                                             13 BANK0      5     0      5
                            ___lldiv
 ---------------------------------------------------------------------------------
 (1) _LcdWriteString                                       7     5      2    1939
                                              0 BANK0      7     5      2
                       _LcdWriteChar
 ---------------------------------------------------------------------------------
 (2) _LcdWriteChar                                         2     2      0     279
                                              5 COMMON     2     2      0
                            _LcdPort
 ---------------------------------------------------------------------------------
 (1) _LcdSetCursor                                         4     3      1    1092
                                              0 BANK0      4     3      1
                             _LcdCmd
 ---------------------------------------------------------------------------------
 (1) _LcdInit                                              2     2      0     527
                                              0 BANK0      2     2      0
                             _LcdCmd
                            _LcdPort
 ---------------------------------------------------------------------------------
 (2) _LcdCmd                                               3     3      0     279
                                              5 COMMON     3     3      0
                            _LcdPort
 ---------------------------------------------------------------------------------
 (3) _LcdPort                                              2     2      0     248
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     301
                                              3 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     335
                                              3 COMMON     4     2      2
                                              0 BANK0      2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     902
                                              4 COMMON     4     4      0
                                             13 BANK0      4     0      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     781
                                              3 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _LcdInit
     _LcdCmd
       _LcdPort
     _LcdPort
   _LcdSetCursor
     _LcdCmd
       _LcdPort
   _LcdWriteChar
     _LcdPort
   _LcdWriteString
     _LcdWriteChar
       _LcdPort
   _UARTInit
     ___lldiv
   _itoa
     _utoa
       ___lwdiv
       ___lwmod
   _step

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     16      2B       5       53.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      36      12        0.0%
ABS                  0      0      36       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Sep 02 23:34:30 2021

        UARTInit@baud_rate 002D                          pc 0002                         l96 008C  
                       l97 0096                         l98 00A0                         _ok 0038  
                       fsr 0004                        l111 0378                        l120 0289  
                      l121 0293                        l114 0253                        l225 057E  
                      l241 0716                        l145 0442                        l250 07A2  
                      l180 0F23                        l228 07F8                        l244 0F4A  
                      l174 0FFF                        l238 0F6F                        l183 0F03  
                      l192 0F16                        l177 0F17                        l195 0FBB  
                      l275 05F1                        l196 0FBE                        l429 06CB  
                      l197 0FC5                        l189 0F0C                        l665 075C  
                      l675 07DE                        l853 064C                        l855 0663  
                      l847 0F95                        _GIE 005F                        _RD0 0040  
                      _RD1 0041                        _RD2 0042                        _RE0 0048  
                      _RD3 0043                        _RD4 0044                        _RE2 004A  
                      _RD5 0045                        _RD6 0046                        _RD7 0047  
                      _PR2 0092                        _ISR 0F24                        _hum 003D  
                      fsr0 0004                        indf 0000                       ?_ISR 0070  
                     l2301 0F40                       l2311 07E0                       l2303 0F43  
                     l2321 0664                       l2313 07E3                       l2305 0F47  
                     l2401 05E6                       l2331 0693                       l2323 0676  
                     l2307 0F17                       l2315 07E9                       l2411 05ED  
                     l2403 05E9                       l2251 071B                       l2333 06A5  
                     l2325 0679                       l2341 06C3                       l2421 0FFC  
                     l2309 0F1D                       l2245 04F6                       l2317 07EC  
                     l2413 05F0                       l2405 05EA                       l2261 0733  
                     l2253 0721                       l2335 06B3                       l2327 0686  
                     l2423 0FFD                       l2415 0FC6                       l2247 0500  
                     l2319 07F5                       l2511 077E                       l2407 05EB  
                     l2263 0744                       l2255 0724                       l2271 0758  
                     l2351 0610                       l2431 0383                       l2337 06B4  
                     l2329 068A                       l2425 0FFE                       l2417 0FCA  
                     l2521 0F12                       l2513 0786                       l2409 05EC  
                     l2265 074A                       l2257 072B                       l2249 0717  
                     l2281 07B5                       l2361 0642                       l2353 0616  
                     l2345 05F5                       l2441 03A3                       l2433 0389  
                     l2601 009A                       l2339 06BD                       l2419 0FCD  
                     l2531 0FB1                       l2523 0F96                       l2515 0EFB  
                     l2507 075D                       l2267 074B                       l2259 072F  
                     l2291 07D4                       l2283 07B9                       l2275 07A3  
                     l2371 065F                       l2363 0648                       l2355 061A  
                     l2347 05F9                       l2451 03C3                       l2443 03A9  
                     l2435 038A                       l2427 037F                       l2611 00B0  
                     l2603 009E                       l2533 0FB7                       l2525 0F9B  
                     l2517 0F00                       l2541 0F09                       l2381 06EE  
                     l2509 0762                       l2269 0752                       l2285 07BD  
                     l2277 07A9                       l2293 07DA                       l2365 0650  
                     l2357 061C                       l2349 060C                       l2461 03E3  
                     l2445 03AA                       l2437 0393                       l2453 03CB  
                     l2429 0380                       l2701 0254                       l2621 00CF  
                     l2613 00B1                       l2605 00A4                       l2535 0FBF  
                     l2527 0FA3                       l2519 0F0D                       l2383 06F4  
                     l2375 06CC                       l2391 05B5                       l2287 07C7  
                     l2279 07AE                       l2367 0657                       l2359 062F  
                     l2551 0F82                       l2543 0F73                       l2471 0403  
                     l2463 03EC                       l2455 03D9                       l2447 03B9  
                     l2439 0399                       l2711 0275                       l2703 0256  
                     l2631 00FB                       l2623 00DA                       l2615 00BB  
                     l2607 00A8                       l2529 0FAC                       l2377 06D2  
                     l2297 0F37                       l2393 05E2                       l2385 057F  
                     l2289 07CD                       l2369 0659                       l2553 0F87  
                     l2545 0F73                       l2473 0412                       l2465 03F2  
                     l2457 03DC                       l2449 03BA                       l2721 028D  
                     l2713 0277                       l2705 025B                       l2641 0124  
                     l2633 0105                       l2625 00DF                       l2617 00C2  
                     l2609 00AA                       l2561 003F                       l2539 0F04  
                     l2379 06DD                       l2491 0F4E                       l2299 0F3A  
                     l2395 05E3                       l2387 0586                       l2547 0F77  
                     l2475 0413                       l2467 03FC                       l2459 03E2  
                     l2483 0432                       l2731 02A2                       l2723 0291  
                     l2715 027F                       l2707 0265                       l2651 016F  
                     l2643 0136                       l2635 0110                       l2627 00E8  
                     l2619 00C7                       l2571 005A                       l2563 0040  
                     l2493 0F4F                       l2397 05E4                       l2389 05B3  
                     l2549 0F7E                       l2477 041C                       l2469 0402  
                     l2741 02B2                       l2733 02A7                       l2725 0297  
                     l2717 0283                       l2709 026E                       l2661 01A5  
                     l2653 017D                       l2645 0157                       l2637 011A  
                     l2629 00F6                       l2581 0074                       l2573 0069  
                     l2565 0041                       l2557 0035                       l2495 0F57  
                     l2399 05E5                       l2479 0424                       l2751 02DC  
                     l2743 02B4                       l2735 02A8                       l2727 029B  
                     l2719 0287                       l2671 01CA                       l2663 01AB  
                     l2655 0182                       l2647 0161                       l2591 0083  
                     l2583 0075                       l2575 006D                       l2567 0044  
                     l2559 003D                       l2761 0319                       l2753 02EF  
                     l2745 02BC                       l2737 02AC                       l2729 029D  
                     l2673 01DB                       l2681 01F9                       l2665 01B6  
                     l2657 018C                       l2649 0166                       l2593 0087  
                     l2585 0076                       l2577 0071                       l2569 0049  
                     l2499 0F5F                       l2771 032B                       l2763 0320  
                     l2755 02FA                       l2747 02C7                       l2739 02B1  
                     l2683 0202                       l2675 01E1                       l2667 01BC  
                     l2659 019F                       l2691 022A                       l2595 008B  
                     l2587 0079                       l2579 0073                       l2781 035E  
                     l2773 032D                       l2765 0321                       l2749 02D1  
                     l2757 0306                       l2693 0232                       l2685 020A  
                     l2677 01EC                       l2669 01C2                       l2597 0090  
                     l2589 007F                       l2783 0364                       l2775 0335  
                     l2767 0325                       l2759 030E                       l2695 023D  
                     l2687 020F                       l2679 01F2                       l2599 0094  
                     l2777 0340                       l2769 032A                       l2785 036F  
                     l2697 0247                       l2689 0223                       l2787 0376  
                     l2779 0353                       l2699 024E                       l2895 012E  
                     l2897 043A                       l2899 0F67                       STR_1 04B3  
                     STR_2 04E4                       STR_3 04EA                       STR_4 04F0  
                     STR_5 04A2                       STR_6 04D4                       STR_7 04C4  
                     STR_8 0480                       STR_9 0468                       u2020 0557  
                     u2004 0548                       u2100 0721                       u2021 0553  
                     u2101 0720                       u2015 054B                       u2120 0733  
                     u2200 07C7                       u2121 0732                       u2201 07C6  
                     u2050 0569                       u2034 055A                       u2051 0565  
                     u2115 0725                       u2140 0744                       u2220 07DA  
                     u2045 055D                       u2141 0743                       u2221 07D9  
                     u2205 07C3                       u2310 06C3                       u2230 0F1D  
                     u2311 06C2                       u2231 0F1C                       u2135 0734  
                     u2215 07CE                       u2240 0F23                       u2080 057B  
                     u2064 056C                       u2160 0758                       u2320 0616  
                     u2400 0431                       u2305 06B5                       u2241 0F22  
                     u2081 0577                       u2161 0757                       u2145 0740  
                     u2321 0615                       u2401 0430                       u2250 0676  
                     u2410 076C                       u2170 07A9                       u2330 0648  
                     u2251 0675                       u2075 056F                       u2155 074C  
                     u2171 07A8                       u2331 0647                       u2420 0790  
                     u2340 065F                       u2500 009A                       u2341 065E  
                     u2405 042D                       u2501 0099                       u2270 068A  
                     u2094 057E                       u2430 07A2                       u2350 0586  
                     u2190 07BD                       u2510 009E                       u2271 0689  
                     u2431 07A1                       u2351 0585                       u2191 07BC  
                     u2511 009D                       u2440 0FB7                       u2360 0594  
                     u2600 0253                       u2520 00A4                       u2265 067B  
                     u2441 0FB6                       u2185 07AF                       u2601 0252  
                     u2521 00A3                       u2290 06A5                       u2370 05C3  
                     u2450 0F77                       u2610 025B                       u2530 00A8  
                     u2291 06A4                       u2451 0F76                       u2611 025A  
                     u2531 00A7                       u2380 0FDD                       u1900 050F  
                     u2700 02A7                       u2620 0275                       u2540 00B0  
                     u2460 0087                       u2285 068C                       u1901 050B  
                     u2365 058F                       u2701 02A6                       u2621 0274  
                     u2541 00AF                       u2461 0086                       u2390 03D8  
                     u2710 02B1                       u2630 0283                       u2550 00C7  
                     u2470 008B                       u2295 06A1                       u2375 05BE  
                     u2391 03D7                       u2711 02B0                       u2631 0282  
                     u2551 00C6                       u2471 008A                       u2720 0320  
                     u2640 0287                       u2560 01CA                       u2480 0090  
                     u2385 0FD8                       u2721 031F                       u2641 0286  
                     u2561 01C9                       u2481 008F                       u1930 0521  
                     u1914 0512                       u2730 032A                       u2650 028D  
                     u2570 020A                       u2490 0094                       u1931 051D  
                     u2395 03D4                       u2731 0329                       u2651 028C  
                     u2571 0209                       u2491 0093                       u2740 0376  
                     u2660 0291                       u2580 0223                       u1925 0515  
                     u2741 0375                       u2661 0290                       u2581 0222  
                     u1870 04FD                       u2670 0297                       u2590 024E  
                     u1871 04F9                       u2807 03AE                       u2671 0296  
                     u2591 024D                       u1960 0533                       u1944 0524  
                     u2680 029B                       u1961 052F                       u2817 03BE  
                     u2681 029A                       u2585 021F                       u2690 02A2  
                     u1955 0527                       u2907 07F0                       u2827 03E7  
                     u2691 02A1                       _PEIE 005E                       u1884 0500  
                     u2837 03F7                       u2757 0101                       u1990 0545  
                     u1974 0536                       u1991 0541                       u1895 0503  
                     u2847 0407                       u2767 015D                       u1985 0539  
                     u2857 0417                       u2777 0188                       u2867 0F45  
                     u2787 038E                       u2877 06D8                       u2797 039E  
                     u2887 06E9                       u2897 06FA                       i1l90 0F2F  
                     _hall 003E                       _main 0035                       _menu 003C  
                     _itoa 0F70                       _temp 007A                       _step 037C  
                     btemp 007E                       _utoa 05F2                       start 000C  
          LcdSetCursor@row 0023            __end_of_LcdInit 0717            __end_of_LcdPort 057F  
                    ??_ISR 0070       __end_of_LcdSetCursor 0F70           ?_I2C_Master_Init 002D  
         ?_I2C_Master_Read 0073           ?_I2C_Master_Wait 0070           ?_I2C_Master_Stop 0070  
                    ?_main 0070                      ?_itoa 002C                      STR_10 0453  
                    STR_11 0491                      STR_12 0468                      STR_13 046B  
                    ?_step 0073                      _ANSEL 0188            __end_of___lldiv 06CC  
                    ?_utoa 0023            __end_of___lwdiv 075D            __end_of___lwmod 07DF  
                    _RCREG 001A                      _SPBRG 0099                      _PORTA 0005  
                    _PORTB 0006                      _TRISA 0085                      _TRISB 0086  
                    _TRISD 0088                      _SSPIE 0463                      _TRISE 0089  
                    _SSPIF 0063                      _TXREG 0019           __end_of_UARTInit 05F2  
                    pclath 000A                      step@i 0020                      utoa@c 002A  
                    utoa@v 0028                      status 0003                      wtemp0 007E  
     __end_of_LcdWriteChar 0F4B            __initialization 000F               __end_of_main 037C  
             __end_of_itoa 0F96               __end_of_step 0443               __end_of_utoa 0664  
                   ??_main 0033                     ??_itoa 0030                     ??_step 0074  
                   ??_utoa 0027          ?_I2C_Master_Start 0070          ?_I2C_Master_Write 0073  
       ??_I2C_Master_Start 0073         ??_I2C_Master_Write 0075                     _ANSELH 0189  
                   i1l1911 0F24                     i1l1913 0F2A                     i1l1915 0F2E  
                   u157_20 0F2A                     u157_21 0F29                  ??_LcdInit 0020  
                ??_LcdPort 0073                     _SSPADD 0093                     _TRISC3 043B  
                   _TRISC4 043C                     _SSPCON 0014                     _SSPBUF 0013  
                   _LcdCmd 07DF                  ??___lldiv 0073                  ??___lwdiv 0077  
                ??___lwmod 0077                     _opcion 003B                     _numero 003F  
             __pdataCOMMON 0078                     saved_w 007E    __end_of__initialization 0031  
  __size_of_LcdWriteString 0046      __size_of_LcdSetCursor 0025          LcdWriteChar@value 0076  
           __pcstackCOMMON 0070               __pidataBANK0 07FB                  ?_UARTInit 002D  
           _OPTION_REGbits 0081      __size_of_LcdWriteChar 0015               _LcdSetCursor 0F4B  
               __pbssBANK0 0036                    ?_LcdCmd 0070                 __pmaintext 0035  
               ??_UARTInit 0074                 __pintentry 0004               _LcdWriteChar 0F36  
                  _SSPCON2 0091                    _SSPSTAT 0094                 __stringtab 0443  
                  _LcdInit 06CC                    _LcdPort 04F5            __size_of_LcdCmd 001A  
                  ___lldiv 0664                    ___lwdiv 0717                    ___lwmod 07A3  
                  __ptext1 037C                    __ptext2 0F70                    __ptext3 05F2  
                  __ptext4 07A3                    __ptext5 0717                    __ptext6 057F  
                  __ptext7 075D                    __ptext8 0F36                    __ptext9 0F4B  
             __size_of_ISR 0012                  _T2CONbits 0012   __size_of_I2C_Master_Init 003A  
 __size_of_I2C_Master_Read 0030   __size_of_I2C_Master_Wait 000D   __size_of_I2C_Master_Stop 0009  
                  clrloop0 0EF4       end_of_initialization 0031             _LcdWriteString 075D  
                  itoa@buf 0032                    itoa@val 002C  __size_of_I2C_Master_Start 0009  
__size_of_I2C_Master_Write 000A            ___lldiv@divisor 0020            ___lldiv@counter 002C  
                _RCSTAbits 0018           I2C_Master_Init@c 002D                    step@dir 0073  
         I2C_Master_Read@a 0073                    utoa@buf 002B                    utoa@val 0023  
               _umbralTemp 004A                  _TRISCbits 0087         LcdSetCursor@column 0020  
   __end_of_LcdWriteString 07A3                  _TXSTAbits 0098             __end_of_LcdCmd 07F9  
            __pidataCOMMON 07F9          __size_of_UARTInit 0073        start_initialization 000F  
              __end_of_ISR 0F36            ?_LcdWriteString 0020          ??_I2C_Master_Init 0074  
        ??_I2C_Master_Read 0075          ??_I2C_Master_Wait 0073          ??_I2C_Master_Stop 0073  
                 ??_LcdCmd 0075                __pdataBANK0 0049                __pbssCOMMON 007A  
                ___latbits 0002              __pcstackBANK0 0020                _decrementar 0039  
                 ?_LcdInit 0070                   ?_LcdPort 0070           _I2C_Master_Start 0EFB  
         _I2C_Master_Write 0F0D           ___lwdiv@dividend 0075                   ?___lldiv 0020  
                 ?___lwdiv 0073                  _direccion 0036                   ?___lwmod 0073  
                __pstrings 0443           ___lwdiv@quotient 0021          interrupt_function 0004  
                clear_ram0 0EF3                   _PIE1bits 008C                   _PIR1bits 000C  
                 _UARTInit 057F                  _umbralHum 0049                __stringbase 0452  
      I2C_Master_Read@temp 0020           __size_of_LcdInit 004B           __size_of_LcdPort 008A  
             LcdPort@value 0074                _incrementar 003A               UARTInit@BRGH 0031  
              LcdCmd@value 0077           __size_of___lldiv 0068           __size_of___lwdiv 0046  
         __size_of___lwmod 003C         __end_of__stringtab 0453           ??_LcdWriteString 0022  
          _I2C_Master_Init 0FC6            _I2C_Master_Read 0F96            _I2C_Master_Wait 0F17  
          _I2C_Master_Stop 0F04            ___lwdiv@divisor 0073            ___lwdiv@counter 0020  
                 __ptext10 06CC                   __ptext11 07DF                   __ptext20 0F24  
                 __ptext12 04F5                   __ptext13 0F0D                   __ptext14 0F04  
                 __ptext15 0EFB                   __ptext16 0F96                   __ptext17 0F17  
                 __ptext18 0FC6                   __ptext19 0664              ?_LcdSetCursor 0020  
                 _contador 0037              __size_of_main 0347              __size_of_itoa 0026  
            __size_of_step 00C7              __size_of_utoa 0072            LcdWriteString@i 0025  
                step@i_296 0022                  step@steps 0024              ?_LcdWriteChar 0070  
 __end_of_I2C_Master_Start 0F04   __end_of_I2C_Master_Write 0F17                 _INTCONbits 000B  
                 itoa@base 002E              _portbAnterior 0079             ??_LcdSetCursor 0021  
                 intlevel1 0000           ___lwmod@dividend 0075           ___lldiv@dividend 0024  
                stringcode 044D    __end_of_I2C_Master_Init 1000    __end_of_I2C_Master_Read 0FC6  
  __end_of_I2C_Master_Wait 0F24    __end_of_I2C_Master_Stop 0F0D                   utoa@base 0025  
           ??_LcdWriteChar 0075           ___lldiv@quotient 0028          I2C_Master_Write@d 0073  
          ___lwmod@divisor 0073            ___lwmod@counter 0020                   stringdir 044D  
                 stringtab 0443                _SSPCON2bits 0091                _portbActual 0078  
      LcdWriteString@value 0020  
