

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Sep 03 10:30:40 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	strings,global,class=STRING,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	intentry,global,class=CODE,delta=2
    39                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    40                           	dabs	1,0x7E,2
    41  0000                     
    42                           ; Version 2.20
    43                           ; Generated 12/02/2020 GMT
    44                           ; 
    45                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC16F887 Definitions
    74                           ; 
    75                           ; SFR Addresses
    76  0000                     	;# 
    77  0001                     	;# 
    78  0002                     	;# 
    79  0003                     	;# 
    80  0004                     	;# 
    81  0005                     	;# 
    82  0006                     	;# 
    83  0007                     	;# 
    84  0008                     	;# 
    85  0009                     	;# 
    86  000A                     	;# 
    87  000B                     	;# 
    88  000C                     	;# 
    89  000D                     	;# 
    90  000E                     	;# 
    91  000E                     	;# 
    92  000F                     	;# 
    93  0010                     	;# 
    94  0011                     	;# 
    95  0012                     	;# 
    96  0013                     	;# 
    97  0014                     	;# 
    98  0015                     	;# 
    99  0015                     	;# 
   100  0016                     	;# 
   101  0017                     	;# 
   102  0018                     	;# 
   103  0019                     	;# 
   104  001A                     	;# 
   105  001B                     	;# 
   106  001B                     	;# 
   107  001C                     	;# 
   108  001D                     	;# 
   109  001E                     	;# 
   110  001F                     	;# 
   111  0081                     	;# 
   112  0085                     	;# 
   113  0086                     	;# 
   114  0087                     	;# 
   115  0088                     	;# 
   116  0089                     	;# 
   117  008C                     	;# 
   118  008D                     	;# 
   119  008E                     	;# 
   120  008F                     	;# 
   121  0090                     	;# 
   122  0091                     	;# 
   123  0092                     	;# 
   124  0093                     	;# 
   125  0093                     	;# 
   126  0093                     	;# 
   127  0094                     	;# 
   128  0095                     	;# 
   129  0096                     	;# 
   130  0097                     	;# 
   131  0098                     	;# 
   132  0099                     	;# 
   133  009A                     	;# 
   134  009B                     	;# 
   135  009C                     	;# 
   136  009D                     	;# 
   137  009E                     	;# 
   138  009F                     	;# 
   139  0105                     	;# 
   140  0107                     	;# 
   141  0108                     	;# 
   142  0109                     	;# 
   143  010C                     	;# 
   144  010C                     	;# 
   145  010D                     	;# 
   146  010E                     	;# 
   147  010F                     	;# 
   148  0185                     	;# 
   149  0187                     	;# 
   150  0188                     	;# 
   151  0189                     	;# 
   152  018C                     	;# 
   153  018D                     	;# 
   154  0000                     	;# 
   155  0001                     	;# 
   156  0002                     	;# 
   157  0003                     	;# 
   158  0004                     	;# 
   159  0005                     	;# 
   160  0006                     	;# 
   161  0007                     	;# 
   162  0008                     	;# 
   163  0009                     	;# 
   164  000A                     	;# 
   165  000B                     	;# 
   166  000C                     	;# 
   167  000D                     	;# 
   168  000E                     	;# 
   169  000E                     	;# 
   170  000F                     	;# 
   171  0010                     	;# 
   172  0011                     	;# 
   173  0012                     	;# 
   174  0013                     	;# 
   175  0014                     	;# 
   176  0015                     	;# 
   177  0015                     	;# 
   178  0016                     	;# 
   179  0017                     	;# 
   180  0018                     	;# 
   181  0019                     	;# 
   182  001A                     	;# 
   183  001B                     	;# 
   184  001B                     	;# 
   185  001C                     	;# 
   186  001D                     	;# 
   187  001E                     	;# 
   188  001F                     	;# 
   189  0081                     	;# 
   190  0085                     	;# 
   191  0086                     	;# 
   192  0087                     	;# 
   193  0088                     	;# 
   194  0089                     	;# 
   195  008C                     	;# 
   196  008D                     	;# 
   197  008E                     	;# 
   198  008F                     	;# 
   199  0090                     	;# 
   200  0091                     	;# 
   201  0092                     	;# 
   202  0093                     	;# 
   203  0093                     	;# 
   204  0093                     	;# 
   205  0094                     	;# 
   206  0095                     	;# 
   207  0096                     	;# 
   208  0097                     	;# 
   209  0098                     	;# 
   210  0099                     	;# 
   211  009A                     	;# 
   212  009B                     	;# 
   213  009C                     	;# 
   214  009D                     	;# 
   215  009E                     	;# 
   216  009F                     	;# 
   217  0105                     	;# 
   218  0107                     	;# 
   219  0108                     	;# 
   220  0109                     	;# 
   221  010C                     	;# 
   222  010C                     	;# 
   223  010D                     	;# 
   224  010E                     	;# 
   225  010F                     	;# 
   226  0185                     	;# 
   227  0187                     	;# 
   228  0188                     	;# 
   229  0189                     	;# 
   230  018C                     	;# 
   231  018D                     	;# 
   232  0000                     	;# 
   233  0001                     	;# 
   234  0002                     	;# 
   235  0003                     	;# 
   236  0004                     	;# 
   237  0005                     	;# 
   238  0006                     	;# 
   239  0007                     	;# 
   240  0008                     	;# 
   241  0009                     	;# 
   242  000A                     	;# 
   243  000B                     	;# 
   244  000C                     	;# 
   245  000D                     	;# 
   246  000E                     	;# 
   247  000E                     	;# 
   248  000F                     	;# 
   249  0010                     	;# 
   250  0011                     	;# 
   251  0012                     	;# 
   252  0013                     	;# 
   253  0014                     	;# 
   254  0015                     	;# 
   255  0015                     	;# 
   256  0016                     	;# 
   257  0017                     	;# 
   258  0018                     	;# 
   259  0019                     	;# 
   260  001A                     	;# 
   261  001B                     	;# 
   262  001B                     	;# 
   263  001C                     	;# 
   264  001D                     	;# 
   265  001E                     	;# 
   266  001F                     	;# 
   267  0081                     	;# 
   268  0085                     	;# 
   269  0086                     	;# 
   270  0087                     	;# 
   271  0088                     	;# 
   272  0089                     	;# 
   273  008C                     	;# 
   274  008D                     	;# 
   275  008E                     	;# 
   276  008F                     	;# 
   277  0090                     	;# 
   278  0091                     	;# 
   279  0092                     	;# 
   280  0093                     	;# 
   281  0093                     	;# 
   282  0093                     	;# 
   283  0094                     	;# 
   284  0095                     	;# 
   285  0096                     	;# 
   286  0097                     	;# 
   287  0098                     	;# 
   288  0099                     	;# 
   289  009A                     	;# 
   290  009B                     	;# 
   291  009C                     	;# 
   292  009D                     	;# 
   293  009E                     	;# 
   294  009F                     	;# 
   295  0105                     	;# 
   296  0107                     	;# 
   297  0108                     	;# 
   298  0109                     	;# 
   299  010C                     	;# 
   300  010C                     	;# 
   301  010D                     	;# 
   302  010E                     	;# 
   303  010F                     	;# 
   304  0185                     	;# 
   305  0187                     	;# 
   306  0188                     	;# 
   307  0189                     	;# 
   308  018C                     	;# 
   309  018D                     	;# 
   310  0000                     	;# 
   311  0001                     	;# 
   312  0002                     	;# 
   313  0003                     	;# 
   314  0004                     	;# 
   315  0005                     	;# 
   316  0006                     	;# 
   317  0007                     	;# 
   318  0008                     	;# 
   319  0009                     	;# 
   320  000A                     	;# 
   321  000B                     	;# 
   322  000C                     	;# 
   323  000D                     	;# 
   324  000E                     	;# 
   325  000E                     	;# 
   326  000F                     	;# 
   327  0010                     	;# 
   328  0011                     	;# 
   329  0012                     	;# 
   330  0013                     	;# 
   331  0014                     	;# 
   332  0015                     	;# 
   333  0015                     	;# 
   334  0016                     	;# 
   335  0017                     	;# 
   336  0018                     	;# 
   337  0019                     	;# 
   338  001A                     	;# 
   339  001B                     	;# 
   340  001B                     	;# 
   341  001C                     	;# 
   342  001D                     	;# 
   343  001E                     	;# 
   344  001F                     	;# 
   345  0081                     	;# 
   346  0085                     	;# 
   347  0086                     	;# 
   348  0087                     	;# 
   349  0088                     	;# 
   350  0089                     	;# 
   351  008C                     	;# 
   352  008D                     	;# 
   353  008E                     	;# 
   354  008F                     	;# 
   355  0090                     	;# 
   356  0091                     	;# 
   357  0092                     	;# 
   358  0093                     	;# 
   359  0093                     	;# 
   360  0093                     	;# 
   361  0094                     	;# 
   362  0095                     	;# 
   363  0096                     	;# 
   364  0097                     	;# 
   365  0098                     	;# 
   366  0099                     	;# 
   367  009A                     	;# 
   368  009B                     	;# 
   369  009C                     	;# 
   370  009D                     	;# 
   371  009E                     	;# 
   372  009F                     	;# 
   373  0105                     	;# 
   374  0107                     	;# 
   375  0108                     	;# 
   376  0109                     	;# 
   377  010C                     	;# 
   378  010C                     	;# 
   379  010D                     	;# 
   380  010E                     	;# 
   381  010F                     	;# 
   382  0185                     	;# 
   383  0187                     	;# 
   384  0188                     	;# 
   385  0189                     	;# 
   386  018C                     	;# 
   387  018D                     	;# 
   388  0000                     	;# 
   389  0001                     	;# 
   390  0002                     	;# 
   391  0003                     	;# 
   392  0004                     	;# 
   393  0005                     	;# 
   394  0006                     	;# 
   395  0007                     	;# 
   396  0008                     	;# 
   397  0009                     	;# 
   398  000A                     	;# 
   399  000B                     	;# 
   400  000C                     	;# 
   401  000D                     	;# 
   402  000E                     	;# 
   403  000E                     	;# 
   404  000F                     	;# 
   405  0010                     	;# 
   406  0011                     	;# 
   407  0012                     	;# 
   408  0013                     	;# 
   409  0014                     	;# 
   410  0015                     	;# 
   411  0015                     	;# 
   412  0016                     	;# 
   413  0017                     	;# 
   414  0018                     	;# 
   415  0019                     	;# 
   416  001A                     	;# 
   417  001B                     	;# 
   418  001B                     	;# 
   419  001C                     	;# 
   420  001D                     	;# 
   421  001E                     	;# 
   422  001F                     	;# 
   423  0081                     	;# 
   424  0085                     	;# 
   425  0086                     	;# 
   426  0087                     	;# 
   427  0088                     	;# 
   428  0089                     	;# 
   429  008C                     	;# 
   430  008D                     	;# 
   431  008E                     	;# 
   432  008F                     	;# 
   433  0090                     	;# 
   434  0091                     	;# 
   435  0092                     	;# 
   436  0093                     	;# 
   437  0093                     	;# 
   438  0093                     	;# 
   439  0094                     	;# 
   440  0095                     	;# 
   441  0096                     	;# 
   442  0097                     	;# 
   443  0098                     	;# 
   444  0099                     	;# 
   445  009A                     	;# 
   446  009B                     	;# 
   447  009C                     	;# 
   448  009D                     	;# 
   449  009E                     	;# 
   450  009F                     	;# 
   451  0105                     	;# 
   452  0107                     	;# 
   453  0108                     	;# 
   454  0109                     	;# 
   455  010C                     	;# 
   456  010C                     	;# 
   457  010D                     	;# 
   458  010E                     	;# 
   459  010F                     	;# 
   460  0185                     	;# 
   461  0187                     	;# 
   462  0188                     	;# 
   463  0189                     	;# 
   464  018C                     	;# 
   465  018D                     	;# 
   466                           
   467                           	psect	idataCOMMON
   468  07FC                     __pidataCOMMON:
   469                           
   470                           ;initializer for _portbActual
   471  07FC  341F               	retlw	31
   472                           
   473                           ;initializer for _portbAnterior
   474  07FD  341F               	retlw	31
   475                           
   476                           	psect	idataBANK0
   477  07FE                     __pidataBANK0:
   478                           
   479                           ;initializer for _umbralHum
   480  07FE  3428               	retlw	40
   481                           
   482                           ;initializer for _umbralTemp
   483  07FF  3428               	retlw	40
   484  001A                     _RCREG	set	26
   485  0019                     _TXREG	set	25
   486  0018                     _RCSTAbits	set	24
   487  0013                     _SSPBUF	set	19
   488  0014                     _SSPCON	set	20
   489  0006                     _PORTB	set	6
   490  000B                     _INTCONbits	set	11
   491  0012                     _T2CONbits	set	18
   492  0005                     _PORTA	set	5
   493  000C                     _PIR1bits	set	12
   494  0048                     _RE0	set	72
   495  004A                     _RE2	set	74
   496  0047                     _RD7	set	71
   497  0046                     _RD6	set	70
   498  0045                     _RD5	set	69
   499  0044                     _RD4	set	68
   500  0043                     _RD3	set	67
   501  0042                     _RD2	set	66
   502  0041                     _RD1	set	65
   503  0040                     _RD0	set	64
   504  0063                     _SSPIF	set	99
   505  005E                     _PEIE	set	94
   506  005F                     _GIE	set	95
   507  0098                     _TXSTAbits	set	152
   508  0099                     _SPBRG	set	153
   509  0091                     _SSPCON2bits	set	145
   510  0087                     _TRISCbits	set	135
   511  0094                     _SSPSTAT	set	148
   512  0093                     _SSPADD	set	147
   513  0091                     _SSPCON2	set	145
   514  008C                     _PIE1bits	set	140
   515  0092                     _PR2	set	146
   516  0085                     _TRISA	set	133
   517  0081                     _OPTION_REGbits	set	129
   518  0086                     _TRISB	set	134
   519  0089                     _TRISE	set	137
   520  0088                     _TRISD	set	136
   521  0463                     _SSPIE	set	1123
   522  043C                     _TRISC4	set	1084
   523  043B                     _TRISC3	set	1083
   524  0189                     _ANSELH	set	393
   525  0188                     _ANSEL	set	392
   526                           
   527                           	psect	strings
   528  0500                     __pstrings:
   529  0500                     stringtab:
   530  0500                     __stringtab:
   531                           
   532                           ;	String table - string pointers are 1 byte each
   533  0500  1BFF               	btfsc	btemp+1,7
   534  0501  2D0A               	ljmp	stringcode
   535  0502  1383               	bcf	3,7
   536  0503  187F               	btfsc	btemp+1,0
   537  0504  1783               	bsf	3,7
   538  0505  0800               	movf	0,w
   539  0506  0A84               	incf	4,f
   540  0507  1903               	skipnz
   541  0508  0AFF               	incf	btemp+1,f
   542  0509  0008               	return
   543  050A                     stringcode:
   544  050A                     stringdir:
   545  050A  3005               	movlw	high stringdir
   546  050B  008A               	movwf	10
   547  050C  0804               	movf	4,w
   548  050D  0A84               	incf	4,f
   549  050E  0782               	addwf	2,f
   550  050F                     __stringbase:
   551  050F  3400               	retlw	0
   552  0510                     __end_of__stringtab:
   553  0510                     STR_12:
   554  0510  3425               	retlw	37	;'%'
   555  0511  3420               	retlw	32	;' '
   556  0512  3420               	retlw	32	;' '
   557  0513  3420               	retlw	32	;' '
   558  0514  3420               	retlw	32	;' '
   559  0515  3420               	retlw	32	;' '
   560  0516  3420               	retlw	32	;' '
   561  0517  3420               	retlw	32	;' '
   562  0518  3420               	retlw	32	;' '
   563  0519  3420               	retlw	32	;' '
   564  051A  3420               	retlw	32	;' '
   565  051B  3420               	retlw	32	;' '
   566  051C  3420               	retlw	32	;' '
   567  051D  3420               	retlw	32	;' '
   568  051E  3420               	retlw	32	;' '
   569  051F  3420               	retlw	32	;' '
   570  0520  3420               	retlw	32	;' '
   571  0521  3420               	retlw	32	;' '
   572  0522  3420               	retlw	32	;' '
   573  0523  3420               	retlw	32	;' '
   574  0524  3420               	retlw	32	;' '
   575  0525  3420               	retlw	32	;' '
   576  0526  3420               	retlw	32	;' '
   577  0527  3400               	retlw	0
   578  0528                     STR_15:
   579  0528  3443               	retlw	67	;'C'
   580  0529  3420               	retlw	32	;' '
   581  052A  3420               	retlw	32	;' '
   582  052B  3420               	retlw	32	;' '
   583  052C  3420               	retlw	32	;' '
   584  052D  3420               	retlw	32	;' '
   585  052E  3420               	retlw	32	;' '
   586  052F  3420               	retlw	32	;' '
   587  0530  3420               	retlw	32	;' '
   588  0531  3420               	retlw	32	;' '
   589  0532  3420               	retlw	32	;' '
   590  0533  3420               	retlw	32	;' '
   591  0534  3420               	retlw	32	;' '
   592  0535  3420               	retlw	32	;' '
   593  0536  3420               	retlw	32	;' '
   594  0537  3420               	retlw	32	;' '
   595  0538  3420               	retlw	32	;' '
   596  0539  3420               	retlw	32	;' '
   597  053A  3420               	retlw	32	;' '
   598  053B  3420               	retlw	32	;' '
   599  053C  3400               	retlw	0
   600  053D                     STR_10:
   601  053D  3420               	retlw	32	;' '
   602  053E  3420               	retlw	32	;' '
   603  053F  3448               	retlw	72	;'H'
   604  0540  3475               	retlw	117	;'u'
   605  0541  346D               	retlw	109	;'m'
   606  0542  342E               	retlw	46	;'.'
   607  0543  3420               	retlw	32	;' '
   608  0544  346D               	retlw	109	;'m'
   609  0545  3469               	retlw	105	;'i'
   610  0546  346E               	retlw	110	;'n'
   611  0547  3469               	retlw	105	;'i'
   612  0548  346D               	retlw	109	;'m'
   613  0549  3461               	retlw	97	;'a'
   614  054A  343A               	retlw	58	;':'
   615  054B  3420               	retlw	32	;' '
   616  054C  3420               	retlw	32	;' '
   617  054D  3400               	retlw	0
   618  054E                     STR_13:
   619  054E  3420               	retlw	32	;' '
   620  054F  3420               	retlw	32	;' '
   621  0550  3454               	retlw	84	;'T'
   622  0551  3465               	retlw	101	;'e'
   623  0552  346D               	retlw	109	;'m'
   624  0553  3470               	retlw	112	;'p'
   625  0554  342E               	retlw	46	;'.'
   626  0555  3420               	retlw	32	;' '
   627  0556  344D               	retlw	77	;'M'
   628  0557  3461               	retlw	97	;'a'
   629  0558  3478               	retlw	120	;'x'
   630  0559  3469               	retlw	105	;'i'
   631  055A  346D               	retlw	109	;'m'
   632  055B  3461               	retlw	97	;'a'
   633  055C  343A               	retlw	58	;':'
   634  055D  3420               	retlw	32	;' '
   635  055E  3400               	retlw	0
   636  055F                     STR_7:
   637  055F  3420               	retlw	32	;' '
   638  0560  3453               	retlw	83	;'S'
   639  0561  3465               	retlw	101	;'e'
   640  0562  346C               	retlw	108	;'l'
   641  0563  3465               	retlw	101	;'e'
   642  0564  3463               	retlw	99	;'c'
   643  0565  342E               	retlw	46	;'.'
   644  0566  3420               	retlw	32	;' '
   645  0567  346F               	retlw	111	;'o'
   646  0568  3470               	retlw	112	;'p'
   647  0569  3463               	retlw	99	;'c'
   648  056A  3469               	retlw	105	;'i'
   649  056B  346F               	retlw	111	;'o'
   650  056C  346E               	retlw	110	;'n'
   651  056D  343A               	retlw	58	;':'
   652  056E  3420               	retlw	32	;' '
   653  056F  3400               	retlw	0
   654  0570                     STR_1:
   655  0570  3448               	retlw	72	;'H'
   656  0571  3461               	retlw	97	;'a'
   657  0572  346C               	retlw	108	;'l'
   658  0573  346C               	retlw	108	;'l'
   659  0574  343A               	retlw	58	;':'
   660  0575  3420               	retlw	32	;' '
   661  0576  3454               	retlw	84	;'T'
   662  0577  3465               	retlw	101	;'e'
   663  0578  346D               	retlw	109	;'m'
   664  0579  3470               	retlw	112	;'p'
   665  057A  343A               	retlw	58	;':'
   666  057B  3420               	retlw	32	;' '
   667  057C  3448               	retlw	72	;'H'
   668  057D  3475               	retlw	117	;'u'
   669  057E  346D               	retlw	109	;'m'
   670  057F  343A               	retlw	58	;':'
   671  0580  3400               	retlw	0
   672  0581                     STR_9:
   673  0581  343E               	retlw	62	;'>'
   674  0582  3454               	retlw	84	;'T'
   675  0583  3465               	retlw	101	;'e'
   676  0584  346D               	retlw	109	;'m'
   677  0585  3470               	retlw	112	;'p'
   678  0586  3420               	retlw	32	;' '
   679  0587  3420               	retlw	32	;' '
   680  0588  3420               	retlw	32	;' '
   681  0589  3468               	retlw	104	;'h'
   682  058A  3475               	retlw	117	;'u'
   683  058B  346D               	retlw	109	;'m'
   684  058C  3465               	retlw	101	;'e'
   685  058D  3464               	retlw	100	;'d'
   686  058E  3461               	retlw	97	;'a'
   687  058F  3464               	retlw	100	;'d'
   688  0590  3400               	retlw	0
   689  0591                     STR_8:
   690  0591  3420               	retlw	32	;' '
   691  0592  3454               	retlw	84	;'T'
   692  0593  3465               	retlw	101	;'e'
   693  0594  346D               	retlw	109	;'m'
   694  0595  3470               	retlw	112	;'p'
   695  0596  3420               	retlw	32	;' '
   696  0597  3420               	retlw	32	;' '
   697  0598  343E               	retlw	62	;'>'
   698  0599  3468               	retlw	104	;'h'
   699  059A  3475               	retlw	117	;'u'
   700  059B  346D               	retlw	109	;'m'
   701  059C  3465               	retlw	101	;'e'
   702  059D  3464               	retlw	100	;'d'
   703  059E  3461               	retlw	97	;'a'
   704  059F  3464               	retlw	100	;'d'
   705  05A0  3400               	retlw	0
   706  05A1                     STR_2:
   707  05A1  3463               	retlw	99	;'c'
   708  05A2  346C               	retlw	108	;'l'
   709  05A3  346F               	retlw	111	;'o'
   710  05A4  3473               	retlw	115	;'s'
   711  05A5  3465               	retlw	101	;'e'
   712  05A6  3420               	retlw	32	;' '
   713  05A7  3400               	retlw	0
   714  05A8                     STR_4:
   715  05A8  346F               	retlw	111	;'o'
   716  05A9  3470               	retlw	112	;'p'
   717  05AA  3465               	retlw	101	;'e'
   718  05AB  346E               	retlw	110	;'n'
   719  05AC  3420               	retlw	32	;' '
   720  05AD  3400               	retlw	0
   721  05AE                     STR_6:
   722  05AE  3420               	retlw	32	;' '
   723  05AF  344E               	retlw	78	;'N'
   724  05B0  342E               	retlw	46	;'.'
   725  05B1  3441               	retlw	65	;'A'
   726  05B2  3400               	retlw	0
   727  05B3                     STR_3:
   728  05B3  3430               	retlw	48	;'0'
   729  05B4  342C               	retlw	44	;','
   730  05B5  3400               	retlw	0
   731  05B6                     STR_5:
   732  05B6  3431               	retlw	49	;'1'
   733  05B7  342C               	retlw	44	;','
   734  05B8  3400               	retlw	0
   735  0525                     
   736                           	psect	cinit
   737  000F                     start_initialization:	
   738                           ; #config settings
   739                           
   740  000F                     __initialization:
   741                           
   742                           ; Initialize objects allocated to BANK0
   743  000F  120A  118A  27FE  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   744  0014  00C9               	movwf	__pdataBANK0& (0+127)
   745  0015  120A  118A  27FF  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   746  001A  00CA               	movwf	(__pdataBANK0+1)& (0+127)
   747                           
   748                           ; Initialize objects allocated to COMMON
   749  001B  120A  118A  27FC  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   750  0020  00F8               	movwf	__pdataCOMMON& (0+127)
   751  0021  120A  118A  27FD  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   752  0026  00F9               	movwf	(__pdataCOMMON+1)& (0+127)
   753                           
   754                           ; Clear objects allocated to BANK0
   755  0027  1383               	bcf	3,7	;select IRP bank0
   756  0028  3036               	movlw	low __pbssBANK0
   757  0029  0084               	movwf	4
   758  002A  3049               	movlw	low (__pbssBANK0+19)
   759  002B  120A  158A  2634  120A  118A  	fcall	clear_ram0
   760                           
   761                           ; Clear objects allocated to COMMON
   762  0030  01FA               	clrf	__pbssCOMMON& (0+127)
   763  0031                     end_of_initialization:	
   764                           ;End of C runtime variable initialization code
   765                           
   766  0031                     __end_of__initialization:
   767  0031  0183               	clrf	3
   768  0032  120A  118A  2835   	ljmp	_main	;jump to C main() function
   769                           
   770                           	psect	bssCOMMON
   771  007A                     __pbssCOMMON:
   772  007A                     _hall:
   773  007A                     	ds	1
   774                           
   775                           	psect	dataCOMMON
   776  0078                     __pdataCOMMON:
   777  0078                     _portbActual:
   778  0078                     	ds	1
   779  0079                     _portbAnterior:
   780  0079                     	ds	1
   781                           
   782                           	psect	bssBANK0
   783  0036                     __pbssBANK0:
   784  0036                     _direccion:
   785  0036                     	ds	1
   786  0037                     _contador:
   787  0037                     	ds	1
   788  0038                     _ok:
   789  0038                     	ds	1
   790  0039                     _decrementar:
   791  0039                     	ds	1
   792  003A                     _incrementar:
   793  003A                     	ds	1
   794  003B                     _opcion:
   795  003B                     	ds	1
   796  003C                     _menu:
   797  003C                     	ds	1
   798  003D                     _hum:
   799  003D                     	ds	1
   800  003E                     _temp:
   801  003E                     	ds	1
   802  003F                     _numero:
   803  003F                     	ds	10
   804                           
   805                           	psect	dataBANK0
   806  0049                     __pdataBANK0:
   807  0049                     _umbralHum:
   808  0049                     	ds	1
   809  004A                     _umbralTemp:
   810  004A                     	ds	1
   811                           
   812                           	psect	clrtext
   813  0E34                     clear_ram0:	
   814                           ;	Called with FSR containing the base address, and
   815                           ;	W with the last address+1
   816                           
   817  0E34  0064               	clrwdt	;clear the watchdog before getting into this loop
   818  0E35                     clrloop0:
   819  0E35  0180               	clrf	0	;clear RAM location pointed to by FSR
   820  0E36  0A84               	incf	4,f	;increment pointer
   821  0E37  0604               	xorwf	4,w	;XOR with final address
   822  0E38  1903               	btfsc	3,2	;have we reached the end yet?
   823  0E39  3400               	retlw	0	;all done for this memory range, return
   824  0E3A  0604               	xorwf	4,w	;XOR again to restore value
   825  0E3B  2E35               	goto	clrloop0	;do the next byte
   826                           
   827                           	psect	cstackCOMMON
   828  0070                     __pcstackCOMMON:
   829  0070                     ?_LcdInit:
   830  0070                     ?_I2C_Master_Start:	
   831                           ; 1 bytes @ 0x0
   832                           
   833  0070                     ?_I2C_Master_Stop:	
   834                           ; 1 bytes @ 0x0
   835                           
   836  0070                     ?_LcdWriteChar:	
   837                           ; 1 bytes @ 0x0
   838                           
   839  0070                     ?_UARTSendChar:	
   840                           ; 1 bytes @ 0x0
   841                           
   842  0070                     ?_ISR:	
   843                           ; 1 bytes @ 0x0
   844                           
   845  0070                     ??_ISR:	
   846                           ; 1 bytes @ 0x0
   847                           
   848  0070                     ?_main:	
   849                           ; 1 bytes @ 0x0
   850                           
   851  0070                     ?_I2C_Master_Wait:	
   852                           ; 1 bytes @ 0x0
   853                           
   854  0070                     ?_LcdPort:	
   855                           ; 1 bytes @ 0x0
   856                           
   857  0070                     ?_LcdCmd:	
   858                           ; 1 bytes @ 0x0
   859                           
   860                           
   861                           ; 1 bytes @ 0x0
   862  0070                     	ds	3
   863  0073                     ?_step:
   864  0073                     ??_I2C_Master_Start:	
   865                           ; 1 bytes @ 0x3
   866                           
   867  0073                     ?_I2C_Master_Write:	
   868                           ; 1 bytes @ 0x3
   869                           
   870  0073                     ??_I2C_Master_Stop:	
   871                           ; 1 bytes @ 0x3
   872                           
   873  0073                     ??_UARTSendChar:	
   874                           ; 1 bytes @ 0x3
   875                           
   876  0073                     ??_I2C_Master_Wait:	
   877                           ; 1 bytes @ 0x3
   878                           
   879  0073                     ??_LcdPort:	
   880                           ; 1 bytes @ 0x3
   881                           
   882  0073                     ??___lldiv:	
   883                           ; 1 bytes @ 0x3
   884                           
   885  0073                     ?_I2C_Master_Read:	
   886                           ; 1 bytes @ 0x3
   887                           
   888  0073                     ?___lwdiv:	
   889                           ; 2 bytes @ 0x3
   890                           
   891  0073                     ?___lwmod:	
   892                           ; 2 bytes @ 0x3
   893                           
   894  0073                     step@dir:	
   895                           ; 2 bytes @ 0x3
   896                           
   897  0073                     UARTSendChar@c:	
   898                           ; 1 bytes @ 0x3
   899                           
   900  0073                     I2C_Master_Write@d:	
   901                           ; 1 bytes @ 0x3
   902                           
   903  0073                     I2C_Master_Read@a:	
   904                           ; 2 bytes @ 0x3
   905                           
   906  0073                     ___lwdiv@divisor:	
   907                           ; 2 bytes @ 0x3
   908                           
   909  0073                     ___lwmod@divisor:	
   910                           ; 2 bytes @ 0x3
   911                           
   912                           
   913                           ; 2 bytes @ 0x3
   914  0073                     	ds	1
   915  0074                     ??_UARTInit:
   916  0074                     ??_I2C_Master_Init:	
   917                           ; 1 bytes @ 0x4
   918                           
   919  0074                     ??_step:	
   920                           ; 1 bytes @ 0x4
   921                           
   922  0074                     ?_UARTSendString:	
   923                           ; 1 bytes @ 0x4
   924                           
   925  0074                     LcdPort@value:	
   926                           ; 1 bytes @ 0x4
   927                           
   928  0074                     UARTSendString@str:	
   929                           ; 1 bytes @ 0x4
   930                           
   931                           
   932                           ; 2 bytes @ 0x4
   933  0074                     	ds	1
   934  0075                     ??_I2C_Master_Write:
   935  0075                     ??_I2C_Master_Read:	
   936                           ; 1 bytes @ 0x5
   937                           
   938  0075                     ??_LcdWriteChar:	
   939                           ; 1 bytes @ 0x5
   940                           
   941  0075                     ??_LcdCmd:	
   942                           ; 1 bytes @ 0x5
   943                           
   944  0075                     ___lwdiv@dividend:	
   945                           ; 1 bytes @ 0x5
   946                           
   947  0075                     ___lwmod@dividend:	
   948                           ; 2 bytes @ 0x5
   949                           
   950                           
   951                           ; 2 bytes @ 0x5
   952  0075                     	ds	1
   953  0076                     LcdWriteChar@value:
   954  0076                     UARTSendString@max_length:	
   955                           ; 1 bytes @ 0x6
   956                           
   957                           
   958                           ; 1 bytes @ 0x6
   959  0076                     	ds	1
   960  0077                     ??___lwdiv:
   961  0077                     ??___lwmod:	
   962                           ; 1 bytes @ 0x7
   963                           
   964  0077                     LcdCmd@value:	
   965                           ; 1 bytes @ 0x7
   966                           
   967                           
   968                           ; 1 bytes @ 0x7
   969  0077                     	ds	1
   970                           
   971                           	psect	cstackBANK0
   972  0020                     __pcstackBANK0:
   973  0020                     ??_LcdInit:
   974  0020                     ?_LcdSetCursor:	
   975                           ; 1 bytes @ 0x0
   976                           
   977  0020                     ?_LcdWriteString:	
   978                           ; 1 bytes @ 0x0
   979                           
   980  0020                     ??_UARTSendString:	
   981                           ; 1 bytes @ 0x0
   982                           
   983  0020                     ?___lldiv:	
   984                           ; 1 bytes @ 0x0
   985                           
   986  0020                     LcdSetCursor@column:	
   987                           ; 4 bytes @ 0x0
   988                           
   989  0020                     ___lwdiv@counter:	
   990                           ; 1 bytes @ 0x0
   991                           
   992  0020                     ___lwmod@counter:	
   993                           ; 1 bytes @ 0x0
   994                           
   995  0020                     step@i:	
   996                           ; 1 bytes @ 0x0
   997                           
   998  0020                     I2C_Master_Read@temp:	
   999                           ; 2 bytes @ 0x0
  1000                           
  1001  0020                     LcdWriteString@value:	
  1002                           ; 2 bytes @ 0x0
  1003                           
  1004  0020                     ___lldiv@divisor:	
  1005                           ; 2 bytes @ 0x0
  1006                           
  1007                           
  1008                           ; 4 bytes @ 0x0
  1009  0020                     	ds	1
  1010  0021                     ??_LcdSetCursor:
  1011  0021                     ___lwdiv@quotient:	
  1012                           ; 1 bytes @ 0x1
  1013                           
  1014                           
  1015                           ; 2 bytes @ 0x1
  1016  0021                     	ds	1
  1017  0022                     ??_LcdWriteString:
  1018  0022                     step@i_309:	
  1019                           ; 1 bytes @ 0x2
  1020                           
  1021                           
  1022                           ; 2 bytes @ 0x2
  1023  0022                     	ds	1
  1024  0023                     ?_utoa:
  1025  0023                     LcdSetCursor@row:	
  1026                           ; 1 bytes @ 0x3
  1027                           
  1028  0023                     UARTSendString@i:	
  1029                           ; 1 bytes @ 0x3
  1030                           
  1031  0023                     utoa@val:	
  1032                           ; 2 bytes @ 0x3
  1033                           
  1034                           
  1035                           ; 2 bytes @ 0x3
  1036  0023                     	ds	1
  1037  0024                     step@steps:
  1038  0024                     ___lldiv@dividend:	
  1039                           ; 1 bytes @ 0x4
  1040                           
  1041                           
  1042                           ; 4 bytes @ 0x4
  1043  0024                     	ds	1
  1044  0025                     LcdWriteString@i:
  1045  0025                     utoa@base:	
  1046                           ; 2 bytes @ 0x5
  1047                           
  1048                           
  1049                           ; 2 bytes @ 0x5
  1050  0025                     	ds	2
  1051  0027                     ??_utoa:
  1052                           
  1053                           ; 1 bytes @ 0x7
  1054  0027                     	ds	1
  1055  0028                     utoa@v:
  1056  0028                     ___lldiv@quotient:	
  1057                           ; 2 bytes @ 0x8
  1058                           
  1059                           
  1060                           ; 4 bytes @ 0x8
  1061  0028                     	ds	2
  1062  002A                     utoa@c:
  1063                           
  1064                           ; 1 bytes @ 0xA
  1065  002A                     	ds	1
  1066  002B                     utoa@buf:
  1067                           
  1068                           ; 1 bytes @ 0xB
  1069  002B                     	ds	1
  1070  002C                     ?_itoa:
  1071  002C                     ___lldiv@counter:	
  1072                           ; 1 bytes @ 0xC
  1073                           
  1074  002C                     itoa@val:	
  1075                           ; 1 bytes @ 0xC
  1076                           
  1077                           
  1078                           ; 2 bytes @ 0xC
  1079  002C                     	ds	1
  1080  002D                     ?_UARTInit:
  1081  002D                     ?_I2C_Master_Init:	
  1082                           ; 1 bytes @ 0xD
  1083                           
  1084  002D                     I2C_Master_Init@c:	
  1085                           ; 1 bytes @ 0xD
  1086                           
  1087  002D                     UARTInit@baud_rate:	
  1088                           ; 4 bytes @ 0xD
  1089                           
  1090                           
  1091                           ; 4 bytes @ 0xD
  1092  002D                     	ds	1
  1093  002E                     itoa@base:
  1094                           
  1095                           ; 2 bytes @ 0xE
  1096  002E                     	ds	2
  1097  0030                     ??_itoa:
  1098                           
  1099                           ; 1 bytes @ 0x10
  1100  0030                     	ds	1
  1101  0031                     UARTInit@BRGH:
  1102                           
  1103                           ; 1 bytes @ 0x11
  1104  0031                     	ds	1
  1105  0032                     itoa@buf:
  1106                           
  1107                           ; 1 bytes @ 0x12
  1108  0032                     	ds	1
  1109  0033                     ??_main:
  1110                           
  1111                           ; 1 bytes @ 0x13
  1112  0033                     	ds	3
  1113                           
  1114                           	psect	maintext
  1115  0035                     __pmaintext:	
  1116 ;;
  1117 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1118 ;;
  1119 ;; *************** function _main *****************
  1120 ;; Defined at:
  1121 ;;		line 63 in file "MasterMain.c"
  1122 ;; Parameters:    Size  Location     Type
  1123 ;;		None
  1124 ;; Auto vars:     Size  Location     Type
  1125 ;;		None
  1126 ;; Return value:  Size  Location     Type
  1127 ;;                  1    wreg      void 
  1128 ;; Registers used:
  1129 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1130 ;; Tracked objects:
  1131 ;;		On entry : B00/0
  1132 ;;		On exit  : 0/0
  1133 ;;		Unchanged: 0/0
  1134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1135 ;;      Params:         0       0       0       0       0
  1136 ;;      Locals:         0       0       0       0       0
  1137 ;;      Temps:          0       3       0       0       0
  1138 ;;      Totals:         0       3       0       0       0
  1139 ;;Total ram usage:        3 bytes
  1140 ;; Hardware stack levels required when called:    4
  1141 ;; This function calls:
  1142 ;;		_I2C_Master_Init
  1143 ;;		_I2C_Master_Read
  1144 ;;		_I2C_Master_Start
  1145 ;;		_I2C_Master_Stop
  1146 ;;		_I2C_Master_Write
  1147 ;;		_LcdInit
  1148 ;;		_LcdSetCursor
  1149 ;;		_LcdWriteChar
  1150 ;;		_LcdWriteString
  1151 ;;		_UARTInit
  1152 ;;		_UARTSendChar
  1153 ;;		_UARTSendString
  1154 ;;		_itoa
  1155 ;;		_step
  1156 ;; This function is called by:
  1157 ;;		Startup code after reset
  1158 ;; This function uses a non-reentrant model
  1159 ;;
  1160                           
  1161                           
  1162                           ;psect for function _main
  1163  0035                     _main:
  1164  0035                     l2607:	
  1165                           ;incstack = 0
  1166                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1167                           
  1168                           
  1169                           ;MasterMain.c: 64:     ANSEL = 0;
  1170  0035  1683               	bsf	3,5	;RP0=1, select bank3
  1171  0036  1703               	bsf	3,6	;RP1=1, select bank3
  1172  0037  0188               	clrf	8	;volatile
  1173                           
  1174                           ;MasterMain.c: 65:     ANSELH = 0;
  1175  0038  0189               	clrf	9	;volatile
  1176                           
  1177                           ;MasterMain.c: 67:     TRISD = 0;
  1178  0039  1683               	bsf	3,5	;RP0=1, select bank1
  1179  003A  1303               	bcf	3,6	;RP1=0, select bank1
  1180  003B  0188               	clrf	8	;volatile
  1181                           
  1182                           ;MasterMain.c: 68:     TRISE = 0;
  1183  003C  0189               	clrf	9	;volatile
  1184  003D                     l2609:
  1185                           
  1186                           ;MasterMain.c: 69:     TRISB = 31;
  1187  003D  301F               	movlw	31
  1188  003E  0086               	movwf	6	;volatile
  1189  003F                     l2611:
  1190                           
  1191                           ;MasterMain.c: 70:     OPTION_REGbits.nRBPU= 0;
  1192  003F  1381               	bcf	1,7	;volatile
  1193  0040                     l2613:
  1194                           
  1195                           ;MasterMain.c: 71:     TRISA = 0;
  1196  0040  0185               	clrf	5	;volatile
  1197  0041                     l2615:
  1198                           
  1199                           ;MasterMain.c: 74:     PORTA = 0;
  1200  0041  1283               	bcf	3,5	;RP0=0, select bank0
  1201  0042  1303               	bcf	3,6	;RP1=0, select bank0
  1202  0043  0185               	clrf	5	;volatile
  1203  0044                     l2617:
  1204                           
  1205                           ;MasterMain.c: 75:     LcdInit();
  1206  0044  120A  118A  2497  120A  118A  	fcall	_LcdInit
  1207  0049                     l2619:
  1208                           
  1209                           ;MasterMain.c: 76:     UARTInit(19200,1);
  1210  0049  3000               	movlw	0
  1211  004A  1283               	bcf	3,5	;RP0=0, select bank0
  1212  004B  1303               	bcf	3,6	;RP1=0, select bank0
  1213  004C  00B0               	movwf	UARTInit@baud_rate+3
  1214  004D  3000               	movlw	0
  1215  004E  00AF               	movwf	UARTInit@baud_rate+2
  1216  004F  304B               	movlw	75
  1217  0050  00AE               	movwf	UARTInit@baud_rate+1
  1218  0051  3000               	movlw	0
  1219  0052  00AD               	movwf	UARTInit@baud_rate
  1220  0053  01B1               	clrf	UARTInit@BRGH
  1221  0054  0AB1               	incf	UARTInit@BRGH,f
  1222  0055  120A  118A  2643  120A  118A  	fcall	_UARTInit
  1223  005A                     l2621:
  1224                           
  1225                           ;MasterMain.c: 77:     I2C_Master_Init(100000);
  1226  005A  3000               	movlw	0
  1227  005B  1283               	bcf	3,5	;RP0=0, select bank0
  1228  005C  1303               	bcf	3,6	;RP1=0, select bank0
  1229  005D  00B0               	movwf	I2C_Master_Init@c+3
  1230  005E  3001               	movlw	1
  1231  005F  00AF               	movwf	I2C_Master_Init@c+2
  1232  0060  3086               	movlw	134
  1233  0061  00AE               	movwf	I2C_Master_Init@c+1
  1234  0062  30A0               	movlw	160
  1235  0063  00AD               	movwf	I2C_Master_Init@c
  1236  0064  120A  158A  26FE  120A  118A  	fcall	_I2C_Master_Init
  1237  0069                     l2623:
  1238                           
  1239                           ;MasterMain.c: 79:     PR2 =255;
  1240  0069  30FF               	movlw	255
  1241  006A  1683               	bsf	3,5	;RP0=1, select bank1
  1242  006B  1303               	bcf	3,6	;RP1=0, select bank1
  1243  006C  0092               	movwf	18	;volatile
  1244  006D                     l2625:
  1245                           
  1246                           ;MasterMain.c: 80:     T2CONbits.TOUTPS = 0b1111;
  1247  006D  3078               	movlw	120
  1248  006E  1283               	bcf	3,5	;RP0=0, select bank0
  1249  006F  1303               	bcf	3,6	;RP1=0, select bank0
  1250  0070  0492               	iorwf	18,f	;volatile
  1251  0071                     l2627:
  1252                           
  1253                           ;MasterMain.c: 81:     T2CONbits.T2CKPS = 3;
  1254  0071  3003               	movlw	3
  1255  0072  0492               	iorwf	18,f	;volatile
  1256  0073                     l2629:
  1257                           
  1258                           ;MasterMain.c: 82:     T2CONbits.TMR2ON = 1;
  1259  0073  1512               	bsf	18,2	;volatile
  1260  0074                     l2631:
  1261                           
  1262                           ;MasterMain.c: 85:     INTCONbits.GIE = 1;
  1263  0074  178B               	bsf	11,7	;volatile
  1264  0075                     l2633:
  1265                           
  1266                           ;MasterMain.c: 86:     INTCONbits.PEIE = 1;
  1267  0075  170B               	bsf	11,6	;volatile
  1268  0076                     l2635:
  1269                           
  1270                           ;MasterMain.c: 87:     PIE1bits.TMR2IE = 1;
  1271  0076  1683               	bsf	3,5	;RP0=1, select bank1
  1272  0077  1303               	bcf	3,6	;RP1=0, select bank1
  1273  0078  148C               	bsf	12,1	;volatile
  1274  0079                     l2637:
  1275                           
  1276                           ;MasterMain.c: 90:         portbAnterior = portbActual;
  1277  0079  0878               	movf	_portbActual,w
  1278  007A  1283               	bcf	3,5	;RP0=0, select bank0
  1279  007B  1303               	bcf	3,6	;RP1=0, select bank0
  1280  007C  00B3               	movwf	??_main
  1281  007D  0833               	movf	??_main,w
  1282  007E  00F9               	movwf	_portbAnterior
  1283  007F                     l2639:
  1284                           
  1285                           ;MasterMain.c: 91:         portbActual = PORTB;
  1286  007F  0806               	movf	6,w	;volatile
  1287  0080  00B3               	movwf	??_main
  1288  0081  0833               	movf	??_main,w
  1289  0082  00F8               	movwf	_portbActual
  1290  0083                     l2641:
  1291                           
  1292                           ;MasterMain.c: 93:         if((portbAnterior&1) == 0 && (portbActual&1) == 1 ) menu = ~m
      +                          enu;
  1293  0083  1879               	btfsc	_portbAnterior,0
  1294  0084  2886               	goto	u2611
  1295  0085  2887               	goto	u2610
  1296  0086                     u2611:
  1297  0086  288C               	goto	l100
  1298  0087                     u2610:
  1299  0087                     l2643:
  1300  0087  1C78               	btfss	_portbActual,0
  1301  0088  288A               	goto	u2621
  1302  0089  288B               	goto	u2620
  1303  008A                     u2621:
  1304  008A  288C               	goto	l100
  1305  008B                     u2620:
  1306  008B                     l2645:
  1307  008B  09BC               	comf	_menu,f
  1308  008C                     l100:
  1309                           
  1310                           ;MasterMain.c: 94:         if((portbAnterior&2) == 0 && (portbActual&2) == 2 ) decrement
      +                          ar = 1;
  1311  008C  18F9               	btfsc	_portbAnterior,1
  1312  008D  288F               	goto	u2631
  1313  008E  2890               	goto	u2630
  1314  008F                     u2631:
  1315  008F  2896               	goto	l101
  1316  0090                     u2630:
  1317  0090                     l2647:
  1318  0090  1CF8               	btfss	_portbActual,1
  1319  0091  2893               	goto	u2641
  1320  0092  2894               	goto	u2640
  1321  0093                     u2641:
  1322  0093  2896               	goto	l101
  1323  0094                     u2640:
  1324  0094                     l2649:
  1325  0094  01B9               	clrf	_decrementar
  1326  0095  0AB9               	incf	_decrementar,f
  1327  0096                     l101:
  1328                           
  1329                           ;MasterMain.c: 95:         if((portbAnterior&4) == 0 && (portbActual&4) == 4 ) increment
      +                          ar = 1;
  1330  0096  1979               	btfsc	_portbAnterior,2
  1331  0097  2899               	goto	u2651
  1332  0098  289A               	goto	u2650
  1333  0099                     u2651:
  1334  0099  28A0               	goto	l102
  1335  009A                     u2650:
  1336  009A                     l2651:
  1337  009A  1D78               	btfss	_portbActual,2
  1338  009B  289D               	goto	u2661
  1339  009C  289E               	goto	u2660
  1340  009D                     u2661:
  1341  009D  28A0               	goto	l102
  1342  009E                     u2660:
  1343  009E                     l2653:
  1344  009E  01BA               	clrf	_incrementar
  1345  009F  0ABA               	incf	_incrementar,f
  1346  00A0                     l102:
  1347                           
  1348                           ;MasterMain.c: 96:         if((portbAnterior&8) == 0 && (portbActual&8) == 8 ) ok = 1;
  1349  00A0  19F9               	btfsc	_portbAnterior,3
  1350  00A1  28A3               	goto	u2671
  1351  00A2  28A4               	goto	u2670
  1352  00A3                     u2671:
  1353  00A3  28AA               	goto	l2659
  1354  00A4                     u2670:
  1355  00A4                     l2655:
  1356  00A4  1DF8               	btfss	_portbActual,3
  1357  00A5  28A7               	goto	u2681
  1358  00A6  28A8               	goto	u2680
  1359  00A7                     u2681:
  1360  00A7  28AA               	goto	l2659
  1361  00A8                     u2680:
  1362  00A8                     l2657:
  1363  00A8  01B8               	clrf	_ok
  1364  00A9  0AB8               	incf	_ok,f
  1365  00AA                     l2659:
  1366                           
  1367                           ;MasterMain.c: 98:         if(contador == 229){
  1368  00AA  30E5               	movlw	229
  1369  00AB  0637               	xorwf	_contador,w
  1370  00AC  1D03               	btfss	3,2
  1371  00AD  28AF               	goto	u2691
  1372  00AE  28B0               	goto	u2690
  1373  00AF                     u2691:
  1374  00AF  28C2               	goto	l2667
  1375  00B0                     u2690:
  1376  00B0                     l2661:
  1377                           
  1378                           ;MasterMain.c: 100:             contador = 0;
  1379  00B0  01B7               	clrf	_contador
  1380  00B1                     l2663:
  1381                           
  1382                           ;MasterMain.c: 101:             step(64,direccion);
  1383  00B1  0836               	movf	_direccion,w
  1384  00B2  00B3               	movwf	??_main
  1385  00B3  0833               	movf	??_main,w
  1386  00B4  00F3               	movwf	step@dir
  1387  00B5  3040               	movlw	64
  1388  00B6  120A  118A  23D0  120A  118A  	fcall	_step
  1389  00BB                     l2665:
  1390                           
  1391                           ;MasterMain.c: 103:             direccion = ~direccion&1;
  1392  00BB  1283               	bcf	3,5	;RP0=0, select bank0
  1393  00BC  1303               	bcf	3,6	;RP1=0, select bank0
  1394  00BD  0936               	comf	_direccion,w
  1395  00BE  3901               	andlw	1
  1396  00BF  00B3               	movwf	??_main
  1397  00C0  0833               	movf	??_main,w
  1398  00C1  00B6               	movwf	_direccion
  1399  00C2                     l2667:
  1400                           
  1401                           ;MasterMain.c: 107:         if(!menu){
  1402  00C2  083C               	movf	_menu,w
  1403  00C3  1D03               	btfss	3,2
  1404  00C4  28C6               	goto	u2701
  1405  00C5  28C7               	goto	u2700
  1406  00C6                     u2701:
  1407  00C6  2A7E               	goto	l2751
  1408  00C7                     u2700:
  1409  00C7                     l2669:
  1410                           
  1411                           ;MasterMain.c: 108:             LcdSetCursor(1,1);
  1412  00C7  01A0               	clrf	LcdSetCursor@column
  1413  00C8  0AA0               	incf	LcdSetCursor@column,f
  1414  00C9  3001               	movlw	1
  1415  00CA  120A  158A  2683  120A  118A  	fcall	_LcdSetCursor
  1416  00CF                     l2671:
  1417                           
  1418                           ;MasterMain.c: 109:             LcdWriteString("Hall: Temp: Hum:");
  1419  00CF  3061               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1420  00D0  1283               	bcf	3,5	;RP0=0, select bank0
  1421  00D1  1303               	bcf	3,6	;RP1=0, select bank0
  1422  00D2  00A0               	movwf	LcdWriteString@value
  1423  00D3  3080               	movlw	128
  1424  00D4  00A1               	movwf	LcdWriteString@value+1
  1425  00D5  120A  158A  2774  120A  118A  	fcall	_LcdWriteString
  1426  00DA                     l2673:
  1427                           
  1428                           ;MasterMain.c: 110:             I2C_Master_Start();
  1429  00DA  120A  158A  263C  120A  118A  	fcall	_I2C_Master_Start
  1430  00DF                     l2675:
  1431                           
  1432                           ;MasterMain.c: 111:             I2C_Master_Write(0b00000011);
  1433  00DF  3003               	movlw	3
  1434  00E0  00F3               	movwf	I2C_Master_Write@d
  1435  00E1  3000               	movlw	0
  1436  00E2  00F4               	movwf	I2C_Master_Write@d+1
  1437  00E3  120A  158A  264E  120A  118A  	fcall	_I2C_Master_Write
  1438  00E8                     l2677:
  1439                           
  1440                           ;MasterMain.c: 112:             hall = I2C_Master_Read(0);
  1441  00E8  3000               	movlw	0
  1442  00E9  00F3               	movwf	I2C_Master_Read@a
  1443  00EA  00F4               	movwf	I2C_Master_Read@a+1
  1444  00EB  120A  158A  26CE  120A  118A  	fcall	_I2C_Master_Read
  1445  00F0  0873               	movf	?_I2C_Master_Read,w
  1446  00F1  1283               	bcf	3,5	;RP0=0, select bank0
  1447  00F2  1303               	bcf	3,6	;RP1=0, select bank0
  1448  00F3  00B3               	movwf	??_main
  1449  00F4  0833               	movf	??_main,w
  1450  00F5  00FA               	movwf	_hall
  1451  00F6                     l2679:
  1452                           
  1453                           ;MasterMain.c: 113:             I2C_Master_Stop();
  1454  00F6  120A  158A  2645  120A  118A  	fcall	_I2C_Master_Stop
  1455  00FB                     l2681:
  1456                           
  1457                           ;MasterMain.c: 114:             _delay((unsigned long)((10)*(4000000/4000.0)));
  1458  00FB  300D               	movlw	13
  1459  00FC  1283               	bcf	3,5	;RP0=0, select bank0
  1460  00FD  1303               	bcf	3,6	;RP1=0, select bank0
  1461  00FE  00B4               	movwf	??_main+1
  1462  00FF  30FB               	movlw	251
  1463  0100  00B3               	movwf	??_main
  1464  0101                     u2927:
  1465  0101  0BB3               	decfsz	??_main,f
  1466  0102  2901               	goto	u2927
  1467  0103  0BB4               	decfsz	??_main+1,f
  1468  0104  2901               	goto	u2927
  1469  0105                     l2683:
  1470                           
  1471                           ;MasterMain.c: 115:             LcdSetCursor(2,1);
  1472  0105  1283               	bcf	3,5	;RP0=0, select bank0
  1473  0106  1303               	bcf	3,6	;RP1=0, select bank0
  1474  0107  01A0               	clrf	LcdSetCursor@column
  1475  0108  0AA0               	incf	LcdSetCursor@column,f
  1476  0109  3002               	movlw	2
  1477  010A  120A  158A  2683  120A  118A  	fcall	_LcdSetCursor
  1478                           
  1479                           ;MasterMain.c: 117:             switch(hall){
  1480  010F  2942               	goto	l2691
  1481  0110                     l2685:
  1482                           
  1483                           ;MasterMain.c: 119:                     LcdWriteString("close ");
  1484  0110  3092               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1485  0111  00A0               	movwf	LcdWriteString@value
  1486  0112  3080               	movlw	128
  1487  0113  00A1               	movwf	LcdWriteString@value+1
  1488  0114  120A  158A  2774  120A  118A  	fcall	_LcdWriteString
  1489                           
  1490                           ;MasterMain.c: 120:                     UARTSendString("0,",5);
  1491  0119  30A4               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1492  011A  00F4               	movwf	UARTSendString@str
  1493  011B  3080               	movlw	128
  1494  011C  00F5               	movwf	UARTSendString@str+1
  1495  011D  3005               	movlw	5
  1496  011E  1283               	bcf	3,5	;RP0=0, select bank0
  1497  011F  1303               	bcf	3,6	;RP1=0, select bank0
  1498  0120  00B3               	movwf	??_main
  1499  0121  0833               	movf	??_main,w
  1500  0122  00F6               	movwf	UARTSendString@max_length
  1501  0123  120A  118A  2790  120A  118A  	fcall	_UARTSendString
  1502                           
  1503                           ;MasterMain.c: 121:                     break;
  1504  0128  2954               	goto	l2693
  1505  0129                     l2687:
  1506                           
  1507                           ;MasterMain.c: 123:                     LcdWriteString("open ");
  1508  0129  3099               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1509  012A  00A0               	movwf	LcdWriteString@value
  1510  012B  3080               	movlw	128
  1511  012C  00A1               	movwf	LcdWriteString@value+1
  1512  012D  120A  158A  2774  120A  118A  	fcall	_LcdWriteString
  1513                           
  1514                           ;MasterMain.c: 124:                     UARTSendString("1,",6);
  1515  0132  30A7               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1516  0133  00F4               	movwf	UARTSendString@str
  1517  0134  3080               	movlw	128
  1518  0135  00F5               	movwf	UARTSendString@str+1
  1519  0136  3006               	movlw	6
  1520  0137  1283               	bcf	3,5	;RP0=0, select bank0
  1521  0138  1303               	bcf	3,6	;RP1=0, select bank0
  1522  0139  00B3               	movwf	??_main
  1523  013A  0833               	movf	??_main,w
  1524  013B  00F6               	movwf	UARTSendString@max_length
  1525  013C  120A  118A  2790  120A  118A  	fcall	_UARTSendString
  1526                           
  1527                           ;MasterMain.c: 125:                     break;
  1528  0141  2954               	goto	l2693
  1529  0142                     l2691:
  1530  0142  087A               	movf	_hall,w
  1531  0143  1283               	bcf	3,5	;RP0=0, select bank0
  1532  0144  1303               	bcf	3,6	;RP1=0, select bank0
  1533  0145  00B3               	movwf	??_main
  1534  0146  01B4               	clrf	??_main+1
  1535                           
  1536                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1537                           ; Switch size 1, requested type "simple"
  1538                           ; Number of cases is 1, Range of values is 0 to 0
  1539                           ; switch strategies available:
  1540                           ; Name         Instructions Cycles
  1541                           ; simple_byte            4     3 (average)
  1542                           ; direct_byte           11     8 (fixed)
  1543                           ; jumptable            260     6 (fixed)
  1544                           ;	Chosen strategy is simple_byte
  1545  0147  0834               	movf	??_main+1,w
  1546  0148  3A00               	xorlw	0	; case 0
  1547  0149  1903               	skipnz
  1548  014A  294C               	goto	l2955
  1549  014B  2954               	goto	l2693
  1550  014C                     l2955:
  1551                           
  1552                           ; Switch size 1, requested type "simple"
  1553                           ; Number of cases is 2, Range of values is 0 to 1
  1554                           ; switch strategies available:
  1555                           ; Name         Instructions Cycles
  1556                           ; simple_byte            7     4 (average)
  1557                           ; direct_byte           14     8 (fixed)
  1558                           ; jumptable            260     6 (fixed)
  1559                           ;	Chosen strategy is simple_byte
  1560  014C  0833               	movf	??_main,w
  1561  014D  3A00               	xorlw	0	; case 0
  1562  014E  1903               	skipnz
  1563  014F  2910               	goto	l2685
  1564  0150  3A01               	xorlw	1	; case 1
  1565  0151  1903               	skipnz
  1566  0152  2929               	goto	l2687
  1567  0153  2954               	goto	l2693
  1568  0154                     l2693:
  1569                           
  1570                           ;MasterMain.c: 128:             I2C_Master_Start();
  1571  0154  120A  158A  263C  120A  118A  	fcall	_I2C_Master_Start
  1572                           
  1573                           ;MasterMain.c: 129:             I2C_Master_Write(0b00000001);
  1574  0159  3001               	movlw	1
  1575  015A  00F3               	movwf	I2C_Master_Write@d
  1576  015B  3000               	movlw	0
  1577  015C  00F4               	movwf	I2C_Master_Write@d+1
  1578  015D  120A  158A  264E  120A  118A  	fcall	_I2C_Master_Write
  1579                           
  1580                           ;MasterMain.c: 130:            temp = I2C_Master_Read(0);
  1581  0162  3000               	movlw	0
  1582  0163  00F3               	movwf	I2C_Master_Read@a
  1583  0164  00F4               	movwf	I2C_Master_Read@a+1
  1584  0165  120A  158A  26CE  120A  118A  	fcall	_I2C_Master_Read
  1585  016A  0873               	movf	?_I2C_Master_Read,w
  1586  016B  1283               	bcf	3,5	;RP0=0, select bank0
  1587  016C  1303               	bcf	3,6	;RP1=0, select bank0
  1588  016D  00B3               	movwf	??_main
  1589  016E  0833               	movf	??_main,w
  1590  016F  00BE               	movwf	_temp
  1591                           
  1592                           ;MasterMain.c: 131:             I2C_Master_Stop();
  1593  0170  120A  158A  2645  120A  118A  	fcall	_I2C_Master_Stop
  1594  0175                     l2695:
  1595                           
  1596                           ;MasterMain.c: 132:             _delay((unsigned long)((10)*(4000000/4000.0)));
  1597  0175  300D               	movlw	13
  1598  0176  1283               	bcf	3,5	;RP0=0, select bank0
  1599  0177  1303               	bcf	3,6	;RP1=0, select bank0
  1600  0178  00B4               	movwf	??_main+1
  1601  0179  30FB               	movlw	251
  1602  017A  00B3               	movwf	??_main
  1603  017B                     u2937:
  1604  017B  0BB3               	decfsz	??_main,f
  1605  017C  297B               	goto	u2937
  1606  017D  0BB4               	decfsz	??_main+1,f
  1607  017E  297B               	goto	u2937
  1608  017F                     l2697:
  1609                           
  1610                           ;MasterMain.c: 134:             I2C_Master_Start();
  1611  017F  120A  158A  263C  120A  118A  	fcall	_I2C_Master_Start
  1612  0184                     l2699:
  1613                           
  1614                           ;MasterMain.c: 135:             I2C_Master_Write(0b00000001);
  1615  0184  3001               	movlw	1
  1616  0185  00F3               	movwf	I2C_Master_Write@d
  1617  0186  3000               	movlw	0
  1618  0187  00F4               	movwf	I2C_Master_Write@d+1
  1619  0188  120A  158A  264E  120A  118A  	fcall	_I2C_Master_Write
  1620  018D                     l2701:
  1621                           
  1622                           ;MasterMain.c: 136:             hum = I2C_Master_Read(0);
  1623  018D  3000               	movlw	0
  1624  018E  00F3               	movwf	I2C_Master_Read@a
  1625  018F  00F4               	movwf	I2C_Master_Read@a+1
  1626  0190  120A  158A  26CE  120A  118A  	fcall	_I2C_Master_Read
  1627  0195  0873               	movf	?_I2C_Master_Read,w
  1628  0196  1283               	bcf	3,5	;RP0=0, select bank0
  1629  0197  1303               	bcf	3,6	;RP1=0, select bank0
  1630  0198  00B3               	movwf	??_main
  1631  0199  0833               	movf	??_main,w
  1632  019A  00BD               	movwf	_hum
  1633  019B                     l2703:
  1634                           
  1635                           ;MasterMain.c: 137:             I2C_Master_Stop();
  1636  019B  120A  158A  2645  120A  118A  	fcall	_I2C_Master_Stop
  1637  01A0                     l2705:
  1638                           
  1639                           ;MasterMain.c: 138:             _delay((unsigned long)((10)*(4000000/4000.0)));
  1640  01A0  300D               	movlw	13
  1641  01A1  1283               	bcf	3,5	;RP0=0, select bank0
  1642  01A2  1303               	bcf	3,6	;RP1=0, select bank0
  1643  01A3  00B4               	movwf	??_main+1
  1644  01A4  30FB               	movlw	251
  1645  01A5  00B3               	movwf	??_main
  1646  01A6                     u2947:
  1647  01A6  0BB3               	decfsz	??_main,f
  1648  01A7  29A6               	goto	u2947
  1649  01A8  0BB4               	decfsz	??_main+1,f
  1650  01A9  29A6               	goto	u2947
  1651  01AA                     l2707:
  1652                           
  1653                           ;MasterMain.c: 142:             itoa(numero,temp,10);
  1654  01AA  1283               	bcf	3,5	;RP0=0, select bank0
  1655  01AB  1303               	bcf	3,6	;RP1=0, select bank0
  1656  01AC  083E               	movf	_temp,w
  1657  01AD  00B3               	movwf	??_main
  1658  01AE  01B4               	clrf	??_main+1
  1659  01AF  0833               	movf	??_main,w
  1660  01B0  00AC               	movwf	itoa@val
  1661  01B1  0834               	movf	??_main+1,w
  1662  01B2  00AD               	movwf	itoa@val+1
  1663  01B3  300A               	movlw	10
  1664  01B4  00AE               	movwf	itoa@base
  1665  01B5  3000               	movlw	0
  1666  01B6  00AF               	movwf	itoa@base+1
  1667  01B7  303F               	movlw	(low (_numero| 0))& (0+255)
  1668  01B8  120A  158A  26A8  120A  118A  	fcall	_itoa
  1669  01BD                     l2709:
  1670                           
  1671                           ;MasterMain.c: 143:             LcdWriteChar(' ');
  1672  01BD  3020               	movlw	32
  1673  01BE  120A  118A  27E7  120A  118A  	fcall	_LcdWriteChar
  1674  01C3                     l2711:
  1675                           
  1676                           ;MasterMain.c: 144:             LcdWriteChar(' ');
  1677  01C3  3020               	movlw	32
  1678  01C4  120A  118A  27E7  120A  118A  	fcall	_LcdWriteChar
  1679  01C9                     l2713:
  1680                           
  1681                           ;MasterMain.c: 145:             LcdWriteString(numero);
  1682  01C9  303F               	movlw	(low (_numero| 0))& (0+255)
  1683  01CA  1283               	bcf	3,5	;RP0=0, select bank0
  1684  01CB  1303               	bcf	3,6	;RP1=0, select bank0
  1685  01CC  00A0               	movwf	LcdWriteString@value
  1686  01CD  3000               	movlw	0
  1687  01CE  00A1               	movwf	LcdWriteString@value+1
  1688  01CF  120A  158A  2774  120A  118A  	fcall	_LcdWriteString
  1689  01D4                     l2715:
  1690                           
  1691                           ;MasterMain.c: 146:             UARTSendString(numero,6);
  1692  01D4  303F               	movlw	(low (_numero| 0))& (0+255)
  1693  01D5  00F4               	movwf	UARTSendString@str
  1694  01D6  3000               	movlw	0
  1695  01D7  00F5               	movwf	UARTSendString@str+1
  1696  01D8  3006               	movlw	6
  1697  01D9  1283               	bcf	3,5	;RP0=0, select bank0
  1698  01DA  1303               	bcf	3,6	;RP1=0, select bank0
  1699  01DB  00B3               	movwf	??_main
  1700  01DC  0833               	movf	??_main,w
  1701  01DD  00F6               	movwf	UARTSendString@max_length
  1702  01DE  120A  118A  2790  120A  118A  	fcall	_UARTSendString
  1703  01E3                     l2717:
  1704                           
  1705                           ;MasterMain.c: 147:             UARTSendChar(',');
  1706  01E3  302C               	movlw	44
  1707  01E4  120A  158A  2658  120A  118A  	fcall	_UARTSendChar
  1708  01E9                     l2719:
  1709                           
  1710                           ;MasterMain.c: 148:             LcdWriteChar(0xDF);
  1711  01E9  30DF               	movlw	223
  1712  01EA  120A  118A  27E7  120A  118A  	fcall	_LcdWriteChar
  1713  01EF                     l2721:
  1714                           
  1715                           ;MasterMain.c: 149:             LcdWriteChar('C');
  1716  01EF  3043               	movlw	67
  1717  01F0  120A  118A  27E7  120A  118A  	fcall	_LcdWriteChar
  1718                           
  1719                           ;MasterMain.c: 151:             itoa(numero,hum,10);
  1720  01F5  1283               	bcf	3,5	;RP0=0, select bank0
  1721  01F6  1303               	bcf	3,6	;RP1=0, select bank0
  1722  01F7  083D               	movf	_hum,w
  1723  01F8  00B3               	movwf	??_main
  1724  01F9  01B4               	clrf	??_main+1
  1725  01FA  0833               	movf	??_main,w
  1726  01FB  00AC               	movwf	itoa@val
  1727  01FC  0834               	movf	??_main+1,w
  1728  01FD  00AD               	movwf	itoa@val+1
  1729  01FE  300A               	movlw	10
  1730  01FF  00AE               	movwf	itoa@base
  1731  0200  3000               	movlw	0
  1732  0201  00AF               	movwf	itoa@base+1
  1733  0202  303F               	movlw	(low (_numero| 0))& (0+255)
  1734  0203  120A  158A  26A8  120A  118A  	fcall	_itoa
  1735  0208                     l2723:
  1736                           
  1737                           ;MasterMain.c: 152:             UARTSendString(numero,6);
  1738  0208  303F               	movlw	(low (_numero| 0))& (0+255)
  1739  0209  00F4               	movwf	UARTSendString@str
  1740  020A  3000               	movlw	0
  1741  020B  00F5               	movwf	UARTSendString@str+1
  1742  020C  3006               	movlw	6
  1743  020D  1283               	bcf	3,5	;RP0=0, select bank0
  1744  020E  1303               	bcf	3,6	;RP1=0, select bank0
  1745  020F  00B3               	movwf	??_main
  1746  0210  0833               	movf	??_main,w
  1747  0211  00F6               	movwf	UARTSendString@max_length
  1748  0212  120A  118A  2790  120A  118A  	fcall	_UARTSendString
  1749  0217                     l2725:
  1750                           
  1751                           ;MasterMain.c: 153:             UARTSendChar('\n');
  1752  0217  300A               	movlw	10
  1753  0218  120A  158A  2658  120A  118A  	fcall	_UARTSendChar
  1754  021D                     l2727:
  1755                           
  1756                           ;MasterMain.c: 155:             if(hum > umbralHum){
  1757  021D  1283               	bcf	3,5	;RP0=0, select bank0
  1758  021E  1303               	bcf	3,6	;RP1=0, select bank0
  1759  021F  083D               	movf	_hum,w
  1760  0220  0249               	subwf	_umbralHum,w
  1761  0221  1803               	skipnc
  1762  0222  2A24               	goto	u2711
  1763  0223  2A25               	goto	u2710
  1764  0224                     u2711:
  1765  0224  2A43               	goto	l2737
  1766  0225                     u2710:
  1767  0225                     l2729:
  1768                           
  1769                           ;MasterMain.c: 158:                 LcdWriteChar(' ');
  1770  0225  3020               	movlw	32
  1771  0226  120A  118A  27E7  120A  118A  	fcall	_LcdWriteChar
  1772  022B                     l2731:
  1773                           
  1774                           ;MasterMain.c: 159:                 LcdWriteString(numero);
  1775  022B  303F               	movlw	(low (_numero| 0))& (0+255)
  1776  022C  1283               	bcf	3,5	;RP0=0, select bank0
  1777  022D  1303               	bcf	3,6	;RP1=0, select bank0
  1778  022E  00A0               	movwf	LcdWriteString@value
  1779  022F  3000               	movlw	0
  1780  0230  00A1               	movwf	LcdWriteString@value+1
  1781  0231  120A  158A  2774  120A  118A  	fcall	_LcdWriteString
  1782  0236                     l2733:
  1783                           
  1784                           ;MasterMain.c: 160:                 LcdWriteChar('%');
  1785  0236  3025               	movlw	37
  1786  0237  120A  118A  27E7  120A  118A  	fcall	_LcdWriteChar
  1787  023C                     l2735:
  1788                           
  1789                           ;MasterMain.c: 161:                 LcdWriteChar(' ');
  1790  023C  3020               	movlw	32
  1791  023D  120A  118A  27E7  120A  118A  	fcall	_LcdWriteChar
  1792                           
  1793                           ;MasterMain.c: 162:             }else{
  1794  0242  2A4C               	goto	l2739
  1795  0243                     l2737:
  1796                           
  1797                           ;MasterMain.c: 163:                 LcdWriteString(" N.A");
  1798  0243  309F               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1799  0244  00A0               	movwf	LcdWriteString@value
  1800  0245  3080               	movlw	128
  1801  0246  00A1               	movwf	LcdWriteString@value+1
  1802  0247  120A  158A  2774  120A  118A  	fcall	_LcdWriteString
  1803  024C                     l2739:
  1804                           
  1805                           ;MasterMain.c: 168:             if(temp > umbralTemp || hall==1) PORTA |= 48;
  1806  024C  1283               	bcf	3,5	;RP0=0, select bank0
  1807  024D  1303               	bcf	3,6	;RP1=0, select bank0
  1808  024E  083E               	movf	_temp,w
  1809  024F  024A               	subwf	_umbralTemp,w
  1810  0250  1C03               	skipc
  1811  0251  2A53               	goto	u2721
  1812  0252  2A54               	goto	u2720
  1813  0253                     u2721:
  1814  0253  2A59               	goto	l2743
  1815  0254                     u2720:
  1816  0254                     l2741:
  1817  0254  037A               	decf	_hall,w
  1818  0255  1D03               	btfss	3,2
  1819  0256  2A58               	goto	u2731
  1820  0257  2A59               	goto	u2730
  1821  0258                     u2731:
  1822  0258  2A5E               	goto	l2745
  1823  0259                     u2730:
  1824  0259                     l2743:
  1825  0259  3030               	movlw	48
  1826  025A  00B3               	movwf	??_main
  1827  025B  0833               	movf	??_main,w
  1828  025C  0485               	iorwf	5,f	;volatile
  1829  025D  2879               	goto	l2637
  1830  025E                     l2745:
  1831  025E  084A               	movf	_umbralTemp,w
  1832  025F  3EFF               	addlw	255
  1833  0260  00B3               	movwf	??_main
  1834  0261  30FF               	movlw	255
  1835  0262  1803               	skipnc
  1836  0263  3000               	movlw	0
  1837  0264  00B4               	movwf	??_main+1
  1838  0265  0834               	movf	??_main+1,w
  1839  0266  3A80               	xorlw	128
  1840  0267  00B5               	movwf	??_main+2
  1841  0268  3080               	movlw	128
  1842  0269  0235               	subwf	??_main+2,w
  1843  026A  1D03               	skipz
  1844  026B  2A6E               	goto	u2745
  1845  026C  083E               	movf	_temp,w
  1846  026D  0233               	subwf	??_main,w
  1847  026E                     u2745:
  1848  026E  1C03               	skipc
  1849  026F  2A71               	goto	u2741
  1850  0270  2A72               	goto	u2740
  1851  0271                     u2741:
  1852  0271  2BCC               	goto	l117
  1853  0272                     u2740:
  1854  0272                     l2747:
  1855  0272  087A               	movf	_hall,w
  1856  0273  1D03               	btfss	3,2
  1857  0274  2A76               	goto	u2751
  1858  0275  2A77               	goto	u2750
  1859  0276                     u2751:
  1860  0276  2BCC               	goto	l117
  1861  0277                     u2750:
  1862  0277                     l2749:
  1863  0277  30CF               	movlw	207
  1864  0278  1283               	bcf	3,5	;RP0=0, select bank0
  1865  0279  1303               	bcf	3,6	;RP1=0, select bank0
  1866  027A  00B3               	movwf	??_main
  1867  027B  0833               	movf	??_main,w
  1868  027C  0585               	andwf	5,f	;volatile
  1869  027D  2879               	goto	l2637
  1870  027E                     l2751:
  1871                           
  1872                           ;MasterMain.c: 171:             LcdSetCursor(1,1);
  1873  027E  01A0               	clrf	LcdSetCursor@column
  1874  027F  0AA0               	incf	LcdSetCursor@column,f
  1875  0280  3001               	movlw	1
  1876  0281  120A  158A  2683  120A  118A  	fcall	_LcdSetCursor
  1877  0286                     l2753:
  1878                           
  1879                           ;MasterMain.c: 172:             LcdWriteString(" Selec. opcion: ");
  1880  0286  3050               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1881  0287  1283               	bcf	3,5	;RP0=0, select bank0
  1882  0288  1303               	bcf	3,6	;RP1=0, select bank0
  1883  0289  00A0               	movwf	LcdWriteString@value
  1884  028A  3080               	movlw	128
  1885  028B  00A1               	movwf	LcdWriteString@value+1
  1886  028C  120A  158A  2774  120A  118A  	fcall	_LcdWriteString
  1887  0291                     l2755:
  1888                           
  1889                           ;MasterMain.c: 173:             LcdSetCursor(2,1);
  1890  0291  1283               	bcf	3,5	;RP0=0, select bank0
  1891  0292  1303               	bcf	3,6	;RP1=0, select bank0
  1892  0293  01A0               	clrf	LcdSetCursor@column
  1893  0294  0AA0               	incf	LcdSetCursor@column,f
  1894  0295  3002               	movlw	2
  1895  0296  120A  158A  2683  120A  118A  	fcall	_LcdSetCursor
  1896  029B                     l2757:
  1897                           
  1898                           ;MasterMain.c: 174:             if(incrementar || decrementar){
  1899  029B  1283               	bcf	3,5	;RP0=0, select bank0
  1900  029C  1303               	bcf	3,6	;RP1=0, select bank0
  1901  029D  083A               	movf	_incrementar,w
  1902  029E  1D03               	btfss	3,2
  1903  029F  2AA1               	goto	u2761
  1904  02A0  2AA2               	goto	u2760
  1905  02A1                     u2761:
  1906  02A1  2AA7               	goto	l120
  1907  02A2                     u2760:
  1908  02A2                     l2759:
  1909  02A2  0839               	movf	_decrementar,w
  1910  02A3  1903               	btfsc	3,2
  1911  02A4  2AA6               	goto	u2771
  1912  02A5  2AA7               	goto	u2770
  1913  02A6                     u2771:
  1914  02A6  2AAA               	goto	l2763
  1915  02A7                     u2770:
  1916  02A7                     l120:
  1917                           
  1918                           ;MasterMain.c: 175:                 opcion = ~opcion;
  1919  02A7  09BB               	comf	_opcion,f
  1920  02A8                     l2761:
  1921                           
  1922                           ;MasterMain.c: 176:                 incrementar = decrementar = 0;
  1923  02A8  01B9               	clrf	_decrementar
  1924  02A9  01BA               	clrf	_incrementar
  1925  02AA                     l2763:
  1926                           
  1927                           ;MasterMain.c: 178:             if(opcion)LcdWriteString(" Temp  >humedad");
  1928  02AA  083B               	movf	_opcion,w
  1929  02AB  1903               	btfsc	3,2
  1930  02AC  2AAE               	goto	u2781
  1931  02AD  2AAF               	goto	u2780
  1932  02AE                     u2781:
  1933  02AE  2AB9               	goto	l2767
  1934  02AF                     u2780:
  1935  02AF                     l2765:
  1936  02AF  3082               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1937  02B0  00A0               	movwf	LcdWriteString@value
  1938  02B1  3080               	movlw	128
  1939  02B2  00A1               	movwf	LcdWriteString@value+1
  1940  02B3  120A  158A  2774  120A  118A  	fcall	_LcdWriteString
  1941  02B8  2AC2               	goto	l2769
  1942  02B9                     l2767:
  1943  02B9  3072               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1944  02BA  00A0               	movwf	LcdWriteString@value
  1945  02BB  3080               	movlw	128
  1946  02BC  00A1               	movwf	LcdWriteString@value+1
  1947  02BD  120A  158A  2774  120A  118A  	fcall	_LcdWriteString
  1948  02C2                     l2769:
  1949                           
  1950                           ;MasterMain.c: 181:             if(ok){
  1951  02C2  1283               	bcf	3,5	;RP0=0, select bank0
  1952  02C3  1303               	bcf	3,6	;RP1=0, select bank0
  1953  02C4  0838               	movf	_ok,w
  1954  02C5  1903               	btfsc	3,2
  1955  02C6  2AC8               	goto	u2791
  1956  02C7  2AC9               	goto	u2790
  1957  02C8                     u2791:
  1958  02C8  2879               	goto	l2637
  1959  02C9                     u2790:
  1960  02C9                     l2771:
  1961                           
  1962                           ;MasterMain.c: 182:                 ok = 0;
  1963  02C9  01B8               	clrf	_ok
  1964                           
  1965                           ;MasterMain.c: 184:                 while(ok == 0){
  1966  02CA  2BC3               	goto	l2845
  1967  02CB                     l2773:
  1968                           
  1969                           ;MasterMain.c: 185:                     portbAnterior = portbActual;
  1970  02CB  0878               	movf	_portbActual,w
  1971  02CC  00B3               	movwf	??_main
  1972  02CD  0833               	movf	??_main,w
  1973  02CE  00F9               	movwf	_portbAnterior
  1974                           
  1975                           ;MasterMain.c: 186:                     portbActual = PORTB;
  1976  02CF  0806               	movf	6,w	;volatile
  1977  02D0  00B3               	movwf	??_main
  1978  02D1  0833               	movf	??_main,w
  1979  02D2  00F8               	movwf	_portbActual
  1980  02D3                     l2775:
  1981                           
  1982                           ;MasterMain.c: 189:                     if((portbAnterior&2) == 0 && (portbActual&2) == 
      +                          2 ) decrementar = 1;
  1983  02D3  18F9               	btfsc	_portbAnterior,1
  1984  02D4  2AD6               	goto	u2801
  1985  02D5  2AD7               	goto	u2800
  1986  02D6                     u2801:
  1987  02D6  2ADD               	goto	l126
  1988  02D7                     u2800:
  1989  02D7                     l2777:
  1990  02D7  1CF8               	btfss	_portbActual,1
  1991  02D8  2ADA               	goto	u2811
  1992  02D9  2ADB               	goto	u2810
  1993  02DA                     u2811:
  1994  02DA  2ADD               	goto	l126
  1995  02DB                     u2810:
  1996  02DB                     l2779:
  1997  02DB  01B9               	clrf	_decrementar
  1998  02DC  0AB9               	incf	_decrementar,f
  1999  02DD                     l126:
  2000                           
  2001                           ;MasterMain.c: 190:                     if((portbAnterior&4) == 0 && (portbActual&4) == 
      +                          4 ) incrementar = 1;
  2002  02DD  1979               	btfsc	_portbAnterior,2
  2003  02DE  2AE0               	goto	u2821
  2004  02DF  2AE1               	goto	u2820
  2005  02E0                     u2821:
  2006  02E0  2AE7               	goto	l127
  2007  02E1                     u2820:
  2008  02E1                     l2781:
  2009  02E1  1D78               	btfss	_portbActual,2
  2010  02E2  2AE4               	goto	u2831
  2011  02E3  2AE5               	goto	u2830
  2012  02E4                     u2831:
  2013  02E4  2AE7               	goto	l127
  2014  02E5                     u2830:
  2015  02E5                     l2783:
  2016  02E5  01BA               	clrf	_incrementar
  2017  02E6  0ABA               	incf	_incrementar,f
  2018  02E7                     l127:
  2019                           
  2020                           ;MasterMain.c: 191:                     if((portbAnterior&8) == 0 && (portbActual&8) == 
      +                          8 ) ok = 1;
  2021  02E7  19F9               	btfsc	_portbAnterior,3
  2022  02E8  2AEA               	goto	u2841
  2023  02E9  2AEB               	goto	u2840
  2024  02EA                     u2841:
  2025  02EA  2AF1               	goto	l2789
  2026  02EB                     u2840:
  2027  02EB                     l2785:
  2028  02EB  1DF8               	btfss	_portbActual,3
  2029  02EC  2AEE               	goto	u2851
  2030  02ED  2AEF               	goto	u2850
  2031  02EE                     u2851:
  2032  02EE  2AF1               	goto	l2789
  2033  02EF                     u2850:
  2034  02EF                     l2787:
  2035  02EF  01B8               	clrf	_ok
  2036  02F0  0AB8               	incf	_ok,f
  2037  02F1                     l2789:
  2038                           
  2039                           ;MasterMain.c: 194:                     if(opcion){
  2040  02F1  083B               	movf	_opcion,w
  2041  02F2  1903               	btfsc	3,2
  2042  02F3  2AF5               	goto	u2861
  2043  02F4  2AF6               	goto	u2860
  2044  02F5                     u2861:
  2045  02F5  2B5A               	goto	l2817
  2046  02F6                     u2860:
  2047  02F6                     l2791:
  2048                           
  2049                           ;MasterMain.c: 196:                         if (incrementar){
  2050  02F6  083A               	movf	_incrementar,w
  2051  02F7  1903               	btfsc	3,2
  2052  02F8  2AFA               	goto	u2871
  2053  02F9  2AFB               	goto	u2870
  2054  02FA                     u2871:
  2055  02FA  2B00               	goto	l2797
  2056  02FB                     u2870:
  2057  02FB                     l2793:
  2058                           
  2059                           ;MasterMain.c: 197:                             incrementar = 0;
  2060  02FB  01BA               	clrf	_incrementar
  2061  02FC                     l2795:
  2062                           
  2063                           ;MasterMain.c: 198:                             umbralHum++;
  2064  02FC  3001               	movlw	1
  2065  02FD  00B3               	movwf	??_main
  2066  02FE  0833               	movf	??_main,w
  2067  02FF  07C9               	addwf	_umbralHum,f
  2068  0300                     l2797:
  2069                           
  2070                           ;MasterMain.c: 200:                         if(decrementar && umbralHum>=0){
  2071  0300  0839               	movf	_decrementar,w
  2072  0301  1903               	btfsc	3,2
  2073  0302  2B04               	goto	u2881
  2074  0303  2B05               	goto	u2880
  2075  0304                     u2881:
  2076  0304  2B08               	goto	l2803
  2077  0305                     u2880:
  2078  0305                     l2799:
  2079                           
  2080                           ;MasterMain.c: 201:                             decrementar = 0;
  2081  0305  01B9               	clrf	_decrementar
  2082  0306                     l2801:
  2083                           
  2084                           ;MasterMain.c: 202:                             umbralHum--;
  2085  0306  3001               	movlw	1
  2086  0307  02C9               	subwf	_umbralHum,f
  2087  0308                     l2803:
  2088                           
  2089                           ;MasterMain.c: 204:                         LcdSetCursor(1,1);
  2090  0308  01A0               	clrf	LcdSetCursor@column
  2091  0309  0AA0               	incf	LcdSetCursor@column,f
  2092  030A  3001               	movlw	1
  2093  030B  120A  158A  2683  120A  118A  	fcall	_LcdSetCursor
  2094  0310                     l2805:
  2095                           
  2096                           ;MasterMain.c: 205:                         LcdWriteString("  Hum. minima:  ");
  2097  0310  302E               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  2098  0311  1283               	bcf	3,5	;RP0=0, select bank0
  2099  0312  1303               	bcf	3,6	;RP1=0, select bank0
  2100  0313  00A0               	movwf	LcdWriteString@value
  2101  0314  3080               	movlw	128
  2102  0315  00A1               	movwf	LcdWriteString@value+1
  2103  0316  120A  158A  2774  120A  118A  	fcall	_LcdWriteString
  2104  031B                     l2807:
  2105                           
  2106                           ;MasterMain.c: 206:                         LcdSetCursor(2,1);
  2107  031B  1283               	bcf	3,5	;RP0=0, select bank0
  2108  031C  1303               	bcf	3,6	;RP1=0, select bank0
  2109  031D  01A0               	clrf	LcdSetCursor@column
  2110  031E  0AA0               	incf	LcdSetCursor@column,f
  2111  031F  3002               	movlw	2
  2112  0320  120A  158A  2683  120A  118A  	fcall	_LcdSetCursor
  2113  0325                     l2809:
  2114                           
  2115                           ;MasterMain.c: 207:                         LcdWriteString("  ");
  2116  0325  3016               	movlw	(low (((STR_12+21)-__stringbase)| (0+32768)))& (0+255)
  2117  0326  1283               	bcf	3,5	;RP0=0, select bank0
  2118  0327  1303               	bcf	3,6	;RP1=0, select bank0
  2119  0328  00A0               	movwf	LcdWriteString@value
  2120  0329  3080               	movlw	128
  2121  032A  00A1               	movwf	LcdWriteString@value+1
  2122  032B  120A  158A  2774  120A  118A  	fcall	_LcdWriteString
  2123  0330                     l2811:
  2124                           
  2125                           ;MasterMain.c: 208:                         itoa(numero,umbralHum,10);
  2126  0330  1283               	bcf	3,5	;RP0=0, select bank0
  2127  0331  1303               	bcf	3,6	;RP1=0, select bank0
  2128  0332  0849               	movf	_umbralHum,w
  2129  0333  00B3               	movwf	??_main
  2130  0334  01B4               	clrf	??_main+1
  2131  0335  0833               	movf	??_main,w
  2132  0336  00AC               	movwf	itoa@val
  2133  0337  0834               	movf	??_main+1,w
  2134  0338  00AD               	movwf	itoa@val+1
  2135  0339  300A               	movlw	10
  2136  033A  00AE               	movwf	itoa@base
  2137  033B  3000               	movlw	0
  2138  033C  00AF               	movwf	itoa@base+1
  2139  033D  303F               	movlw	(low (_numero| 0))& (0+255)
  2140  033E  120A  158A  26A8  120A  118A  	fcall	_itoa
  2141  0343                     l2813:
  2142                           
  2143                           ;MasterMain.c: 209:                         LcdWriteString(numero);
  2144  0343  303F               	movlw	(low (_numero| 0))& (0+255)
  2145  0344  1283               	bcf	3,5	;RP0=0, select bank0
  2146  0345  1303               	bcf	3,6	;RP1=0, select bank0
  2147  0346  00A0               	movwf	LcdWriteString@value
  2148  0347  3000               	movlw	0
  2149  0348  00A1               	movwf	LcdWriteString@value+1
  2150  0349  120A  158A  2774  120A  118A  	fcall	_LcdWriteString
  2151  034E                     l2815:
  2152                           
  2153                           ;MasterMain.c: 210:                         LcdWriteString("%                      ");
  2154  034E  3001               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  2155  034F  1283               	bcf	3,5	;RP0=0, select bank0
  2156  0350  1303               	bcf	3,6	;RP1=0, select bank0
  2157  0351  00A0               	movwf	LcdWriteString@value
  2158  0352  3080               	movlw	128
  2159  0353  00A1               	movwf	LcdWriteString@value+1
  2160  0354  120A  158A  2774  120A  118A  	fcall	_LcdWriteString
  2161                           
  2162                           ;MasterMain.c: 211:                     }else{
  2163  0359  2BC3               	goto	l2845
  2164  035A                     l2817:
  2165                           
  2166                           ;MasterMain.c: 212:                         LcdSetCursor(1,1);
  2167  035A  01A0               	clrf	LcdSetCursor@column
  2168  035B  0AA0               	incf	LcdSetCursor@column,f
  2169  035C  3001               	movlw	1
  2170  035D  120A  158A  2683  120A  118A  	fcall	_LcdSetCursor
  2171  0362                     l2819:
  2172                           
  2173                           ;MasterMain.c: 213:                         LcdWriteString("  Temp. Maxima: ");
  2174  0362  303F               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  2175  0363  1283               	bcf	3,5	;RP0=0, select bank0
  2176  0364  1303               	bcf	3,6	;RP1=0, select bank0
  2177  0365  00A0               	movwf	LcdWriteString@value
  2178  0366  3080               	movlw	128
  2179  0367  00A1               	movwf	LcdWriteString@value+1
  2180  0368  120A  158A  2774  120A  118A  	fcall	_LcdWriteString
  2181  036D                     l2821:
  2182                           
  2183                           ;MasterMain.c: 214:                         if (incrementar){
  2184  036D  1283               	bcf	3,5	;RP0=0, select bank0
  2185  036E  1303               	bcf	3,6	;RP1=0, select bank0
  2186  036F  083A               	movf	_incrementar,w
  2187  0370  1903               	btfsc	3,2
  2188  0371  2B73               	goto	u2891
  2189  0372  2B74               	goto	u2890
  2190  0373                     u2891:
  2191  0373  2B79               	goto	l2827
  2192  0374                     u2890:
  2193  0374                     l2823:
  2194                           
  2195                           ;MasterMain.c: 215:                             incrementar = 0;
  2196  0374  01BA               	clrf	_incrementar
  2197  0375                     l2825:
  2198                           
  2199                           ;MasterMain.c: 216:                             umbralTemp++;
  2200  0375  3001               	movlw	1
  2201  0376  00B3               	movwf	??_main
  2202  0377  0833               	movf	??_main,w
  2203  0378  07CA               	addwf	_umbralTemp,f
  2204  0379                     l2827:
  2205                           
  2206                           ;MasterMain.c: 218:                         if(decrementar && umbralTemp>=0){
  2207  0379  0839               	movf	_decrementar,w
  2208  037A  1903               	btfsc	3,2
  2209  037B  2B7D               	goto	u2901
  2210  037C  2B7E               	goto	u2900
  2211  037D                     u2901:
  2212  037D  2B81               	goto	l2833
  2213  037E                     u2900:
  2214  037E                     l2829:
  2215                           
  2216                           ;MasterMain.c: 219:                             decrementar = 0;
  2217  037E  01B9               	clrf	_decrementar
  2218  037F                     l2831:
  2219                           
  2220                           ;MasterMain.c: 220:                             umbralTemp--;
  2221  037F  3001               	movlw	1
  2222  0380  02CA               	subwf	_umbralTemp,f
  2223  0381                     l2833:
  2224                           
  2225                           ;MasterMain.c: 223:                         LcdSetCursor(2,1);
  2226  0381  01A0               	clrf	LcdSetCursor@column
  2227  0382  0AA0               	incf	LcdSetCursor@column,f
  2228  0383  3002               	movlw	2
  2229  0384  120A  158A  2683  120A  118A  	fcall	_LcdSetCursor
  2230  0389                     l2835:
  2231                           
  2232                           ;MasterMain.c: 224:                         LcdWriteString("  ");
  2233  0389  3016               	movlw	(low (((STR_12+21)-__stringbase)| (0+32768)))& (0+255)
  2234  038A  1283               	bcf	3,5	;RP0=0, select bank0
  2235  038B  1303               	bcf	3,6	;RP1=0, select bank0
  2236  038C  00A0               	movwf	LcdWriteString@value
  2237  038D  3080               	movlw	128
  2238  038E  00A1               	movwf	LcdWriteString@value+1
  2239  038F  120A  158A  2774  120A  118A  	fcall	_LcdWriteString
  2240  0394                     l2837:
  2241                           
  2242                           ;MasterMain.c: 225:                         itoa(numero,umbralTemp,10);
  2243  0394  1283               	bcf	3,5	;RP0=0, select bank0
  2244  0395  1303               	bcf	3,6	;RP1=0, select bank0
  2245  0396  084A               	movf	_umbralTemp,w
  2246  0397  00B3               	movwf	??_main
  2247  0398  01B4               	clrf	??_main+1
  2248  0399  0833               	movf	??_main,w
  2249  039A  00AC               	movwf	itoa@val
  2250  039B  0834               	movf	??_main+1,w
  2251  039C  00AD               	movwf	itoa@val+1
  2252  039D  300A               	movlw	10
  2253  039E  00AE               	movwf	itoa@base
  2254  039F  3000               	movlw	0
  2255  03A0  00AF               	movwf	itoa@base+1
  2256  03A1  303F               	movlw	(low (_numero| 0))& (0+255)
  2257  03A2  120A  158A  26A8  120A  118A  	fcall	_itoa
  2258  03A7                     l2839:
  2259                           
  2260                           ;MasterMain.c: 226:                         LcdWriteString(numero);
  2261  03A7  303F               	movlw	(low (_numero| 0))& (0+255)
  2262  03A8  1283               	bcf	3,5	;RP0=0, select bank0
  2263  03A9  1303               	bcf	3,6	;RP1=0, select bank0
  2264  03AA  00A0               	movwf	LcdWriteString@value
  2265  03AB  3000               	movlw	0
  2266  03AC  00A1               	movwf	LcdWriteString@value+1
  2267  03AD  120A  158A  2774  120A  118A  	fcall	_LcdWriteString
  2268  03B2                     l2841:
  2269                           
  2270                           ;MasterMain.c: 227:                         LcdWriteChar(0xDF);
  2271  03B2  30DF               	movlw	223
  2272  03B3  120A  118A  27E7  120A  118A  	fcall	_LcdWriteChar
  2273  03B8                     l2843:
  2274                           
  2275                           ;MasterMain.c: 228:                         LcdWriteString("C                   ");
  2276  03B8  3019               	movlw	(low ((STR_15-__stringbase)| (0+32768)))& (0+255)
  2277  03B9  1283               	bcf	3,5	;RP0=0, select bank0
  2278  03BA  1303               	bcf	3,6	;RP1=0, select bank0
  2279  03BB  00A0               	movwf	LcdWriteString@value
  2280  03BC  3080               	movlw	128
  2281  03BD  00A1               	movwf	LcdWriteString@value+1
  2282  03BE  120A  158A  2774  120A  118A  	fcall	_LcdWriteString
  2283  03C3                     l2845:
  2284                           
  2285                           ;MasterMain.c: 184:                 while(ok == 0){
  2286  03C3  1283               	bcf	3,5	;RP0=0, select bank0
  2287  03C4  1303               	bcf	3,6	;RP1=0, select bank0
  2288  03C5  0838               	movf	_ok,w
  2289  03C6  1903               	btfsc	3,2
  2290  03C7  2BC9               	goto	u2911
  2291  03C8  2BCA               	goto	u2910
  2292  03C9                     u2911:
  2293  03C9  2ACB               	goto	l2773
  2294  03CA                     u2910:
  2295  03CA                     l2847:
  2296                           
  2297                           ;MasterMain.c: 232:                 ok = 0;
  2298  03CA  01B8               	clrf	_ok
  2299  03CB  2879               	goto	l2637
  2300  03CC                     l117:	
  2301                           ;MasterMain.c: 235:         }
  2302                           
  2303  03CC  2879               	goto	l2637
  2304  03CD  120A  118A  280C   	ljmp	start
  2305  03D0                     __end_of_main:
  2306                           
  2307                           	psect	text1
  2308  03D0                     __ptext1:	
  2309 ;; *************** function _step *****************
  2310 ;; Defined at:
  2311 ;;		line 244 in file "MasterMain.c"
  2312 ;; Parameters:    Size  Location     Type
  2313 ;;  steps           1    wreg     unsigned char 
  2314 ;;  dir             1    3[COMMON] unsigned char 
  2315 ;; Auto vars:     Size  Location     Type
  2316 ;;  steps           1    4[BANK0 ] unsigned char 
  2317 ;;  i               2    2[BANK0 ] int 
  2318 ;;  i               2    0[BANK0 ] int 
  2319 ;; Return value:  Size  Location     Type
  2320 ;;                  1    wreg      void 
  2321 ;; Registers used:
  2322 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2323 ;; Tracked objects:
  2324 ;;		On entry : 0/0
  2325 ;;		On exit  : 0/0
  2326 ;;		Unchanged: 0/0
  2327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2328 ;;      Params:         1       0       0       0       0
  2329 ;;      Locals:         0       5       0       0       0
  2330 ;;      Temps:          2       0       0       0       0
  2331 ;;      Totals:         3       5       0       0       0
  2332 ;;Total ram usage:        8 bytes
  2333 ;; Hardware stack levels used:    1
  2334 ;; Hardware stack levels required when called:    1
  2335 ;; This function calls:
  2336 ;;		Nothing
  2337 ;; This function is called by:
  2338 ;;		_main
  2339 ;; This function uses a non-reentrant model
  2340 ;;
  2341                           
  2342                           
  2343                           ;psect for function _step
  2344  03D0                     _step:
  2345                           
  2346                           ;incstack = 0
  2347                           ; Regs used in _step: [wreg-fsr0h+status,2+status,0]
  2348                           ;step@steps stored from wreg
  2349  03D0  1283               	bcf	3,5	;RP0=0, select bank0
  2350  03D1  1303               	bcf	3,6	;RP1=0, select bank0
  2351  03D2  00A4               	movwf	step@steps
  2352  03D3                     l2467:
  2353                           
  2354                           ;MasterMain.c: 246:     switch(dir){
  2355  03D3  2C86               	goto	l2523
  2356  03D4                     l2469:
  2357                           
  2358                           ;MasterMain.c: 248:             for (int i = 0; i<steps; i++){
  2359  03D4  01A0               	clrf	step@i
  2360  03D5  01A1               	clrf	step@i+1
  2361  03D6  2C1F               	goto	l2493
  2362  03D7                     l2471:
  2363                           
  2364                           ;MasterMain.c: 249:                 PORTA &= ~14;
  2365  03D7  30F1               	movlw	241
  2366  03D8  00F4               	movwf	??_step
  2367  03D9  0874               	movf	??_step,w
  2368  03DA  1283               	bcf	3,5	;RP0=0, select bank0
  2369  03DB  1303               	bcf	3,6	;RP1=0, select bank0
  2370  03DC  0585               	andwf	5,f	;volatile
  2371  03DD                     l2473:
  2372                           
  2373                           ;MasterMain.c: 250:                 PORTA |= 1;
  2374  03DD  1405               	bsf	5,0	;volatile
  2375  03DE                     l2475:
  2376                           
  2377                           ;MasterMain.c: 251:                 _delay((unsigned long)((10)*(4000000/4000.0)));
  2378  03DE  300D               	movlw	13
  2379  03DF  00F5               	movwf	??_step+1
  2380  03E0  30FB               	movlw	251
  2381  03E1  00F4               	movwf	??_step
  2382  03E2                     u2957:
  2383  03E2  0BF4               	decfsz	??_step,f
  2384  03E3  2BE2               	goto	u2957
  2385  03E4  0BF5               	decfsz	??_step+1,f
  2386  03E5  2BE2               	goto	u2957
  2387  03E6  2BE7               	nop2
  2388  03E7                     l2477:
  2389                           
  2390                           ;MasterMain.c: 252:                 PORTA &= ~13;
  2391  03E7  30F2               	movlw	242
  2392  03E8  00F4               	movwf	??_step
  2393  03E9  0874               	movf	??_step,w
  2394  03EA  1283               	bcf	3,5	;RP0=0, select bank0
  2395  03EB  1303               	bcf	3,6	;RP1=0, select bank0
  2396  03EC  0585               	andwf	5,f	;volatile
  2397  03ED                     l2479:
  2398                           
  2399                           ;MasterMain.c: 253:                 PORTA |= 2;
  2400  03ED  1485               	bsf	5,1	;volatile
  2401                           
  2402                           ;MasterMain.c: 254:                 _delay((unsigned long)((10)*(4000000/4000.0)));
  2403  03EE  300D               	movlw	13
  2404  03EF  00F5               	movwf	??_step+1
  2405  03F0  30FB               	movlw	251
  2406  03F1  00F4               	movwf	??_step
  2407  03F2                     u2967:
  2408  03F2  0BF4               	decfsz	??_step,f
  2409  03F3  2BF2               	goto	u2967
  2410  03F4  0BF5               	decfsz	??_step+1,f
  2411  03F5  2BF2               	goto	u2967
  2412  03F6  2BF7               	nop2
  2413  03F7                     l2481:
  2414                           
  2415                           ;MasterMain.c: 255:                 PORTA &= ~11;
  2416  03F7  30F4               	movlw	244
  2417  03F8  00F4               	movwf	??_step
  2418  03F9  0874               	movf	??_step,w
  2419  03FA  1283               	bcf	3,5	;RP0=0, select bank0
  2420  03FB  1303               	bcf	3,6	;RP1=0, select bank0
  2421  03FC  0585               	andwf	5,f	;volatile
  2422  03FD                     l2483:
  2423                           
  2424                           ;MasterMain.c: 256:                 PORTA |= 4;
  2425  03FD  1505               	bsf	5,2	;volatile
  2426  03FE                     l2485:
  2427                           
  2428                           ;MasterMain.c: 257:                 _delay((unsigned long)((10)*(4000000/4000.0)));
  2429  03FE  300D               	movlw	13
  2430  03FF  00F5               	movwf	??_step+1
  2431  0400  30FB               	movlw	251
  2432  0401  00F4               	movwf	??_step
  2433  0402                     u2977:
  2434  0402  0BF4               	decfsz	??_step,f
  2435  0403  2C02               	goto	u2977
  2436  0404  0BF5               	decfsz	??_step+1,f
  2437  0405  2C02               	goto	u2977
  2438  0406  2C07               	nop2
  2439                           
  2440                           ;MasterMain.c: 258:                 PORTA &= ~5;
  2441  0407  30FA               	movlw	250
  2442  0408  00F4               	movwf	??_step
  2443  0409  0874               	movf	??_step,w
  2444  040A  1283               	bcf	3,5	;RP0=0, select bank0
  2445  040B  1303               	bcf	3,6	;RP1=0, select bank0
  2446  040C  0585               	andwf	5,f	;volatile
  2447  040D                     l2487:
  2448                           
  2449                           ;MasterMain.c: 259:                 PORTA |= 8;
  2450  040D  1585               	bsf	5,3	;volatile
  2451  040E                     l2489:
  2452                           
  2453                           ;MasterMain.c: 260:                 _delay((unsigned long)((10)*(4000000/4000.0)));
  2454  040E  300D               	movlw	13
  2455  040F  00F5               	movwf	??_step+1
  2456  0410  30FB               	movlw	251
  2457  0411  00F4               	movwf	??_step
  2458  0412                     u2987:
  2459  0412  0BF4               	decfsz	??_step,f
  2460  0413  2C12               	goto	u2987
  2461  0414  0BF5               	decfsz	??_step+1,f
  2462  0415  2C12               	goto	u2987
  2463  0416  2C17               	nop2
  2464  0417                     l2491:
  2465                           
  2466                           ;MasterMain.c: 261:             }
  2467  0417  3001               	movlw	1
  2468  0418  1283               	bcf	3,5	;RP0=0, select bank0
  2469  0419  1303               	bcf	3,6	;RP1=0, select bank0
  2470  041A  07A0               	addwf	step@i,f
  2471  041B  1803               	skipnc
  2472  041C  0AA1               	incf	step@i+1,f
  2473  041D  3000               	movlw	0
  2474  041E  07A1               	addwf	step@i+1,f
  2475  041F                     l2493:
  2476  041F  0821               	movf	step@i+1,w
  2477  0420  3A80               	xorlw	128
  2478  0421  00F4               	movwf	??_step
  2479  0422  3080               	movlw	128
  2480  0423  0274               	subwf	??_step,w
  2481  0424  1D03               	skipz
  2482  0425  2C28               	goto	u2505
  2483  0426  0824               	movf	step@steps,w
  2484  0427  0220               	subwf	step@i,w
  2485  0428                     u2505:
  2486  0428  1C03               	skipc
  2487  0429  2C2B               	goto	u2501
  2488  042A  2C2C               	goto	u2500
  2489  042B                     u2501:
  2490  042B  2BD7               	goto	l2471
  2491  042C                     u2500:
  2492  042C  2C96               	goto	l151
  2493  042D                     l2495:
  2494                           
  2495                           ;MasterMain.c: 264:             for (int i = 0; i<steps; i++){
  2496  042D  01A2               	clrf	step@i_309
  2497  042E  01A3               	clrf	step@i_309+1
  2498  042F  2C78               	goto	l2519
  2499  0430                     l2497:
  2500                           
  2501                           ;MasterMain.c: 265:                 PORTA &= ~5;
  2502  0430  30FA               	movlw	250
  2503  0431  00F4               	movwf	??_step
  2504  0432  0874               	movf	??_step,w
  2505  0433  1283               	bcf	3,5	;RP0=0, select bank0
  2506  0434  1303               	bcf	3,6	;RP1=0, select bank0
  2507  0435  0585               	andwf	5,f	;volatile
  2508  0436                     l2499:
  2509                           
  2510                           ;MasterMain.c: 266:                 PORTA |= 8;
  2511  0436  1585               	bsf	5,3	;volatile
  2512  0437                     l2501:
  2513                           
  2514                           ;MasterMain.c: 267:                 _delay((unsigned long)((10)*(4000000/4000.0)));
  2515  0437  300D               	movlw	13
  2516  0438  00F5               	movwf	??_step+1
  2517  0439  30FB               	movlw	251
  2518  043A  00F4               	movwf	??_step
  2519  043B                     u2997:
  2520  043B  0BF4               	decfsz	??_step,f
  2521  043C  2C3B               	goto	u2997
  2522  043D  0BF5               	decfsz	??_step+1,f
  2523  043E  2C3B               	goto	u2997
  2524  043F  2C40               	nop2
  2525  0440                     l2503:
  2526                           
  2527                           ;MasterMain.c: 269:                 PORTA &= ~11;
  2528  0440  30F4               	movlw	244
  2529  0441  00F4               	movwf	??_step
  2530  0442  0874               	movf	??_step,w
  2531  0443  1283               	bcf	3,5	;RP0=0, select bank0
  2532  0444  1303               	bcf	3,6	;RP1=0, select bank0
  2533  0445  0585               	andwf	5,f	;volatile
  2534  0446                     l2505:
  2535                           
  2536                           ;MasterMain.c: 270:                 PORTA |= 4;
  2537  0446  1505               	bsf	5,2	;volatile
  2538                           
  2539                           ;MasterMain.c: 271:                 _delay((unsigned long)((10)*(4000000/4000.0)));
  2540  0447  300D               	movlw	13
  2541  0448  00F5               	movwf	??_step+1
  2542  0449  30FB               	movlw	251
  2543  044A  00F4               	movwf	??_step
  2544  044B                     u3007:
  2545  044B  0BF4               	decfsz	??_step,f
  2546  044C  2C4B               	goto	u3007
  2547  044D  0BF5               	decfsz	??_step+1,f
  2548  044E  2C4B               	goto	u3007
  2549  044F  2C50               	nop2
  2550  0450                     l2507:
  2551                           
  2552                           ;MasterMain.c: 274:                 PORTA &= ~13;
  2553  0450  30F2               	movlw	242
  2554  0451  00F4               	movwf	??_step
  2555  0452  0874               	movf	??_step,w
  2556  0453  1283               	bcf	3,5	;RP0=0, select bank0
  2557  0454  1303               	bcf	3,6	;RP1=0, select bank0
  2558  0455  0585               	andwf	5,f	;volatile
  2559  0456                     l2509:
  2560                           
  2561                           ;MasterMain.c: 275:                 PORTA |= 2;
  2562  0456  1485               	bsf	5,1	;volatile
  2563  0457                     l2511:
  2564                           
  2565                           ;MasterMain.c: 276:                 _delay((unsigned long)((10)*(4000000/4000.0)));
  2566  0457  300D               	movlw	13
  2567  0458  00F5               	movwf	??_step+1
  2568  0459  30FB               	movlw	251
  2569  045A  00F4               	movwf	??_step
  2570  045B                     u3017:
  2571  045B  0BF4               	decfsz	??_step,f
  2572  045C  2C5B               	goto	u3017
  2573  045D  0BF5               	decfsz	??_step+1,f
  2574  045E  2C5B               	goto	u3017
  2575  045F  2C60               	nop2
  2576                           
  2577                           ;MasterMain.c: 279:                 PORTA &= ~14;
  2578  0460  30F1               	movlw	241
  2579  0461  00F4               	movwf	??_step
  2580  0462  0874               	movf	??_step,w
  2581  0463  1283               	bcf	3,5	;RP0=0, select bank0
  2582  0464  1303               	bcf	3,6	;RP1=0, select bank0
  2583  0465  0585               	andwf	5,f	;volatile
  2584  0466                     l2513:
  2585                           
  2586                           ;MasterMain.c: 280:                 PORTA |= 1;
  2587  0466  1405               	bsf	5,0	;volatile
  2588  0467                     l2515:
  2589                           
  2590                           ;MasterMain.c: 281:                 _delay((unsigned long)((10)*(4000000/4000.0)));
  2591  0467  300D               	movlw	13
  2592  0468  00F5               	movwf	??_step+1
  2593  0469  30FB               	movlw	251
  2594  046A  00F4               	movwf	??_step
  2595  046B                     u3027:
  2596  046B  0BF4               	decfsz	??_step,f
  2597  046C  2C6B               	goto	u3027
  2598  046D  0BF5               	decfsz	??_step+1,f
  2599  046E  2C6B               	goto	u3027
  2600  046F  2C70               	nop2
  2601  0470                     l2517:
  2602                           
  2603                           ;MasterMain.c: 283:             }
  2604  0470  3001               	movlw	1
  2605  0471  1283               	bcf	3,5	;RP0=0, select bank0
  2606  0472  1303               	bcf	3,6	;RP1=0, select bank0
  2607  0473  07A2               	addwf	step@i_309,f
  2608  0474  1803               	skipnc
  2609  0475  0AA3               	incf	step@i_309+1,f
  2610  0476  3000               	movlw	0
  2611  0477  07A3               	addwf	step@i_309+1,f
  2612  0478                     l2519:
  2613  0478  0823               	movf	step@i_309+1,w
  2614  0479  3A80               	xorlw	128
  2615  047A  00F4               	movwf	??_step
  2616  047B  3080               	movlw	128
  2617  047C  0274               	subwf	??_step,w
  2618  047D  1D03               	skipz
  2619  047E  2C81               	goto	u2515
  2620  047F  0824               	movf	step@steps,w
  2621  0480  0222               	subwf	step@i_309,w
  2622  0481                     u2515:
  2623  0481  1C03               	skipc
  2624  0482  2C84               	goto	u2511
  2625  0483  2C85               	goto	u2510
  2626  0484                     u2511:
  2627  0484  2C30               	goto	l2497
  2628  0485                     u2510:
  2629  0485  2C96               	goto	l151
  2630  0486                     l2523:
  2631  0486  0873               	movf	step@dir,w
  2632  0487  00F4               	movwf	??_step
  2633  0488  01F5               	clrf	??_step+1
  2634                           
  2635                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2636                           ; Switch size 1, requested type "simple"
  2637                           ; Number of cases is 1, Range of values is 0 to 0
  2638                           ; switch strategies available:
  2639                           ; Name         Instructions Cycles
  2640                           ; simple_byte            4     3 (average)
  2641                           ; direct_byte           11     8 (fixed)
  2642                           ; jumptable            260     6 (fixed)
  2643                           ;	Chosen strategy is simple_byte
  2644  0489  0875               	movf	??_step+1,w
  2645  048A  3A00               	xorlw	0	; case 0
  2646  048B  1903               	skipnz
  2647  048C  2C8E               	goto	l2957
  2648  048D  2C96               	goto	l151
  2649  048E                     l2957:
  2650                           
  2651                           ; Switch size 1, requested type "simple"
  2652                           ; Number of cases is 2, Range of values is 0 to 1
  2653                           ; switch strategies available:
  2654                           ; Name         Instructions Cycles
  2655                           ; simple_byte            7     4 (average)
  2656                           ; direct_byte           14     8 (fixed)
  2657                           ; jumptable            260     6 (fixed)
  2658                           ;	Chosen strategy is simple_byte
  2659  048E  0874               	movf	??_step,w
  2660  048F  3A00               	xorlw	0	; case 0
  2661  0490  1903               	skipnz
  2662  0491  2BD4               	goto	l2469
  2663  0492  3A01               	xorlw	1	; case 1
  2664  0493  1903               	skipnz
  2665  0494  2C2D               	goto	l2495
  2666  0495  2C96               	goto	l151
  2667  0496                     l151:
  2668  0496  0008               	return
  2669  0497                     __end_of_step:
  2670                           
  2671                           	psect	text2
  2672  0EA8                     __ptext2:	
  2673 ;; *************** function _itoa *****************
  2674 ;; Defined at:
  2675 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\itoa.c"
  2676 ;; Parameters:    Size  Location     Type
  2677 ;;  buf             1    wreg     PTR unsigned char 
  2678 ;;		 -> numero(10), 
  2679 ;;  val             2   12[BANK0 ] int 
  2680 ;;  base            2   14[BANK0 ] int 
  2681 ;; Auto vars:     Size  Location     Type
  2682 ;;  buf             1   18[BANK0 ] PTR unsigned char 
  2683 ;;		 -> numero(10), 
  2684 ;;  cp              1    0        PTR unsigned char 
  2685 ;;		 -> numero(10), 
  2686 ;; Return value:  Size  Location     Type
  2687 ;;                  1    wreg      PTR unsigned char 
  2688 ;; Registers used:
  2689 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2690 ;; Tracked objects:
  2691 ;;		On entry : 0/0
  2692 ;;		On exit  : 0/0
  2693 ;;		Unchanged: 0/0
  2694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2695 ;;      Params:         0       4       0       0       0
  2696 ;;      Locals:         0       2       0       0       0
  2697 ;;      Temps:          0       1       0       0       0
  2698 ;;      Totals:         0       7       0       0       0
  2699 ;;Total ram usage:        7 bytes
  2700 ;; Hardware stack levels used:    1
  2701 ;; Hardware stack levels required when called:    3
  2702 ;; This function calls:
  2703 ;;		_utoa
  2704 ;; This function is called by:
  2705 ;;		_main
  2706 ;; This function uses a non-reentrant model
  2707 ;;
  2708                           
  2709                           
  2710                           ;psect for function _itoa
  2711  0EA8                     _itoa:
  2712                           
  2713                           ;incstack = 0
  2714                           ; Regs used in _itoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2715                           ;itoa@buf stored from wreg
  2716  0EA8  1283               	bcf	3,5	;RP0=0, select bank0
  2717  0EA9  1303               	bcf	3,6	;RP1=0, select bank0
  2718  0EAA  00B2               	movwf	itoa@buf
  2719  0EAB                     l2593:
  2720  0EAB                     l2595:
  2721  0EAB  1FAD               	btfss	itoa@val+1,7
  2722  0EAC  2EAE               	goto	u2601
  2723  0EAD  2EAF               	goto	u2600
  2724  0EAE                     u2601:
  2725  0EAE  2EBF               	goto	l2603
  2726  0EAF                     u2600:
  2727  0EAF                     l2597:
  2728  0EAF  302D               	movlw	45
  2729  0EB0  00B0               	movwf	??_itoa
  2730  0EB1  0832               	movf	itoa@buf,w
  2731  0EB2  0084               	movwf	4
  2732  0EB3  0830               	movf	??_itoa,w
  2733  0EB4  1383               	bcf	3,7	;select IRP bank0
  2734  0EB5  0080               	movwf	0
  2735  0EB6                     l2599:
  2736  0EB6  3001               	movlw	1
  2737  0EB7  00B0               	movwf	??_itoa
  2738  0EB8  0830               	movf	??_itoa,w
  2739  0EB9  07B2               	addwf	itoa@buf,f
  2740  0EBA                     l2601:
  2741  0EBA  09AC               	comf	itoa@val,f
  2742  0EBB  09AD               	comf	itoa@val+1,f
  2743  0EBC  0AAC               	incf	itoa@val,f
  2744  0EBD  1903               	skipnz
  2745  0EBE  0AAD               	incf	itoa@val+1,f
  2746  0EBF                     l2603:
  2747  0EBF  082D               	movf	itoa@val+1,w
  2748  0EC0  00A4               	movwf	utoa@val+1
  2749  0EC1  082C               	movf	itoa@val,w
  2750  0EC2  00A3               	movwf	utoa@val
  2751  0EC3  082F               	movf	itoa@base+1,w
  2752  0EC4  00A6               	movwf	utoa@base+1
  2753  0EC5  082E               	movf	itoa@base,w
  2754  0EC6  00A5               	movwf	utoa@base
  2755  0EC7  0832               	movf	itoa@buf,w
  2756  0EC8  120A  118A  26B6  120A  158A  	fcall	_utoa
  2757  0ECD                     l853:
  2758  0ECD  0008               	return
  2759  0ECE                     __end_of_itoa:
  2760                           
  2761                           	psect	text3
  2762  06B6                     __ptext3:	
  2763 ;; *************** function _utoa *****************
  2764 ;; Defined at:
  2765 ;;		line 17 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\itoa.c"
  2766 ;; Parameters:    Size  Location     Type
  2767 ;;  buf             1    wreg     PTR unsigned char 
  2768 ;;		 -> numero(10), 
  2769 ;;  val             2    3[BANK0 ] unsigned int 
  2770 ;;  base            2    5[BANK0 ] int 
  2771 ;; Auto vars:     Size  Location     Type
  2772 ;;  buf             1   11[BANK0 ] PTR unsigned char 
  2773 ;;		 -> numero(10), 
  2774 ;;  v               2    8[BANK0 ] unsigned int 
  2775 ;;  c               1   10[BANK0 ] unsigned char 
  2776 ;; Return value:  Size  Location     Type
  2777 ;;                  1    wreg      PTR unsigned char 
  2778 ;; Registers used:
  2779 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2780 ;; Tracked objects:
  2781 ;;		On entry : 0/0
  2782 ;;		On exit  : 0/0
  2783 ;;		Unchanged: 0/0
  2784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2785 ;;      Params:         0       4       0       0       0
  2786 ;;      Locals:         0       4       0       0       0
  2787 ;;      Temps:          0       1       0       0       0
  2788 ;;      Totals:         0       9       0       0       0
  2789 ;;Total ram usage:        9 bytes
  2790 ;; Hardware stack levels used:    1
  2791 ;; Hardware stack levels required when called:    2
  2792 ;; This function calls:
  2793 ;;		___lwdiv
  2794 ;;		___lwmod
  2795 ;; This function is called by:
  2796 ;;		_itoa
  2797 ;; This function uses a non-reentrant model
  2798 ;;
  2799                           
  2800                           
  2801                           ;psect for function _utoa
  2802  06B6                     _utoa:
  2803                           
  2804                           ;incstack = 0
  2805                           ; Regs used in _utoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2806                           ;utoa@buf stored from wreg
  2807  06B6  1283               	bcf	3,5	;RP0=0, select bank0
  2808  06B7  1303               	bcf	3,6	;RP1=0, select bank0
  2809  06B8  00AB               	movwf	utoa@buf
  2810  06B9                     l2385:
  2811  06B9  0824               	movf	utoa@val+1,w
  2812  06BA  00A9               	movwf	utoa@v+1
  2813  06BB  0823               	movf	utoa@val,w
  2814  06BC  00A8               	movwf	utoa@v
  2815  06BD                     l2387:
  2816  06BD  0826               	movf	utoa@base+1,w
  2817  06BE  00F4               	movwf	___lwdiv@divisor+1
  2818  06BF  0825               	movf	utoa@base,w
  2819  06C0  00F3               	movwf	___lwdiv@divisor
  2820  06C1  0829               	movf	utoa@v+1,w
  2821  06C2  00F6               	movwf	___lwdiv@dividend+1
  2822  06C3  0828               	movf	utoa@v,w
  2823  06C4  00F5               	movwf	___lwdiv@dividend
  2824  06C5  120A  158A  27BA  120A  118A  	fcall	___lwdiv
  2825  06CA  0874               	movf	?___lwdiv+1,w
  2826  06CB  1283               	bcf	3,5	;RP0=0, select bank0
  2827  06CC  1303               	bcf	3,6	;RP1=0, select bank0
  2828  06CD  00A9               	movwf	utoa@v+1
  2829  06CE  0873               	movf	?___lwdiv,w
  2830  06CF  00A8               	movwf	utoa@v
  2831  06D0                     l2389:
  2832  06D0  3001               	movlw	1
  2833  06D1  00A7               	movwf	??_utoa
  2834  06D2  0827               	movf	??_utoa,w
  2835  06D3  07AB               	addwf	utoa@buf,f
  2836  06D4                     l2391:
  2837  06D4  0828               	movf	utoa@v,w
  2838  06D5  0429               	iorwf	utoa@v+1,w
  2839  06D6  1D03               	btfss	3,2
  2840  06D7  2ED9               	goto	u2431
  2841  06D8  2EDA               	goto	u2430
  2842  06D9                     u2431:
  2843  06D9  2EBD               	goto	l2387
  2844  06DA                     u2430:
  2845  06DA                     l2393:
  2846  06DA  082B               	movf	utoa@buf,w
  2847  06DB  0084               	movwf	4
  2848  06DC  1383               	bcf	3,7	;select IRP bank0
  2849  06DD  0180               	clrf	0
  2850  06DE                     l2395:
  2851  06DE  3001               	movlw	1
  2852  06DF  02AB               	subwf	utoa@buf,f
  2853  06E0                     l2397:
  2854  06E0  0826               	movf	utoa@base+1,w
  2855  06E1  00F4               	movwf	___lwmod@divisor+1
  2856  06E2  0825               	movf	utoa@base,w
  2857  06E3  00F3               	movwf	___lwmod@divisor
  2858  06E4  0824               	movf	utoa@val+1,w
  2859  06E5  00F6               	movwf	___lwmod@dividend+1
  2860  06E6  0823               	movf	utoa@val,w
  2861  06E7  00F5               	movwf	___lwmod@dividend
  2862  06E8  120A  158A  2738  120A  118A  	fcall	___lwmod
  2863  06ED  0873               	movf	?___lwmod,w
  2864  06EE  1283               	bcf	3,5	;RP0=0, select bank0
  2865  06EF  1303               	bcf	3,6	;RP1=0, select bank0
  2866  06F0  00A7               	movwf	??_utoa
  2867  06F1  0827               	movf	??_utoa,w
  2868  06F2  00AA               	movwf	utoa@c
  2869  06F3                     l2399:
  2870  06F3  0826               	movf	utoa@base+1,w
  2871  06F4  00F4               	movwf	___lwdiv@divisor+1
  2872  06F5  0825               	movf	utoa@base,w
  2873  06F6  00F3               	movwf	___lwdiv@divisor
  2874  06F7  0824               	movf	utoa@val+1,w
  2875  06F8  00F6               	movwf	___lwdiv@dividend+1
  2876  06F9  0823               	movf	utoa@val,w
  2877  06FA  00F5               	movwf	___lwdiv@dividend
  2878  06FB  120A  158A  27BA  120A  118A  	fcall	___lwdiv
  2879  0700  0874               	movf	?___lwdiv+1,w
  2880  0701  1283               	bcf	3,5	;RP0=0, select bank0
  2881  0702  1303               	bcf	3,6	;RP1=0, select bank0
  2882  0703  00A4               	movwf	utoa@val+1
  2883  0704  0873               	movf	?___lwdiv,w
  2884  0705  00A3               	movwf	utoa@val
  2885  0706                     l2401:
  2886  0706  300A               	movlw	10
  2887  0707  022A               	subwf	utoa@c,w
  2888  0708  1C03               	skipc
  2889  0709  2F0B               	goto	u2441
  2890  070A  2F0C               	goto	u2440
  2891  070B                     u2441:
  2892  070B  2F10               	goto	l859
  2893  070C                     u2440:
  2894  070C                     l2403:
  2895  070C  3007               	movlw	7
  2896  070D  00A7               	movwf	??_utoa
  2897  070E  0827               	movf	??_utoa,w
  2898  070F  07AA               	addwf	utoa@c,f
  2899  0710                     l859:
  2900  0710  3030               	movlw	48
  2901  0711  00A7               	movwf	??_utoa
  2902  0712  0827               	movf	??_utoa,w
  2903  0713  07AA               	addwf	utoa@c,f
  2904  0714                     l2405:
  2905  0714  082A               	movf	utoa@c,w
  2906  0715  00A7               	movwf	??_utoa
  2907  0716  082B               	movf	utoa@buf,w
  2908  0717  0084               	movwf	4
  2909  0718  0827               	movf	??_utoa,w
  2910  0719  1383               	bcf	3,7	;select IRP bank0
  2911  071A  0080               	movwf	0
  2912  071B                     l2407:
  2913  071B  3001               	movlw	1
  2914  071C  02AB               	subwf	utoa@buf,f
  2915  071D                     l2409:
  2916  071D  0823               	movf	utoa@val,w
  2917  071E  0424               	iorwf	utoa@val+1,w
  2918  071F  1D03               	btfss	3,2
  2919  0720  2F22               	goto	u2451
  2920  0721  2F23               	goto	u2450
  2921  0722                     u2451:
  2922  0722  2EE0               	goto	l2397
  2923  0723                     u2450:
  2924  0723                     l2411:
  2925                           
  2926                           ;	Return value of _utoa is never used
  2927  0723  3001               	movlw	1
  2928  0724  00A7               	movwf	??_utoa
  2929  0725  0827               	movf	??_utoa,w
  2930  0726  07AB               	addwf	utoa@buf,f
  2931  0727                     l861:
  2932  0727  0008               	return
  2933  0728                     __end_of_utoa:
  2934                           
  2935                           	psect	text4
  2936  0F38                     __ptext4:	
  2937 ;; *************** function ___lwmod *****************
  2938 ;; Defined at:
  2939 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  2940 ;; Parameters:    Size  Location     Type
  2941 ;;  divisor         2    3[COMMON] unsigned int 
  2942 ;;  dividend        2    5[COMMON] unsigned int 
  2943 ;; Auto vars:     Size  Location     Type
  2944 ;;  counter         1    0[BANK0 ] unsigned char 
  2945 ;; Return value:  Size  Location     Type
  2946 ;;                  2    3[COMMON] unsigned int 
  2947 ;; Registers used:
  2948 ;;		wreg, status,2, status,0
  2949 ;; Tracked objects:
  2950 ;;		On entry : 0/0
  2951 ;;		On exit  : 0/0
  2952 ;;		Unchanged: 0/0
  2953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2954 ;;      Params:         4       0       0       0       0
  2955 ;;      Locals:         0       1       0       0       0
  2956 ;;      Temps:          1       0       0       0       0
  2957 ;;      Totals:         5       1       0       0       0
  2958 ;;Total ram usage:        6 bytes
  2959 ;; Hardware stack levels used:    1
  2960 ;; Hardware stack levels required when called:    1
  2961 ;; This function calls:
  2962 ;;		Nothing
  2963 ;; This function is called by:
  2964 ;;		_utoa
  2965 ;; This function uses a non-reentrant model
  2966 ;;
  2967                           
  2968                           
  2969                           ;psect for function ___lwmod
  2970  0F38                     ___lwmod:
  2971  0F38                     l2315:	
  2972                           ;incstack = 0
  2973                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2974                           
  2975  0F38  0873               	movf	___lwmod@divisor,w
  2976  0F39  0474               	iorwf	___lwmod@divisor+1,w
  2977  0F3A  1903               	btfsc	3,2
  2978  0F3B  2F3D               	goto	u2281
  2979  0F3C  2F3E               	goto	u2280
  2980  0F3D                     u2281:
  2981  0F3D  2F6F               	goto	l2333
  2982  0F3E                     u2280:
  2983  0F3E                     l2317:
  2984  0F3E  1283               	bcf	3,5	;RP0=0, select bank0
  2985  0F3F  1303               	bcf	3,6	;RP1=0, select bank0
  2986  0F40  01A0               	clrf	___lwmod@counter
  2987  0F41  0AA0               	incf	___lwmod@counter,f
  2988  0F42  2F4E               	goto	l2323
  2989  0F43                     l2319:
  2990  0F43  3001               	movlw	1
  2991  0F44                     u2295:
  2992  0F44  1003               	clrc
  2993  0F45  0DF3               	rlf	___lwmod@divisor,f
  2994  0F46  0DF4               	rlf	___lwmod@divisor+1,f
  2995  0F47  3EFF               	addlw	-1
  2996  0F48  1D03               	skipz
  2997  0F49  2F44               	goto	u2295
  2998  0F4A                     l2321:
  2999  0F4A  3001               	movlw	1
  3000  0F4B  00F7               	movwf	??___lwmod
  3001  0F4C  0877               	movf	??___lwmod,w
  3002  0F4D  07A0               	addwf	___lwmod@counter,f
  3003  0F4E                     l2323:
  3004  0F4E  1FF4               	btfss	___lwmod@divisor+1,7
  3005  0F4F  2F51               	goto	u2301
  3006  0F50  2F52               	goto	u2300
  3007  0F51                     u2301:
  3008  0F51  2F43               	goto	l2319
  3009  0F52                     u2300:
  3010  0F52                     l2325:
  3011  0F52  0874               	movf	___lwmod@divisor+1,w
  3012  0F53  0276               	subwf	___lwmod@dividend+1,w
  3013  0F54  1D03               	skipz
  3014  0F55  2F58               	goto	u2315
  3015  0F56  0873               	movf	___lwmod@divisor,w
  3016  0F57  0275               	subwf	___lwmod@dividend,w
  3017  0F58                     u2315:
  3018  0F58  1C03               	skipc
  3019  0F59  2F5B               	goto	u2311
  3020  0F5A  2F5C               	goto	u2310
  3021  0F5B                     u2311:
  3022  0F5B  2F62               	goto	l2329
  3023  0F5C                     u2310:
  3024  0F5C                     l2327:
  3025  0F5C  0873               	movf	___lwmod@divisor,w
  3026  0F5D  02F5               	subwf	___lwmod@dividend,f
  3027  0F5E  0874               	movf	___lwmod@divisor+1,w
  3028  0F5F  1C03               	skipc
  3029  0F60  03F6               	decf	___lwmod@dividend+1,f
  3030  0F61  02F6               	subwf	___lwmod@dividend+1,f
  3031  0F62                     l2329:
  3032  0F62  3001               	movlw	1
  3033  0F63                     u2325:
  3034  0F63  1003               	clrc
  3035  0F64  0CF4               	rrf	___lwmod@divisor+1,f
  3036  0F65  0CF3               	rrf	___lwmod@divisor,f
  3037  0F66  3EFF               	addlw	-1
  3038  0F67  1D03               	skipz
  3039  0F68  2F63               	goto	u2325
  3040  0F69                     l2331:
  3041  0F69  3001               	movlw	1
  3042  0F6A  02A0               	subwf	___lwmod@counter,f
  3043  0F6B  1D03               	btfss	3,2
  3044  0F6C  2F6E               	goto	u2331
  3045  0F6D  2F6F               	goto	u2330
  3046  0F6E                     u2331:
  3047  0F6E  2F52               	goto	l2325
  3048  0F6F                     u2330:
  3049  0F6F                     l2333:
  3050  0F6F  0876               	movf	___lwmod@dividend+1,w
  3051  0F70  00F4               	movwf	?___lwmod+1
  3052  0F71  0875               	movf	___lwmod@dividend,w
  3053  0F72  00F3               	movwf	?___lwmod
  3054  0F73                     l681:
  3055  0F73  0008               	return
  3056  0F74                     __end_of___lwmod:
  3057                           
  3058                           	psect	text5
  3059  0FBA                     __ptext5:	
  3060 ;; *************** function ___lwdiv *****************
  3061 ;; Defined at:
  3062 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  3063 ;; Parameters:    Size  Location     Type
  3064 ;;  divisor         2    3[COMMON] unsigned int 
  3065 ;;  dividend        2    5[COMMON] unsigned int 
  3066 ;; Auto vars:     Size  Location     Type
  3067 ;;  quotient        2    1[BANK0 ] unsigned int 
  3068 ;;  counter         1    0[BANK0 ] unsigned char 
  3069 ;; Return value:  Size  Location     Type
  3070 ;;                  2    3[COMMON] unsigned int 
  3071 ;; Registers used:
  3072 ;;		wreg, status,2, status,0
  3073 ;; Tracked objects:
  3074 ;;		On entry : 0/0
  3075 ;;		On exit  : 0/0
  3076 ;;		Unchanged: 0/0
  3077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3078 ;;      Params:         4       0       0       0       0
  3079 ;;      Locals:         0       3       0       0       0
  3080 ;;      Temps:          1       0       0       0       0
  3081 ;;      Totals:         5       3       0       0       0
  3082 ;;Total ram usage:        8 bytes
  3083 ;; Hardware stack levels used:    1
  3084 ;; Hardware stack levels required when called:    1
  3085 ;; This function calls:
  3086 ;;		Nothing
  3087 ;; This function is called by:
  3088 ;;		_utoa
  3089 ;; This function uses a non-reentrant model
  3090 ;;
  3091                           
  3092                           
  3093                           ;psect for function ___lwdiv
  3094  0FBA                     ___lwdiv:
  3095  0FBA                     l2289:	
  3096                           ;incstack = 0
  3097                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3098                           
  3099  0FBA  1283               	bcf	3,5	;RP0=0, select bank0
  3100  0FBB  1303               	bcf	3,6	;RP1=0, select bank0
  3101  0FBC  01A1               	clrf	___lwdiv@quotient
  3102  0FBD  01A2               	clrf	___lwdiv@quotient+1
  3103  0FBE                     l2291:
  3104  0FBE  0873               	movf	___lwdiv@divisor,w
  3105  0FBF  0474               	iorwf	___lwdiv@divisor+1,w
  3106  0FC0  1903               	btfsc	3,2
  3107  0FC1  2FC3               	goto	u2211
  3108  0FC2  2FC4               	goto	u2210
  3109  0FC3                     u2211:
  3110  0FC3  2FFB               	goto	l2311
  3111  0FC4                     u2210:
  3112  0FC4                     l2293:
  3113  0FC4  01A0               	clrf	___lwdiv@counter
  3114  0FC5  0AA0               	incf	___lwdiv@counter,f
  3115  0FC6  2FD2               	goto	l2299
  3116  0FC7                     l2295:
  3117  0FC7  3001               	movlw	1
  3118  0FC8                     u2225:
  3119  0FC8  1003               	clrc
  3120  0FC9  0DF3               	rlf	___lwdiv@divisor,f
  3121  0FCA  0DF4               	rlf	___lwdiv@divisor+1,f
  3122  0FCB  3EFF               	addlw	-1
  3123  0FCC  1D03               	skipz
  3124  0FCD  2FC8               	goto	u2225
  3125  0FCE                     l2297:
  3126  0FCE  3001               	movlw	1
  3127  0FCF  00F7               	movwf	??___lwdiv
  3128  0FD0  0877               	movf	??___lwdiv,w
  3129  0FD1  07A0               	addwf	___lwdiv@counter,f
  3130  0FD2                     l2299:
  3131  0FD2  1FF4               	btfss	___lwdiv@divisor+1,7
  3132  0FD3  2FD5               	goto	u2231
  3133  0FD4  2FD6               	goto	u2230
  3134  0FD5                     u2231:
  3135  0FD5  2FC7               	goto	l2295
  3136  0FD6                     u2230:
  3137  0FD6                     l2301:
  3138  0FD6  3001               	movlw	1
  3139  0FD7                     u2245:
  3140  0FD7  1003               	clrc
  3141  0FD8  0DA1               	rlf	___lwdiv@quotient,f
  3142  0FD9  0DA2               	rlf	___lwdiv@quotient+1,f
  3143  0FDA  3EFF               	addlw	-1
  3144  0FDB  1D03               	skipz
  3145  0FDC  2FD7               	goto	u2245
  3146  0FDD  0874               	movf	___lwdiv@divisor+1,w
  3147  0FDE  0276               	subwf	___lwdiv@dividend+1,w
  3148  0FDF  1D03               	skipz
  3149  0FE0  2FE3               	goto	u2255
  3150  0FE1  0873               	movf	___lwdiv@divisor,w
  3151  0FE2  0275               	subwf	___lwdiv@dividend,w
  3152  0FE3                     u2255:
  3153  0FE3  1C03               	skipc
  3154  0FE4  2FE6               	goto	u2251
  3155  0FE5  2FE7               	goto	u2250
  3156  0FE6                     u2251:
  3157  0FE6  2FEE               	goto	l2307
  3158  0FE7                     u2250:
  3159  0FE7                     l2303:
  3160  0FE7  0873               	movf	___lwdiv@divisor,w
  3161  0FE8  02F5               	subwf	___lwdiv@dividend,f
  3162  0FE9  0874               	movf	___lwdiv@divisor+1,w
  3163  0FEA  1C03               	skipc
  3164  0FEB  03F6               	decf	___lwdiv@dividend+1,f
  3165  0FEC  02F6               	subwf	___lwdiv@dividend+1,f
  3166  0FED                     l2305:
  3167  0FED  1421               	bsf	___lwdiv@quotient,0
  3168  0FEE                     l2307:
  3169  0FEE  3001               	movlw	1
  3170  0FEF                     u2265:
  3171  0FEF  1003               	clrc
  3172  0FF0  0CF4               	rrf	___lwdiv@divisor+1,f
  3173  0FF1  0CF3               	rrf	___lwdiv@divisor,f
  3174  0FF2  3EFF               	addlw	-1
  3175  0FF3  1D03               	skipz
  3176  0FF4  2FEF               	goto	u2265
  3177  0FF5                     l2309:
  3178  0FF5  3001               	movlw	1
  3179  0FF6  02A0               	subwf	___lwdiv@counter,f
  3180  0FF7  1D03               	btfss	3,2
  3181  0FF8  2FFA               	goto	u2271
  3182  0FF9  2FFB               	goto	u2270
  3183  0FFA                     u2271:
  3184  0FFA  2FD6               	goto	l2301
  3185  0FFB                     u2270:
  3186  0FFB                     l2311:
  3187  0FFB  0822               	movf	___lwdiv@quotient+1,w
  3188  0FFC  00F4               	movwf	?___lwdiv+1
  3189  0FFD  0821               	movf	___lwdiv@quotient,w
  3190  0FFE  00F3               	movwf	?___lwdiv
  3191  0FFF                     l671:
  3192  0FFF  0008               	return
  3193  1000                     __end_of___lwdiv:
  3194                           
  3195                           	psect	text6
  3196  0790                     __ptext6:	
  3197 ;; *************** function _UARTSendString *****************
  3198 ;; Defined at:
  3199 ;;		line 49 in file "USART.c"
  3200 ;; Parameters:    Size  Location     Type
  3201 ;;  str             2    4[COMMON] PTR const unsigned char 
  3202 ;;		 -> numero(10), STR_5(3), STR_3(3), 
  3203 ;;  max_length      1    6[COMMON] const unsigned char 
  3204 ;; Auto vars:     Size  Location     Type
  3205 ;;  i               2    3[BANK0 ] int 
  3206 ;; Return value:  Size  Location     Type
  3207 ;;                  1    wreg      void 
  3208 ;; Registers used:
  3209 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3210 ;; Tracked objects:
  3211 ;;		On entry : 0/0
  3212 ;;		On exit  : 0/0
  3213 ;;		Unchanged: 0/0
  3214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3215 ;;      Params:         3       0       0       0       0
  3216 ;;      Locals:         0       2       0       0       0
  3217 ;;      Temps:          0       3       0       0       0
  3218 ;;      Totals:         3       5       0       0       0
  3219 ;;Total ram usage:        8 bytes
  3220 ;; Hardware stack levels used:    1
  3221 ;; Hardware stack levels required when called:    2
  3222 ;; This function calls:
  3223 ;;		_UARTSendChar
  3224 ;; This function is called by:
  3225 ;;		_main
  3226 ;; This function uses a non-reentrant model
  3227 ;;
  3228                           
  3229                           
  3230                           ;psect for function _UARTSendString
  3231  0790                     _UARTSendString:
  3232  0790                     l2583:	
  3233                           ;incstack = 0
  3234                           ; Regs used in _UARTSendString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3235                           
  3236                           
  3237                           ;USART.c: 50:     int i = 0;
  3238  0790  1283               	bcf	3,5	;RP0=0, select bank0
  3239  0791  1303               	bcf	3,6	;RP1=0, select bank0
  3240  0792  01A3               	clrf	UARTSendString@i
  3241  0793  01A4               	clrf	UARTSendString@i+1
  3242                           
  3243                           ;USART.c: 51:     for (i=0 ; i<max_length && str[i]!='\0' ; i++) {
  3244  0794  01A3               	clrf	UARTSendString@i
  3245  0795  01A4               	clrf	UARTSendString@i+1
  3246  0796  2FBB               	goto	l2589
  3247  0797                     l2585:
  3248                           
  3249                           ;USART.c: 52:         UARTSendChar(str[i]);
  3250  0797  0823               	movf	UARTSendString@i,w
  3251  0798  0774               	addwf	UARTSendString@str,w
  3252  0799  00A1               	movwf	??_UARTSendString+1
  3253  079A  0875               	movf	UARTSendString@str+1,w
  3254  079B  00A0               	movwf	??_UARTSendString
  3255  079C  1803               	skipnc
  3256  079D  0AA0               	incf	??_UARTSendString,f
  3257  079E  1FA3               	btfss	UARTSendString@i,7
  3258  079F  2FA1               	goto	u2560
  3259  07A0  03A0               	decf	??_UARTSendString,f
  3260  07A1                     u2560:
  3261  07A1  1283               	bcf	3,5	;RP0=0, select bank0
  3262  07A2  1303               	bcf	3,6	;RP1=0, select bank0
  3263  07A3  0820               	movf	??_UARTSendString,w
  3264  07A4  00A2               	movwf	??_UARTSendString+2
  3265  07A5  0822               	movf	??_UARTSendString+2,w
  3266  07A6  00FF               	movwf	btemp+1
  3267  07A7  0821               	movf	??_UARTSendString+1,w
  3268  07A8  0084               	movwf	4
  3269  07A9  120A  118A  2500  120A  118A  	fcall	stringtab
  3270  07AE  120A  158A  2658  120A  118A  	fcall	_UARTSendChar
  3271  07B3                     l2587:
  3272                           
  3273                           ;USART.c: 53:     }
  3274  07B3  3001               	movlw	1
  3275  07B4  1283               	bcf	3,5	;RP0=0, select bank0
  3276  07B5  1303               	bcf	3,6	;RP1=0, select bank0
  3277  07B6  07A3               	addwf	UARTSendString@i,f
  3278  07B7  1803               	skipnc
  3279  07B8  0AA4               	incf	UARTSendString@i+1,f
  3280  07B9  3000               	movlw	0
  3281  07BA  07A4               	addwf	UARTSendString@i+1,f
  3282  07BB                     l2589:
  3283  07BB  0824               	movf	UARTSendString@i+1,w
  3284  07BC  3A80               	xorlw	128
  3285  07BD  00A0               	movwf	??_UARTSendString
  3286  07BE  3080               	movlw	128
  3287  07BF  0220               	subwf	??_UARTSendString,w
  3288  07C0  1D03               	skipz
  3289  07C1  2FC4               	goto	u2575
  3290  07C2  0876               	movf	UARTSendString@max_length,w
  3291  07C3  0223               	subwf	UARTSendString@i,w
  3292  07C4                     u2575:
  3293  07C4  1803               	skipnc
  3294  07C5  2FC7               	goto	u2571
  3295  07C6  2FC8               	goto	u2570
  3296  07C7                     u2571:
  3297  07C7  2FE6               	goto	l295
  3298  07C8                     u2570:
  3299  07C8                     l2591:
  3300  07C8  1283               	bcf	3,5	;RP0=0, select bank0
  3301  07C9  1303               	bcf	3,6	;RP1=0, select bank0
  3302  07CA  0823               	movf	UARTSendString@i,w
  3303  07CB  0774               	addwf	UARTSendString@str,w
  3304  07CC  00A1               	movwf	??_UARTSendString+1
  3305  07CD  0875               	movf	UARTSendString@str+1,w
  3306  07CE  00A0               	movwf	??_UARTSendString
  3307  07CF  1803               	skipnc
  3308  07D0  0AA0               	incf	??_UARTSendString,f
  3309  07D1  1FA3               	btfss	UARTSendString@i,7
  3310  07D2  2FD4               	goto	u2580
  3311  07D3  03A0               	decf	??_UARTSendString,f
  3312  07D4                     u2580:
  3313  07D4  1283               	bcf	3,5	;RP0=0, select bank0
  3314  07D5  1303               	bcf	3,6	;RP1=0, select bank0
  3315  07D6  0820               	movf	??_UARTSendString,w
  3316  07D7  00A2               	movwf	??_UARTSendString+2
  3317  07D8  0822               	movf	??_UARTSendString+2,w
  3318  07D9  00FF               	movwf	btemp+1
  3319  07DA  0821               	movf	??_UARTSendString+1,w
  3320  07DB  0084               	movwf	4
  3321  07DC  120A  118A  2500  120A  118A  	fcall	stringtab
  3322  07E1  3A00               	xorlw	0
  3323  07E2  1D03               	skipz
  3324  07E3  2FE5               	goto	u2591
  3325  07E4  2FE6               	goto	u2590
  3326  07E5                     u2591:
  3327  07E5  2F97               	goto	l2585
  3328  07E6                     u2590:
  3329  07E6                     l295:
  3330  07E6  0008               	return
  3331  07E7                     __end_of_UARTSendString:
  3332                           
  3333                           	psect	text7
  3334  0E58                     __ptext7:	
  3335 ;; *************** function _UARTSendChar *****************
  3336 ;; Defined at:
  3337 ;;		line 39 in file "USART.c"
  3338 ;; Parameters:    Size  Location     Type
  3339 ;;  c               1    wreg     const unsigned char 
  3340 ;; Auto vars:     Size  Location     Type
  3341 ;;  c               1    3[COMMON] const unsigned char 
  3342 ;; Return value:  Size  Location     Type
  3343 ;;                  1    wreg      void 
  3344 ;; Registers used:
  3345 ;;		wreg
  3346 ;; Tracked objects:
  3347 ;;		On entry : 0/0
  3348 ;;		On exit  : 0/0
  3349 ;;		Unchanged: 0/0
  3350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3351 ;;      Params:         0       0       0       0       0
  3352 ;;      Locals:         1       0       0       0       0
  3353 ;;      Temps:          0       0       0       0       0
  3354 ;;      Totals:         1       0       0       0       0
  3355 ;;Total ram usage:        1 bytes
  3356 ;; Hardware stack levels used:    1
  3357 ;; Hardware stack levels required when called:    1
  3358 ;; This function calls:
  3359 ;;		Nothing
  3360 ;; This function is called by:
  3361 ;;		_main
  3362 ;;		_UARTSendString
  3363 ;; This function uses a non-reentrant model
  3364 ;;
  3365                           
  3366                           
  3367                           ;psect for function _UARTSendChar
  3368  0E58                     _UARTSendChar:
  3369                           
  3370                           ;incstack = 0
  3371                           ; Regs used in _UARTSendChar: [wreg]
  3372                           ;UARTSendChar@c stored from wreg
  3373  0E58  00F3               	movwf	UARTSendChar@c
  3374  0E59                     l1679:
  3375  0E59                     l284:	
  3376                           ;USART.c: 40:     while (TXSTAbits.TRMT == 0);
  3377                           
  3378  0E59  1683               	bsf	3,5	;RP0=1, select bank1
  3379  0E5A  1303               	bcf	3,6	;RP1=0, select bank1
  3380  0E5B  1C98               	btfss	24,1	;volatile
  3381  0E5C  2E5E               	goto	u1381
  3382  0E5D  2E5F               	goto	u1380
  3383  0E5E                     u1381:
  3384  0E5E  2E59               	goto	l284
  3385  0E5F                     u1380:
  3386  0E5F                     l1681:
  3387                           
  3388                           ;USART.c: 41:     TXREG = c;
  3389  0E5F  0873               	movf	UARTSendChar@c,w
  3390  0E60  1283               	bcf	3,5	;RP0=0, select bank0
  3391  0E61  1303               	bcf	3,6	;RP1=0, select bank0
  3392  0E62  0099               	movwf	25	;volatile
  3393  0E63                     l287:
  3394  0E63  0008               	return
  3395  0E64                     __end_of_UARTSendChar:
  3396                           
  3397                           	psect	text8
  3398  0643                     __ptext8:	
  3399 ;; *************** function _UARTInit *****************
  3400 ;; Defined at:
  3401 ;;		line 8 in file "USART.c"
  3402 ;; Parameters:    Size  Location     Type
  3403 ;;  baud_rate       4   13[BANK0 ] const unsigned long 
  3404 ;;  BRGH            1   17[BANK0 ] const unsigned char 
  3405 ;; Auto vars:     Size  Location     Type
  3406 ;;		None
  3407 ;; Return value:  Size  Location     Type
  3408 ;;                  1    wreg      void 
  3409 ;; Registers used:
  3410 ;;		wreg, status,2, status,0, pclath, cstack
  3411 ;; Tracked objects:
  3412 ;;		On entry : 0/0
  3413 ;;		On exit  : 0/0
  3414 ;;		Unchanged: 0/0
  3415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3416 ;;      Params:         0       5       0       0       0
  3417 ;;      Locals:         0       0       0       0       0
  3418 ;;      Temps:          4       0       0       0       0
  3419 ;;      Totals:         4       5       0       0       0
  3420 ;;Total ram usage:        9 bytes
  3421 ;; Hardware stack levels used:    1
  3422 ;; Hardware stack levels required when called:    2
  3423 ;; This function calls:
  3424 ;;		___lldiv
  3425 ;; This function is called by:
  3426 ;;		_main
  3427 ;; This function uses a non-reentrant model
  3428 ;;
  3429                           
  3430                           
  3431                           ;psect for function _UARTInit
  3432  0643                     _UARTInit:
  3433  0643                     l2425:	
  3434                           ;incstack = 0
  3435                           ; Regs used in _UARTInit: [wreg+status,2+status,0+pclath+cstack]
  3436                           
  3437                           
  3438                           ;USART.c: 10:     if (BRGH == 0) {
  3439  0643  1283               	bcf	3,5	;RP0=0, select bank0
  3440  0644  1303               	bcf	3,6	;RP1=0, select bank0
  3441  0645  0831               	movf	UARTInit@BRGH,w
  3442  0646  1D03               	btfss	3,2
  3443  0647  2E49               	goto	u2461
  3444  0648  2E4A               	goto	u2460
  3445  0649                     u2461:
  3446  0649  2E79               	goto	l2431
  3447  064A                     u2460:
  3448  064A                     l2427:
  3449                           
  3450                           ;USART.c: 11:         SPBRG = 4000000/(64*baud_rate) - 1;
  3451  064A  082D               	movf	UARTInit@baud_rate,w
  3452  064B  00F4               	movwf	??_UARTInit
  3453  064C  082E               	movf	UARTInit@baud_rate+1,w
  3454  064D  00F5               	movwf	??_UARTInit+1
  3455  064E  082F               	movf	UARTInit@baud_rate+2,w
  3456  064F  00F6               	movwf	??_UARTInit+2
  3457  0650  0830               	movf	UARTInit@baud_rate+3,w
  3458  0651  00F7               	movwf	??_UARTInit+3
  3459  0652  3006               	movlw	6
  3460  0653                     u2475:
  3461  0653  1003               	clrc
  3462  0654  0DF4               	rlf	??_UARTInit,f
  3463  0655  0DF5               	rlf	??_UARTInit+1,f
  3464  0656  0DF6               	rlf	??_UARTInit+2,f
  3465  0657  0DF7               	rlf	??_UARTInit+3,f
  3466  0658                     u2470:
  3467  0658  3EFF               	addlw	-1
  3468  0659  1D03               	skipz
  3469  065A  2E53               	goto	u2475
  3470  065B  0877               	movf	??_UARTInit+3,w
  3471  065C  00A3               	movwf	___lldiv@divisor+3
  3472  065D  0876               	movf	??_UARTInit+2,w
  3473  065E  00A2               	movwf	___lldiv@divisor+2
  3474  065F  0875               	movf	??_UARTInit+1,w
  3475  0660  00A1               	movwf	___lldiv@divisor+1
  3476  0661  0874               	movf	??_UARTInit,w
  3477  0662  00A0               	movwf	___lldiv@divisor
  3478  0663  3000               	movlw	0
  3479  0664  00A7               	movwf	___lldiv@dividend+3
  3480  0665  303D               	movlw	61
  3481  0666  00A6               	movwf	___lldiv@dividend+2
  3482  0667  3009               	movlw	9
  3483  0668  00A5               	movwf	___lldiv@dividend+1
  3484  0669  3000               	movlw	0
  3485  066A  00A4               	movwf	___lldiv@dividend
  3486  066B  120A  118A  2728  120A  118A  	fcall	___lldiv
  3487  0670  1283               	bcf	3,5	;RP0=0, select bank0
  3488  0671  1303               	bcf	3,6	;RP1=0, select bank0
  3489  0672  0820               	movf	?___lldiv,w
  3490  0673  3EFF               	addlw	255
  3491  0674  1683               	bsf	3,5	;RP0=1, select bank1
  3492  0675  1303               	bcf	3,6	;RP1=0, select bank1
  3493  0676  0099               	movwf	25	;volatile
  3494  0677                     l2429:
  3495                           
  3496                           ;USART.c: 12:         TXSTAbits.BRGH = 0;
  3497  0677  1118               	bcf	24,2	;volatile
  3498                           
  3499                           ;USART.c: 13:     } else {
  3500  0678  2EA7               	goto	l2435
  3501  0679                     l2431:
  3502                           
  3503                           ;USART.c: 14:         SPBRG = 4000000/(16*baud_rate) - 1;
  3504  0679  082D               	movf	UARTInit@baud_rate,w
  3505  067A  00F4               	movwf	??_UARTInit
  3506  067B  082E               	movf	UARTInit@baud_rate+1,w
  3507  067C  00F5               	movwf	??_UARTInit+1
  3508  067D  082F               	movf	UARTInit@baud_rate+2,w
  3509  067E  00F6               	movwf	??_UARTInit+2
  3510  067F  0830               	movf	UARTInit@baud_rate+3,w
  3511  0680  00F7               	movwf	??_UARTInit+3
  3512  0681  3004               	movlw	4
  3513  0682                     u2485:
  3514  0682  1003               	clrc
  3515  0683  0DF4               	rlf	??_UARTInit,f
  3516  0684  0DF5               	rlf	??_UARTInit+1,f
  3517  0685  0DF6               	rlf	??_UARTInit+2,f
  3518  0686  0DF7               	rlf	??_UARTInit+3,f
  3519  0687                     u2480:
  3520  0687  3EFF               	addlw	-1
  3521  0688  1D03               	skipz
  3522  0689  2E82               	goto	u2485
  3523  068A  0877               	movf	??_UARTInit+3,w
  3524  068B  00A3               	movwf	___lldiv@divisor+3
  3525  068C  0876               	movf	??_UARTInit+2,w
  3526  068D  00A2               	movwf	___lldiv@divisor+2
  3527  068E  0875               	movf	??_UARTInit+1,w
  3528  068F  00A1               	movwf	___lldiv@divisor+1
  3529  0690  0874               	movf	??_UARTInit,w
  3530  0691  00A0               	movwf	___lldiv@divisor
  3531  0692  3000               	movlw	0
  3532  0693  00A7               	movwf	___lldiv@dividend+3
  3533  0694  303D               	movlw	61
  3534  0695  00A6               	movwf	___lldiv@dividend+2
  3535  0696  3009               	movlw	9
  3536  0697  00A5               	movwf	___lldiv@dividend+1
  3537  0698  3000               	movlw	0
  3538  0699  00A4               	movwf	___lldiv@dividend
  3539  069A  120A  118A  2728  120A  118A  	fcall	___lldiv
  3540  069F  1283               	bcf	3,5	;RP0=0, select bank0
  3541  06A0  1303               	bcf	3,6	;RP1=0, select bank0
  3542  06A1  0820               	movf	?___lldiv,w
  3543  06A2  3EFF               	addlw	255
  3544  06A3  1683               	bsf	3,5	;RP0=1, select bank1
  3545  06A4  1303               	bcf	3,6	;RP1=0, select bank1
  3546  06A5  0099               	movwf	25	;volatile
  3547  06A6                     l2433:
  3548                           
  3549                           ;USART.c: 15:         TXSTAbits.BRGH = 1;
  3550  06A6  1518               	bsf	24,2	;volatile
  3551  06A7                     l2435:
  3552                           
  3553                           ;USART.c: 19:     TXSTAbits.TX9 = 0;
  3554  06A7  1318               	bcf	24,6	;volatile
  3555  06A8                     l2437:
  3556                           
  3557                           ;USART.c: 20:     TXSTAbits.TXEN = 1;
  3558  06A8  1698               	bsf	24,5	;volatile
  3559  06A9                     l2439:
  3560                           
  3561                           ;USART.c: 21:     TXSTAbits.SYNC = 0;
  3562  06A9  1218               	bcf	24,4	;volatile
  3563  06AA                     l2441:
  3564                           
  3565                           ;USART.c: 24:     RCSTAbits.SPEN = 1;
  3566  06AA  1283               	bcf	3,5	;RP0=0, select bank0
  3567  06AB  1303               	bcf	3,6	;RP1=0, select bank0
  3568  06AC  1798               	bsf	24,7	;volatile
  3569  06AD                     l2443:
  3570                           
  3571                           ;USART.c: 25:     RCSTAbits.RX9 = 0;
  3572  06AD  1318               	bcf	24,6	;volatile
  3573  06AE                     l2445:
  3574                           
  3575                           ;USART.c: 26:     RCSTAbits.CREN = 1;
  3576  06AE  1618               	bsf	24,4	;volatile
  3577  06AF                     l2447:
  3578                           
  3579                           ;USART.c: 27:     RCSTAbits.FERR = 0;
  3580  06AF  1118               	bcf	24,2	;volatile
  3581  06B0                     l2449:
  3582                           
  3583                           ;USART.c: 28:     RCSTAbits.OERR = 0;
  3584  06B0  1098               	bcf	24,1	;volatile
  3585  06B1                     l2451:
  3586                           
  3587                           ;USART.c: 31:     TRISCbits.TRISC7 = 1;
  3588  06B1  1683               	bsf	3,5	;RP0=1, select bank1
  3589  06B2  1303               	bcf	3,6	;RP1=0, select bank1
  3590  06B3  1787               	bsf	7,7	;volatile
  3591  06B4                     l2453:
  3592                           
  3593                           ;USART.c: 32:     TRISCbits.TRISC6 = 0;
  3594  06B4  1307               	bcf	7,6	;volatile
  3595  06B5                     l281:
  3596  06B5  0008               	return
  3597  06B6                     __end_of_UARTInit:
  3598                           
  3599                           	psect	text9
  3600  0F74                     __ptext9:	
  3601 ;; *************** function _LcdWriteString *****************
  3602 ;; Defined at:
  3603 ;;		line 64 in file "LCD.c"
  3604 ;; Parameters:    Size  Location     Type
  3605 ;;  value           2    0[BANK0 ] PTR const unsigned char 
  3606 ;;		 -> STR_15(21), STR_14(3), STR_13(17), STR_12(24), 
  3607 ;;		 -> STR_11(3), STR_10(17), STR_9(16), STR_8(16), 
  3608 ;;		 -> STR_7(17), STR_6(5), numero(10), STR_4(6), 
  3609 ;;		 -> STR_2(7), STR_1(17), 
  3610 ;; Auto vars:     Size  Location     Type
  3611 ;;  i               2    5[BANK0 ] int 
  3612 ;; Return value:  Size  Location     Type
  3613 ;;                  1    wreg      void 
  3614 ;; Registers used:
  3615 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3616 ;; Tracked objects:
  3617 ;;		On entry : 0/0
  3618 ;;		On exit  : 0/0
  3619 ;;		Unchanged: 0/0
  3620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3621 ;;      Params:         0       2       0       0       0
  3622 ;;      Locals:         0       2       0       0       0
  3623 ;;      Temps:          0       3       0       0       0
  3624 ;;      Totals:         0       7       0       0       0
  3625 ;;Total ram usage:        7 bytes
  3626 ;; Hardware stack levels used:    1
  3627 ;; Hardware stack levels required when called:    3
  3628 ;; This function calls:
  3629 ;;		_LcdWriteChar
  3630 ;; This function is called by:
  3631 ;;		_main
  3632 ;; This function uses a non-reentrant model
  3633 ;;
  3634                           
  3635                           
  3636                           ;psect for function _LcdWriteString
  3637  0F74                     _LcdWriteString:
  3638  0F74                     l2547:	
  3639                           ;incstack = 0
  3640                           ; Regs used in _LcdWriteString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3641                           
  3642                           
  3643                           ;LCD.c: 66:     for (int i = 0; value[i] != '\0'; i++)
  3644  0F74  1283               	bcf	3,5	;RP0=0, select bank0
  3645  0F75  1303               	bcf	3,6	;RP1=0, select bank0
  3646  0F76  01A5               	clrf	LcdWriteString@i
  3647  0F77  01A6               	clrf	LcdWriteString@i+1
  3648  0F78  2F9D               	goto	l2553
  3649  0F79                     l2549:
  3650                           
  3651                           ;LCD.c: 67:         LcdWriteChar(value[i]);
  3652  0F79  0825               	movf	LcdWriteString@i,w
  3653  0F7A  0720               	addwf	LcdWriteString@value,w
  3654  0F7B  00A3               	movwf	??_LcdWriteString+1
  3655  0F7C  0821               	movf	LcdWriteString@value+1,w
  3656  0F7D  00A2               	movwf	??_LcdWriteString
  3657  0F7E  1803               	skipnc
  3658  0F7F  0AA2               	incf	??_LcdWriteString,f
  3659  0F80  1FA5               	btfss	LcdWriteString@i,7
  3660  0F81  2F83               	goto	u2520
  3661  0F82  03A2               	decf	??_LcdWriteString,f
  3662  0F83                     u2520:
  3663  0F83  1283               	bcf	3,5	;RP0=0, select bank0
  3664  0F84  1303               	bcf	3,6	;RP1=0, select bank0
  3665  0F85  0822               	movf	??_LcdWriteString,w
  3666  0F86  00A4               	movwf	??_LcdWriteString+2
  3667  0F87  0824               	movf	??_LcdWriteString+2,w
  3668  0F88  00FF               	movwf	btemp+1
  3669  0F89  0823               	movf	??_LcdWriteString+1,w
  3670  0F8A  0084               	movwf	4
  3671  0F8B  120A  118A  2500  120A  158A  	fcall	stringtab
  3672  0F90  120A  118A  27E7  120A  158A  	fcall	_LcdWriteChar
  3673  0F95                     l2551:
  3674  0F95  3001               	movlw	1
  3675  0F96  1283               	bcf	3,5	;RP0=0, select bank0
  3676  0F97  1303               	bcf	3,6	;RP1=0, select bank0
  3677  0F98  07A5               	addwf	LcdWriteString@i,f
  3678  0F99  1803               	skipnc
  3679  0F9A  0AA6               	incf	LcdWriteString@i+1,f
  3680  0F9B  3000               	movlw	0
  3681  0F9C  07A6               	addwf	LcdWriteString@i+1,f
  3682  0F9D                     l2553:
  3683  0F9D  0825               	movf	LcdWriteString@i,w
  3684  0F9E  0720               	addwf	LcdWriteString@value,w
  3685  0F9F  00A3               	movwf	??_LcdWriteString+1
  3686  0FA0  0821               	movf	LcdWriteString@value+1,w
  3687  0FA1  00A2               	movwf	??_LcdWriteString
  3688  0FA2  1803               	skipnc
  3689  0FA3  0AA2               	incf	??_LcdWriteString,f
  3690  0FA4  1FA5               	btfss	LcdWriteString@i,7
  3691  0FA5  2FA7               	goto	u2530
  3692  0FA6  03A2               	decf	??_LcdWriteString,f
  3693  0FA7                     u2530:
  3694  0FA7  1283               	bcf	3,5	;RP0=0, select bank0
  3695  0FA8  1303               	bcf	3,6	;RP1=0, select bank0
  3696  0FA9  0822               	movf	??_LcdWriteString,w
  3697  0FAA  00A4               	movwf	??_LcdWriteString+2
  3698  0FAB  0824               	movf	??_LcdWriteString+2,w
  3699  0FAC  00FF               	movwf	btemp+1
  3700  0FAD  0823               	movf	??_LcdWriteString+1,w
  3701  0FAE  0084               	movwf	4
  3702  0FAF  120A  118A  2500  120A  158A  	fcall	stringtab
  3703  0FB4  3A00               	xorlw	0
  3704  0FB5  1D03               	skipz
  3705  0FB6  2FB8               	goto	u2541
  3706  0FB7  2FB9               	goto	u2540
  3707  0FB8                     u2541:
  3708  0FB8  2F79               	goto	l2549
  3709  0FB9                     u2540:
  3710  0FB9                     l256:
  3711  0FB9  0008               	return
  3712  0FBA                     __end_of_LcdWriteString:
  3713                           
  3714                           	psect	text10
  3715  07E7                     __ptext10:	
  3716 ;; *************** function _LcdWriteChar *****************
  3717 ;; Defined at:
  3718 ;;		line 56 in file "LCD.c"
  3719 ;; Parameters:    Size  Location     Type
  3720 ;;  value           1    wreg     unsigned char 
  3721 ;; Auto vars:     Size  Location     Type
  3722 ;;  value           1    6[COMMON] unsigned char 
  3723 ;; Return value:  Size  Location     Type
  3724 ;;                  1    wreg      void 
  3725 ;; Registers used:
  3726 ;;		wreg, status,2, status,0, pclath, cstack
  3727 ;; Tracked objects:
  3728 ;;		On entry : 0/0
  3729 ;;		On exit  : 0/0
  3730 ;;		Unchanged: 0/0
  3731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3732 ;;      Params:         0       0       0       0       0
  3733 ;;      Locals:         1       0       0       0       0
  3734 ;;      Temps:          1       0       0       0       0
  3735 ;;      Totals:         2       0       0       0       0
  3736 ;;Total ram usage:        2 bytes
  3737 ;; Hardware stack levels used:    1
  3738 ;; Hardware stack levels required when called:    2
  3739 ;; This function calls:
  3740 ;;		_LcdPort
  3741 ;; This function is called by:
  3742 ;;		_main
  3743 ;;		_LcdWriteString
  3744 ;; This function uses a non-reentrant model
  3745 ;;
  3746                           
  3747                           
  3748                           ;psect for function _LcdWriteChar
  3749  07E7                     _LcdWriteChar:
  3750                           
  3751                           ;incstack = 0
  3752                           ; Regs used in _LcdWriteChar: [wreg+status,2+status,0+pclath+cstack]
  3753                           ;LcdWriteChar@value stored from wreg
  3754  07E7  00F6               	movwf	LcdWriteChar@value
  3755  07E8                     l2337:
  3756                           
  3757                           ;LCD.c: 57:     RE2 = 1;
  3758  07E8  1283               	bcf	3,5	;RP0=0, select bank0
  3759  07E9  1303               	bcf	3,6	;RP1=0, select bank0
  3760  07EA  1509               	bsf	9,2	;volatile
  3761  07EB                     l2339:
  3762                           
  3763                           ;LCD.c: 58:     LcdPort(value);
  3764  07EB  0876               	movf	LcdWriteChar@value,w
  3765  07EC  120A  118A  25B9  120A  118A  	fcall	_LcdPort
  3766  07F1                     l2341:
  3767                           
  3768                           ;LCD.c: 59:     RE0 = 1;
  3769  07F1  1283               	bcf	3,5	;RP0=0, select bank0
  3770  07F2  1303               	bcf	3,6	;RP1=0, select bank0
  3771  07F3  1409               	bsf	9,0	;volatile
  3772  07F4                     l2343:
  3773                           
  3774                           ;LCD.c: 60:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  3775  07F4  300D               	movlw	13
  3776  07F5  00F5               	movwf	??_LcdWriteChar
  3777  07F6                     u3037:
  3778  07F6  0BF5               	decfsz	??_LcdWriteChar,f
  3779  07F7  2FF6               	goto	u3037
  3780  07F8                     l2345:
  3781                           
  3782                           ;LCD.c: 61:     RE0 = 0;
  3783  07F8  1283               	bcf	3,5	;RP0=0, select bank0
  3784  07F9  1303               	bcf	3,6	;RP1=0, select bank0
  3785  07FA  1009               	bcf	9,0	;volatile
  3786  07FB                     l250:
  3787  07FB  0008               	return
  3788  07FC                     __end_of_LcdWriteChar:
  3789                           
  3790                           	psect	text11
  3791  0E83                     __ptext11:	
  3792 ;; *************** function _LcdSetCursor *****************
  3793 ;; Defined at:
  3794 ;;		line 29 in file "LCD.c"
  3795 ;; Parameters:    Size  Location     Type
  3796 ;;  row             1    wreg     unsigned char 
  3797 ;;  column          1    0[BANK0 ] unsigned char 
  3798 ;; Auto vars:     Size  Location     Type
  3799 ;;  row             1    3[BANK0 ] unsigned char 
  3800 ;; Return value:  Size  Location     Type
  3801 ;;                  1    wreg      void 
  3802 ;; Registers used:
  3803 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3804 ;; Tracked objects:
  3805 ;;		On entry : 0/0
  3806 ;;		On exit  : 0/0
  3807 ;;		Unchanged: 0/0
  3808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3809 ;;      Params:         0       1       0       0       0
  3810 ;;      Locals:         0       1       0       0       0
  3811 ;;      Temps:          0       2       0       0       0
  3812 ;;      Totals:         0       4       0       0       0
  3813 ;;Total ram usage:        4 bytes
  3814 ;; Hardware stack levels used:    1
  3815 ;; Hardware stack levels required when called:    3
  3816 ;; This function calls:
  3817 ;;		_LcdCmd
  3818 ;; This function is called by:
  3819 ;;		_main
  3820 ;; This function uses a non-reentrant model
  3821 ;;
  3822                           
  3823                           
  3824                           ;psect for function _LcdSetCursor
  3825  0E83                     _LcdSetCursor:
  3826                           
  3827                           ;incstack = 0
  3828                           ; Regs used in _LcdSetCursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3829                           ;LcdSetCursor@row stored from wreg
  3830  0E83  1283               	bcf	3,5	;RP0=0, select bank0
  3831  0E84  1303               	bcf	3,6	;RP1=0, select bank0
  3832  0E85  00A3               	movwf	LcdSetCursor@row
  3833  0E86                     l2531:
  3834                           
  3835                           ;LCD.c: 30:     switch(row){
  3836  0E86  2E97               	goto	l2539
  3837  0E87                     l2533:
  3838                           
  3839                           ;LCD.c: 32:             LcdCmd(0x80 + column - 1);
  3840  0E87  0820               	movf	LcdSetCursor@column,w
  3841  0E88  3E7F               	addlw	127
  3842  0E89  120A  118A  24E2  120A  158A  	fcall	_LcdCmd
  3843                           
  3844                           ;LCD.c: 33:             break;
  3845  0E8E  2EA7               	goto	l244
  3846  0E8F                     l2535:
  3847                           
  3848                           ;LCD.c: 35:             LcdCmd(0xC0 + column - 1);
  3849  0E8F  0820               	movf	LcdSetCursor@column,w
  3850  0E90  3EBF               	addlw	191
  3851  0E91  120A  118A  24E2  120A  158A  	fcall	_LcdCmd
  3852                           
  3853                           ;LCD.c: 36:             break;
  3854  0E96  2EA7               	goto	l244
  3855  0E97                     l2539:
  3856  0E97  0823               	movf	LcdSetCursor@row,w
  3857  0E98  00A1               	movwf	??_LcdSetCursor
  3858  0E99  01A2               	clrf	??_LcdSetCursor+1
  3859                           
  3860                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3861                           ; Switch size 1, requested type "simple"
  3862                           ; Number of cases is 1, Range of values is 0 to 0
  3863                           ; switch strategies available:
  3864                           ; Name         Instructions Cycles
  3865                           ; simple_byte            4     3 (average)
  3866                           ; direct_byte           11     8 (fixed)
  3867                           ; jumptable            260     6 (fixed)
  3868                           ;	Chosen strategy is simple_byte
  3869  0E9A  0822               	movf	??_LcdSetCursor+1,w
  3870  0E9B  3A00               	xorlw	0	; case 0
  3871  0E9C  1903               	skipnz
  3872  0E9D  2E9F               	goto	l2959
  3873  0E9E  2EA7               	goto	l244
  3874  0E9F                     l2959:
  3875                           
  3876                           ; Switch size 1, requested type "simple"
  3877                           ; Number of cases is 2, Range of values is 1 to 2
  3878                           ; switch strategies available:
  3879                           ; Name         Instructions Cycles
  3880                           ; simple_byte            7     4 (average)
  3881                           ; direct_byte           17    11 (fixed)
  3882                           ; jumptable            263     9 (fixed)
  3883                           ;	Chosen strategy is simple_byte
  3884  0E9F  0821               	movf	??_LcdSetCursor,w
  3885  0EA0  3A01               	xorlw	1	; case 1
  3886  0EA1  1903               	skipnz
  3887  0EA2  2E87               	goto	l2533
  3888  0EA3  3A03               	xorlw	3	; case 2
  3889  0EA4  1903               	skipnz
  3890  0EA5  2E8F               	goto	l2535
  3891  0EA6  2EA7               	goto	l244
  3892  0EA7                     l244:
  3893  0EA7  0008               	return
  3894  0EA8                     __end_of_LcdSetCursor:
  3895                           
  3896                           	psect	text12
  3897  0497                     __ptext12:	
  3898 ;; *************** function _LcdInit *****************
  3899 ;; Defined at:
  3900 ;;		line 41 in file "LCD.c"
  3901 ;; Parameters:    Size  Location     Type
  3902 ;;		None
  3903 ;; Auto vars:     Size  Location     Type
  3904 ;;		None
  3905 ;; Return value:  Size  Location     Type
  3906 ;;                  1    wreg      void 
  3907 ;; Registers used:
  3908 ;;		wreg, status,2, status,0, pclath, cstack
  3909 ;; Tracked objects:
  3910 ;;		On entry : 0/0
  3911 ;;		On exit  : 0/0
  3912 ;;		Unchanged: 0/0
  3913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3914 ;;      Params:         0       0       0       0       0
  3915 ;;      Locals:         0       0       0       0       0
  3916 ;;      Temps:          0       2       0       0       0
  3917 ;;      Totals:         0       2       0       0       0
  3918 ;;Total ram usage:        2 bytes
  3919 ;; Hardware stack levels used:    1
  3920 ;; Hardware stack levels required when called:    3
  3921 ;; This function calls:
  3922 ;;		_LcdCmd
  3923 ;;		_LcdPort
  3924 ;; This function is called by:
  3925 ;;		_main
  3926 ;; This function uses a non-reentrant model
  3927 ;;
  3928                           
  3929                           
  3930                           ;psect for function _LcdInit
  3931  0497                     _LcdInit:
  3932  0497                     l2415:	
  3933                           ;incstack = 0
  3934                           ; Regs used in _LcdInit: [wreg+status,2+status,0+pclath+cstack]
  3935                           
  3936                           
  3937                           ;LCD.c: 42:     LcdPort(0x00);
  3938  0497  3000               	movlw	0
  3939  0498  120A  118A  25B9  120A  118A  	fcall	_LcdPort
  3940  049D                     l2417:
  3941                           
  3942                           ;LCD.c: 43:     _delay((unsigned long)((20)*(4000000/4000.0)));
  3943  049D  301A               	movlw	26
  3944  049E  1283               	bcf	3,5	;RP0=0, select bank0
  3945  049F  1303               	bcf	3,6	;RP1=0, select bank0
  3946  04A0  00A1               	movwf	??_LcdInit+1
  3947  04A1  30F7               	movlw	247
  3948  04A2  00A0               	movwf	??_LcdInit
  3949  04A3                     u3047:
  3950  04A3  0BA0               	decfsz	??_LcdInit,f
  3951  04A4  2CA3               	goto	u3047
  3952  04A5  0BA1               	decfsz	??_LcdInit+1,f
  3953  04A6  2CA3               	goto	u3047
  3954  04A7  2CA8               	nop2
  3955  04A8                     l2419:
  3956                           
  3957                           ;LCD.c: 44:     LcdCmd(0x30);
  3958  04A8  3030               	movlw	48
  3959  04A9  120A  118A  24E2  120A  118A  	fcall	_LcdCmd
  3960                           
  3961                           ;LCD.c: 45:     _delay((unsigned long)((5)*(4000000/4000.0)));
  3962  04AE  3007               	movlw	7
  3963  04AF  1283               	bcf	3,5	;RP0=0, select bank0
  3964  04B0  1303               	bcf	3,6	;RP1=0, select bank0
  3965  04B1  00A1               	movwf	??_LcdInit+1
  3966  04B2  307C               	movlw	124
  3967  04B3  00A0               	movwf	??_LcdInit
  3968  04B4                     u3057:
  3969  04B4  0BA0               	decfsz	??_LcdInit,f
  3970  04B5  2CB4               	goto	u3057
  3971  04B6  0BA1               	decfsz	??_LcdInit+1,f
  3972  04B7  2CB4               	goto	u3057
  3973  04B8  0000               	nop
  3974  04B9                     l2421:
  3975                           
  3976                           ;LCD.c: 46:     LcdCmd(0x30);
  3977  04B9  3030               	movlw	48
  3978  04BA  120A  118A  24E2  120A  118A  	fcall	_LcdCmd
  3979  04BF                     l2423:
  3980                           
  3981                           ;LCD.c: 47:     _delay((unsigned long)((11)*(4000000/4000.0)));
  3982  04BF  300F               	movlw	15
  3983  04C0  1283               	bcf	3,5	;RP0=0, select bank0
  3984  04C1  1303               	bcf	3,6	;RP1=0, select bank0
  3985  04C2  00A1               	movwf	??_LcdInit+1
  3986  04C3  3047               	movlw	71
  3987  04C4  00A0               	movwf	??_LcdInit
  3988  04C5                     u3067:
  3989  04C5  0BA0               	decfsz	??_LcdInit,f
  3990  04C6  2CC5               	goto	u3067
  3991  04C7  0BA1               	decfsz	??_LcdInit+1,f
  3992  04C8  2CC5               	goto	u3067
  3993                           
  3994                           ;LCD.c: 48:     LcdCmd(0x30);
  3995  04C9  3030               	movlw	48
  3996  04CA  120A  118A  24E2  120A  118A  	fcall	_LcdCmd
  3997                           
  3998                           ;LCD.c: 50:     LcdCmd(0x38);
  3999  04CF  3038               	movlw	56
  4000  04D0  120A  118A  24E2  120A  118A  	fcall	_LcdCmd
  4001                           
  4002                           ;LCD.c: 51:     LcdCmd(0x0C);
  4003  04D5  300C               	movlw	12
  4004  04D6  120A  118A  24E2  120A  118A  	fcall	_LcdCmd
  4005                           
  4006                           ;LCD.c: 52:     LcdCmd(0x6);
  4007  04DB  3006               	movlw	6
  4008  04DC  120A  118A  24E2  120A  118A  	fcall	_LcdCmd
  4009  04E1                     l247:
  4010  04E1  0008               	return
  4011  04E2                     __end_of_LcdInit:
  4012                           
  4013                           	psect	text13
  4014  04E2                     __ptext13:	
  4015 ;; *************** function _LcdCmd *****************
  4016 ;; Defined at:
  4017 ;;		line 16 in file "LCD.c"
  4018 ;; Parameters:    Size  Location     Type
  4019 ;;  value           1    wreg     unsigned char 
  4020 ;; Auto vars:     Size  Location     Type
  4021 ;;  value           1    7[COMMON] unsigned char 
  4022 ;; Return value:  Size  Location     Type
  4023 ;;                  1    wreg      void 
  4024 ;; Registers used:
  4025 ;;		wreg, status,2, status,0, pclath, cstack
  4026 ;; Tracked objects:
  4027 ;;		On entry : 0/0
  4028 ;;		On exit  : 0/0
  4029 ;;		Unchanged: 0/0
  4030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4031 ;;      Params:         0       0       0       0       0
  4032 ;;      Locals:         1       0       0       0       0
  4033 ;;      Temps:          2       0       0       0       0
  4034 ;;      Totals:         3       0       0       0       0
  4035 ;;Total ram usage:        3 bytes
  4036 ;; Hardware stack levels used:    1
  4037 ;; Hardware stack levels required when called:    2
  4038 ;; This function calls:
  4039 ;;		_LcdPort
  4040 ;; This function is called by:
  4041 ;;		_LcdSetCursor
  4042 ;;		_LcdInit
  4043 ;;		_LcdClear
  4044 ;;		_LcdShiftRight
  4045 ;;		_LcdShiftLeft
  4046 ;; This function uses a non-reentrant model
  4047 ;;
  4048                           
  4049                           
  4050                           ;psect for function _LcdCmd
  4051  04E2                     _LcdCmd:
  4052                           
  4053                           ;incstack = 0
  4054                           ; Regs used in _LcdCmd: [wreg+status,2+status,0+pclath+cstack]
  4055                           ;LcdCmd@value stored from wreg
  4056  04E2  00F7               	movwf	LcdCmd@value
  4057  04E3                     l2351:
  4058                           
  4059                           ;LCD.c: 17:     RE2 = 0;
  4060  04E3  1283               	bcf	3,5	;RP0=0, select bank0
  4061  04E4  1303               	bcf	3,6	;RP1=0, select bank0
  4062  04E5  1109               	bcf	9,2	;volatile
  4063  04E6                     l2353:
  4064                           
  4065                           ;LCD.c: 18:     LcdPort(value);
  4066  04E6  0877               	movf	LcdCmd@value,w
  4067  04E7  120A  118A  25B9  120A  118A  	fcall	_LcdPort
  4068  04EC                     l2355:
  4069                           
  4070                           ;LCD.c: 19:     RE0 = 1;
  4071  04EC  1283               	bcf	3,5	;RP0=0, select bank0
  4072  04ED  1303               	bcf	3,6	;RP1=0, select bank0
  4073  04EE  1409               	bsf	9,0	;volatile
  4074  04EF                     l2357:
  4075                           
  4076                           ;LCD.c: 20:     _delay((unsigned long)((4)*(4000000/4000.0)));
  4077  04EF  3006               	movlw	6
  4078  04F0  00F6               	movwf	??_LcdCmd+1
  4079  04F1  3030               	movlw	48
  4080  04F2  00F5               	movwf	??_LcdCmd
  4081  04F3                     u3077:
  4082  04F3  0BF5               	decfsz	??_LcdCmd,f
  4083  04F4  2CF3               	goto	u3077
  4084  04F5  0BF6               	decfsz	??_LcdCmd+1,f
  4085  04F6  2CF3               	goto	u3077
  4086  04F7  0000               	nop
  4087  04F8                     l2359:
  4088                           
  4089                           ;LCD.c: 21:     RE0 = 0;
  4090  04F8  1283               	bcf	3,5	;RP0=0, select bank0
  4091  04F9  1303               	bcf	3,6	;RP1=0, select bank0
  4092  04FA  1009               	bcf	9,0	;volatile
  4093  04FB                     l234:
  4094  04FB  0008               	return
  4095  04FC                     __end_of_LcdCmd:
  4096                           
  4097                           	psect	text14
  4098  05B9                     __ptext14:	
  4099 ;; *************** function _LcdPort *****************
  4100 ;; Defined at:
  4101 ;;		line 3 in file "LCD.c"
  4102 ;; Parameters:    Size  Location     Type
  4103 ;;  value           1    wreg     unsigned char 
  4104 ;; Auto vars:     Size  Location     Type
  4105 ;;  value           1    4[COMMON] unsigned char 
  4106 ;; Return value:  Size  Location     Type
  4107 ;;                  1    wreg      void 
  4108 ;; Registers used:
  4109 ;;		wreg, status,2, status,0
  4110 ;; Tracked objects:
  4111 ;;		On entry : 0/0
  4112 ;;		On exit  : 0/0
  4113 ;;		Unchanged: 0/0
  4114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4115 ;;      Params:         0       0       0       0       0
  4116 ;;      Locals:         1       0       0       0       0
  4117 ;;      Temps:          1       0       0       0       0
  4118 ;;      Totals:         2       0       0       0       0
  4119 ;;Total ram usage:        2 bytes
  4120 ;; Hardware stack levels used:    1
  4121 ;; Hardware stack levels required when called:    1
  4122 ;; This function calls:
  4123 ;;		Nothing
  4124 ;; This function is called by:
  4125 ;;		_LcdCmd
  4126 ;;		_LcdInit
  4127 ;;		_LcdWriteChar
  4128 ;; This function uses a non-reentrant model
  4129 ;;
  4130                           
  4131                           
  4132                           ;psect for function _LcdPort
  4133  05B9                     _LcdPort:
  4134                           
  4135                           ;incstack = 0
  4136                           ; Regs used in _LcdPort: [wreg+status,2+status,0]
  4137                           ;LcdPort@value stored from wreg
  4138  05B9  00F4               	movwf	LcdPort@value
  4139  05BA                     l2285:
  4140                           
  4141                           ;LCD.c: 6:     RD0 = value &1;
  4142  05BA  1874               	btfsc	LcdPort@value,0
  4143  05BB  2DBD               	goto	u1981
  4144  05BC  2DC1               	goto	u1980
  4145  05BD                     u1981:
  4146  05BD  1283               	bcf	3,5	;RP0=0, select bank0
  4147  05BE  1303               	bcf	3,6	;RP1=0, select bank0
  4148  05BF  1408               	bsf	8,0	;volatile
  4149  05C0  2DC4               	goto	u1994
  4150  05C1                     u1980:
  4151  05C1  1283               	bcf	3,5	;RP0=0, select bank0
  4152  05C2  1303               	bcf	3,6	;RP1=0, select bank0
  4153  05C3  1008               	bcf	8,0	;volatile
  4154  05C4                     u1994:
  4155  05C4                     l2287:
  4156                           
  4157                           ;LCD.c: 7:     RD1 = (value & 2) >> 1;
  4158  05C4  0874               	movf	LcdPort@value,w
  4159  05C5  00F3               	movwf	??_LcdPort
  4160  05C6  3001               	movlw	1
  4161  05C7                     u2005:
  4162  05C7  1003               	clrc
  4163  05C8  0CF3               	rrf	??_LcdPort,f
  4164  05C9  3EFF               	addlw	-1
  4165  05CA  1D03               	skipz
  4166  05CB  2DC7               	goto	u2005
  4167  05CC  1873               	btfsc	??_LcdPort,0
  4168  05CD  2DCF               	goto	u2011
  4169  05CE  2DD3               	goto	u2010
  4170  05CF                     u2011:
  4171  05CF  1283               	bcf	3,5	;RP0=0, select bank0
  4172  05D0  1303               	bcf	3,6	;RP1=0, select bank0
  4173  05D1  1488               	bsf	8,1	;volatile
  4174  05D2  2DD6               	goto	u2024
  4175  05D3                     u2010:
  4176  05D3  1283               	bcf	3,5	;RP0=0, select bank0
  4177  05D4  1303               	bcf	3,6	;RP1=0, select bank0
  4178  05D5  1088               	bcf	8,1	;volatile
  4179  05D6                     u2024:
  4180                           
  4181                           ;LCD.c: 8:     RD2 = (value & 4) >> 2;
  4182  05D6  0874               	movf	LcdPort@value,w
  4183  05D7  00F3               	movwf	??_LcdPort
  4184  05D8  3002               	movlw	2
  4185  05D9                     u2035:
  4186  05D9  1003               	clrc
  4187  05DA  0CF3               	rrf	??_LcdPort,f
  4188  05DB  3EFF               	addlw	-1
  4189  05DC  1D03               	skipz
  4190  05DD  2DD9               	goto	u2035
  4191  05DE  1873               	btfsc	??_LcdPort,0
  4192  05DF  2DE1               	goto	u2041
  4193  05E0  2DE5               	goto	u2040
  4194  05E1                     u2041:
  4195  05E1  1283               	bcf	3,5	;RP0=0, select bank0
  4196  05E2  1303               	bcf	3,6	;RP1=0, select bank0
  4197  05E3  1508               	bsf	8,2	;volatile
  4198  05E4  2DE8               	goto	u2054
  4199  05E5                     u2040:
  4200  05E5  1283               	bcf	3,5	;RP0=0, select bank0
  4201  05E6  1303               	bcf	3,6	;RP1=0, select bank0
  4202  05E7  1108               	bcf	8,2	;volatile
  4203  05E8                     u2054:
  4204                           
  4205                           ;LCD.c: 9:     RD3 = (value &8) >> 3;
  4206  05E8  0874               	movf	LcdPort@value,w
  4207  05E9  00F3               	movwf	??_LcdPort
  4208  05EA  3003               	movlw	3
  4209  05EB                     u2065:
  4210  05EB  1003               	clrc
  4211  05EC  0CF3               	rrf	??_LcdPort,f
  4212  05ED  3EFF               	addlw	-1
  4213  05EE  1D03               	skipz
  4214  05EF  2DEB               	goto	u2065
  4215  05F0  1873               	btfsc	??_LcdPort,0
  4216  05F1  2DF3               	goto	u2071
  4217  05F2  2DF7               	goto	u2070
  4218  05F3                     u2071:
  4219  05F3  1283               	bcf	3,5	;RP0=0, select bank0
  4220  05F4  1303               	bcf	3,6	;RP1=0, select bank0
  4221  05F5  1588               	bsf	8,3	;volatile
  4222  05F6  2DFA               	goto	u2084
  4223  05F7                     u2070:
  4224  05F7  1283               	bcf	3,5	;RP0=0, select bank0
  4225  05F8  1303               	bcf	3,6	;RP1=0, select bank0
  4226  05F9  1188               	bcf	8,3	;volatile
  4227  05FA                     u2084:
  4228                           
  4229                           ;LCD.c: 10:     RD4 = (value & 16)>>4;
  4230  05FA  0874               	movf	LcdPort@value,w
  4231  05FB  00F3               	movwf	??_LcdPort
  4232  05FC  3004               	movlw	4
  4233  05FD                     u2095:
  4234  05FD  1003               	clrc
  4235  05FE  0CF3               	rrf	??_LcdPort,f
  4236  05FF  3EFF               	addlw	-1
  4237  0600  1D03               	skipz
  4238  0601  2DFD               	goto	u2095
  4239  0602  1873               	btfsc	??_LcdPort,0
  4240  0603  2E05               	goto	u2101
  4241  0604  2E09               	goto	u2100
  4242  0605                     u2101:
  4243  0605  1283               	bcf	3,5	;RP0=0, select bank0
  4244  0606  1303               	bcf	3,6	;RP1=0, select bank0
  4245  0607  1608               	bsf	8,4	;volatile
  4246  0608  2E0C               	goto	u2114
  4247  0609                     u2100:
  4248  0609  1283               	bcf	3,5	;RP0=0, select bank0
  4249  060A  1303               	bcf	3,6	;RP1=0, select bank0
  4250  060B  1208               	bcf	8,4	;volatile
  4251  060C                     u2114:
  4252                           
  4253                           ;LCD.c: 11:     RD5 = (value & 32) >> 5 ;
  4254  060C  0874               	movf	LcdPort@value,w
  4255  060D  00F3               	movwf	??_LcdPort
  4256  060E  3005               	movlw	5
  4257  060F                     u2125:
  4258  060F  1003               	clrc
  4259  0610  0CF3               	rrf	??_LcdPort,f
  4260  0611  3EFF               	addlw	-1
  4261  0612  1D03               	skipz
  4262  0613  2E0F               	goto	u2125
  4263  0614  1873               	btfsc	??_LcdPort,0
  4264  0615  2E17               	goto	u2131
  4265  0616  2E1B               	goto	u2130
  4266  0617                     u2131:
  4267  0617  1283               	bcf	3,5	;RP0=0, select bank0
  4268  0618  1303               	bcf	3,6	;RP1=0, select bank0
  4269  0619  1688               	bsf	8,5	;volatile
  4270  061A  2E1E               	goto	u2144
  4271  061B                     u2130:
  4272  061B  1283               	bcf	3,5	;RP0=0, select bank0
  4273  061C  1303               	bcf	3,6	;RP1=0, select bank0
  4274  061D  1288               	bcf	8,5	;volatile
  4275  061E                     u2144:
  4276                           
  4277                           ;LCD.c: 12:     RD6 = (value & 64) >> 6;
  4278  061E  0874               	movf	LcdPort@value,w
  4279  061F  00F3               	movwf	??_LcdPort
  4280  0620  3006               	movlw	6
  4281  0621                     u2155:
  4282  0621  1003               	clrc
  4283  0622  0CF3               	rrf	??_LcdPort,f
  4284  0623  3EFF               	addlw	-1
  4285  0624  1D03               	skipz
  4286  0625  2E21               	goto	u2155
  4287  0626  1873               	btfsc	??_LcdPort,0
  4288  0627  2E29               	goto	u2161
  4289  0628  2E2D               	goto	u2160
  4290  0629                     u2161:
  4291  0629  1283               	bcf	3,5	;RP0=0, select bank0
  4292  062A  1303               	bcf	3,6	;RP1=0, select bank0
  4293  062B  1708               	bsf	8,6	;volatile
  4294  062C  2E30               	goto	u2174
  4295  062D                     u2160:
  4296  062D  1283               	bcf	3,5	;RP0=0, select bank0
  4297  062E  1303               	bcf	3,6	;RP1=0, select bank0
  4298  062F  1308               	bcf	8,6	;volatile
  4299  0630                     u2174:
  4300                           
  4301                           ;LCD.c: 13:     RD7 = (value & 128) >> 7;
  4302  0630  0874               	movf	LcdPort@value,w
  4303  0631  00F3               	movwf	??_LcdPort
  4304  0632  3007               	movlw	7
  4305  0633                     u2185:
  4306  0633  1003               	clrc
  4307  0634  0CF3               	rrf	??_LcdPort,f
  4308  0635  3EFF               	addlw	-1
  4309  0636  1D03               	skipz
  4310  0637  2E33               	goto	u2185
  4311  0638  1873               	btfsc	??_LcdPort,0
  4312  0639  2E3B               	goto	u2191
  4313  063A  2E3F               	goto	u2190
  4314  063B                     u2191:
  4315  063B  1283               	bcf	3,5	;RP0=0, select bank0
  4316  063C  1303               	bcf	3,6	;RP1=0, select bank0
  4317  063D  1788               	bsf	8,7	;volatile
  4318  063E  2E42               	goto	u2204
  4319  063F                     u2190:
  4320  063F  1283               	bcf	3,5	;RP0=0, select bank0
  4321  0640  1303               	bcf	3,6	;RP1=0, select bank0
  4322  0641  1388               	bcf	8,7	;volatile
  4323  0642                     u2204:
  4324  0642                     l231:
  4325  0642  0008               	return
  4326  0643                     __end_of_LcdPort:
  4327                           
  4328                           	psect	text15
  4329  0E4E                     __ptext15:	
  4330 ;; *************** function _I2C_Master_Write *****************
  4331 ;; Defined at:
  4332 ;;		line 67 in file "I2C.c"
  4333 ;; Parameters:    Size  Location     Type
  4334 ;;  d               2    3[COMMON] unsigned int 
  4335 ;; Auto vars:     Size  Location     Type
  4336 ;;		None
  4337 ;; Return value:  Size  Location     Type
  4338 ;;                  1    wreg      void 
  4339 ;; Registers used:
  4340 ;;		wreg, status,2, status,0, pclath, cstack
  4341 ;; Tracked objects:
  4342 ;;		On entry : 0/0
  4343 ;;		On exit  : 0/0
  4344 ;;		Unchanged: 0/0
  4345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4346 ;;      Params:         2       0       0       0       0
  4347 ;;      Locals:         0       0       0       0       0
  4348 ;;      Temps:          0       0       0       0       0
  4349 ;;      Totals:         2       0       0       0       0
  4350 ;;Total ram usage:        2 bytes
  4351 ;; Hardware stack levels used:    1
  4352 ;; Hardware stack levels required when called:    2
  4353 ;; This function calls:
  4354 ;;		_I2C_Master_Wait
  4355 ;; This function is called by:
  4356 ;;		_main
  4357 ;; This function uses a non-reentrant model
  4358 ;;
  4359                           
  4360                           
  4361                           ;psect for function _I2C_Master_Write
  4362  0E4E                     _I2C_Master_Write:
  4363  0E4E                     l2559:	
  4364                           ;incstack = 0
  4365                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  4366                           
  4367                           
  4368                           ;I2C.c: 67: void I2C_Master_Write(unsigned d);I2C.c: 68: {;I2C.c: 69:     I2C_Master_Wai
      +                          t();
  4369  0E4E  120A  158A  2664  120A  158A  	fcall	_I2C_Master_Wait
  4370  0E53                     l2561:
  4371                           
  4372                           ;I2C.c: 70:     SSPBUF = d;
  4373  0E53  0873               	movf	I2C_Master_Write@d,w
  4374  0E54  1283               	bcf	3,5	;RP0=0, select bank0
  4375  0E55  1303               	bcf	3,6	;RP1=0, select bank0
  4376  0E56  0093               	movwf	19	;volatile
  4377  0E57                     l198:
  4378  0E57  0008               	return
  4379  0E58                     __end_of_I2C_Master_Write:
  4380                           
  4381                           	psect	text16
  4382  0E45                     __ptext16:	
  4383 ;; *************** function _I2C_Master_Stop *****************
  4384 ;; Defined at:
  4385 ;;		line 57 in file "I2C.c"
  4386 ;; Parameters:    Size  Location     Type
  4387 ;;		None
  4388 ;; Auto vars:     Size  Location     Type
  4389 ;;		None
  4390 ;; Return value:  Size  Location     Type
  4391 ;;                  1    wreg      void 
  4392 ;; Registers used:
  4393 ;;		wreg, status,2, status,0, pclath, cstack
  4394 ;; Tracked objects:
  4395 ;;		On entry : 0/0
  4396 ;;		On exit  : 0/0
  4397 ;;		Unchanged: 0/0
  4398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4399 ;;      Params:         0       0       0       0       0
  4400 ;;      Locals:         0       0       0       0       0
  4401 ;;      Temps:          0       0       0       0       0
  4402 ;;      Totals:         0       0       0       0       0
  4403 ;;Total ram usage:        0 bytes
  4404 ;; Hardware stack levels used:    1
  4405 ;; Hardware stack levels required when called:    2
  4406 ;; This function calls:
  4407 ;;		_I2C_Master_Wait
  4408 ;; This function is called by:
  4409 ;;		_main
  4410 ;; This function uses a non-reentrant model
  4411 ;;
  4412                           
  4413                           
  4414                           ;psect for function _I2C_Master_Stop
  4415  0E45                     _I2C_Master_Stop:
  4416  0E45                     l2579:	
  4417                           ;incstack = 0
  4418                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  4419                           
  4420                           
  4421                           ;I2C.c: 59:     I2C_Master_Wait();
  4422  0E45  120A  158A  2664  120A  158A  	fcall	_I2C_Master_Wait
  4423  0E4A                     l2581:
  4424                           
  4425                           ;I2C.c: 60:     SSPCON2bits.PEN = 1;
  4426  0E4A  1683               	bsf	3,5	;RP0=1, select bank1
  4427  0E4B  1303               	bcf	3,6	;RP1=0, select bank1
  4428  0E4C  1511               	bsf	17,2	;volatile
  4429  0E4D                     l195:
  4430  0E4D  0008               	return
  4431  0E4E                     __end_of_I2C_Master_Stop:
  4432                           
  4433                           	psect	text17
  4434  0E3C                     __ptext17:	
  4435 ;; *************** function _I2C_Master_Start *****************
  4436 ;; Defined at:
  4437 ;;		line 41 in file "I2C.c"
  4438 ;; Parameters:    Size  Location     Type
  4439 ;;		None
  4440 ;; Auto vars:     Size  Location     Type
  4441 ;;		None
  4442 ;; Return value:  Size  Location     Type
  4443 ;;                  1    wreg      void 
  4444 ;; Registers used:
  4445 ;;		wreg, status,2, status,0, pclath, cstack
  4446 ;; Tracked objects:
  4447 ;;		On entry : 0/0
  4448 ;;		On exit  : 0/0
  4449 ;;		Unchanged: 0/0
  4450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4451 ;;      Params:         0       0       0       0       0
  4452 ;;      Locals:         0       0       0       0       0
  4453 ;;      Temps:          0       0       0       0       0
  4454 ;;      Totals:         0       0       0       0       0
  4455 ;;Total ram usage:        0 bytes
  4456 ;; Hardware stack levels used:    1
  4457 ;; Hardware stack levels required when called:    2
  4458 ;; This function calls:
  4459 ;;		_I2C_Master_Wait
  4460 ;; This function is called by:
  4461 ;;		_main
  4462 ;; This function uses a non-reentrant model
  4463 ;;
  4464                           
  4465                           
  4466                           ;psect for function _I2C_Master_Start
  4467  0E3C                     _I2C_Master_Start:
  4468  0E3C                     l2555:	
  4469                           ;incstack = 0
  4470                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  4471                           
  4472                           
  4473                           ;I2C.c: 43:     I2C_Master_Wait();
  4474  0E3C  120A  158A  2664  120A  158A  	fcall	_I2C_Master_Wait
  4475  0E41                     l2557:
  4476                           
  4477                           ;I2C.c: 44:     SSPCON2bits.SEN = 1;
  4478  0E41  1683               	bsf	3,5	;RP0=1, select bank1
  4479  0E42  1303               	bcf	3,6	;RP1=0, select bank1
  4480  0E43  1411               	bsf	17,0	;volatile
  4481  0E44                     l189:
  4482  0E44  0008               	return
  4483  0E45                     __end_of_I2C_Master_Start:
  4484                           
  4485                           	psect	text18
  4486  0ECE                     __ptext18:	
  4487 ;; *************** function _I2C_Master_Read *****************
  4488 ;; Defined at:
  4489 ;;		line 76 in file "I2C.c"
  4490 ;; Parameters:    Size  Location     Type
  4491 ;;  a               2    3[COMMON] unsigned short 
  4492 ;; Auto vars:     Size  Location     Type
  4493 ;;  temp            2    0[BANK0 ] unsigned short 
  4494 ;; Return value:  Size  Location     Type
  4495 ;;                  2    3[COMMON] unsigned short 
  4496 ;; Registers used:
  4497 ;;		wreg, status,2, status,0, pclath, cstack
  4498 ;; Tracked objects:
  4499 ;;		On entry : 0/0
  4500 ;;		On exit  : 0/0
  4501 ;;		Unchanged: 0/0
  4502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4503 ;;      Params:         2       0       0       0       0
  4504 ;;      Locals:         0       2       0       0       0
  4505 ;;      Temps:          2       0       0       0       0
  4506 ;;      Totals:         4       2       0       0       0
  4507 ;;Total ram usage:        6 bytes
  4508 ;; Hardware stack levels used:    1
  4509 ;; Hardware stack levels required when called:    2
  4510 ;; This function calls:
  4511 ;;		_I2C_Master_Wait
  4512 ;; This function is called by:
  4513 ;;		_main
  4514 ;; This function uses a non-reentrant model
  4515 ;;
  4516                           
  4517                           
  4518                           ;psect for function _I2C_Master_Read
  4519  0ECE                     _I2C_Master_Read:
  4520  0ECE                     l2563:	
  4521                           ;incstack = 0
  4522                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  4523                           
  4524                           
  4525                           ;I2C.c: 76: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 77: {;I2C.c: 78:    
      +                           unsigned short temp;;I2C.c: 79:     I2C_Master_Wait();
  4526  0ECE  120A  158A  2664  120A  158A  	fcall	_I2C_Master_Wait
  4527  0ED3                     l2565:
  4528                           
  4529                           ;I2C.c: 80:     SSPCON2bits.RCEN = 1;
  4530  0ED3  1683               	bsf	3,5	;RP0=1, select bank1
  4531  0ED4  1303               	bcf	3,6	;RP1=0, select bank1
  4532  0ED5  1591               	bsf	17,3	;volatile
  4533                           
  4534                           ;I2C.c: 81:     I2C_Master_Wait();
  4535  0ED6  120A  158A  2664  120A  158A  	fcall	_I2C_Master_Wait
  4536  0EDB                     l2567:
  4537                           
  4538                           ;I2C.c: 82:     temp = SSPBUF;
  4539  0EDB  1283               	bcf	3,5	;RP0=0, select bank0
  4540  0EDC  1303               	bcf	3,6	;RP1=0, select bank0
  4541  0EDD  0813               	movf	19,w	;volatile
  4542  0EDE  00F5               	movwf	??_I2C_Master_Read
  4543  0EDF  01F6               	clrf	??_I2C_Master_Read+1
  4544  0EE0  0875               	movf	??_I2C_Master_Read,w
  4545  0EE1  00A0               	movwf	I2C_Master_Read@temp
  4546  0EE2  0876               	movf	??_I2C_Master_Read+1,w
  4547  0EE3  00A1               	movwf	I2C_Master_Read@temp+1
  4548  0EE4                     l2569:
  4549                           
  4550                           ;I2C.c: 83:     I2C_Master_Wait();
  4551  0EE4  120A  158A  2664  120A  158A  	fcall	_I2C_Master_Wait
  4552  0EE9                     l2571:
  4553                           
  4554                           ;I2C.c: 84:     if(a == 1){
  4555  0EE9  0373               	decf	I2C_Master_Read@a,w
  4556  0EEA  0474               	iorwf	I2C_Master_Read@a+1,w
  4557  0EEB  1D03               	btfss	3,2
  4558  0EEC  2EEE               	goto	u2551
  4559  0EED  2EEF               	goto	u2550
  4560  0EEE                     u2551:
  4561  0EEE  2EF3               	goto	l201
  4562  0EEF                     u2550:
  4563  0EEF                     l2573:
  4564                           
  4565                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 0;
  4566  0EEF  1683               	bsf	3,5	;RP0=1, select bank1
  4567  0EF0  1303               	bcf	3,6	;RP1=0, select bank1
  4568  0EF1  1291               	bcf	17,5	;volatile
  4569                           
  4570                           ;I2C.c: 86:     }else{
  4571  0EF2  2EF6               	goto	l202
  4572  0EF3                     l201:
  4573                           
  4574                           ;I2C.c: 87:         SSPCON2bits.ACKDT = 1;
  4575  0EF3  1683               	bsf	3,5	;RP0=1, select bank1
  4576  0EF4  1303               	bcf	3,6	;RP1=0, select bank1
  4577  0EF5  1691               	bsf	17,5	;volatile
  4578  0EF6                     l202:	
  4579                           ;I2C.c: 88:     }
  4580                           
  4581                           
  4582                           ;I2C.c: 89:     SSPCON2bits.ACKEN = 1;
  4583  0EF6  1611               	bsf	17,4	;volatile
  4584  0EF7                     l2575:
  4585                           
  4586                           ;I2C.c: 90:     return temp;
  4587  0EF7  1283               	bcf	3,5	;RP0=0, select bank0
  4588  0EF8  1303               	bcf	3,6	;RP1=0, select bank0
  4589  0EF9  0821               	movf	I2C_Master_Read@temp+1,w
  4590  0EFA  00F4               	movwf	?_I2C_Master_Read+1
  4591  0EFB  0820               	movf	I2C_Master_Read@temp,w
  4592  0EFC  00F3               	movwf	?_I2C_Master_Read
  4593  0EFD                     l203:
  4594  0EFD  0008               	return
  4595  0EFE                     __end_of_I2C_Master_Read:
  4596                           
  4597                           	psect	text19
  4598  0E64                     __ptext19:	
  4599 ;; *************** function _I2C_Master_Wait *****************
  4600 ;; Defined at:
  4601 ;;		line 34 in file "I2C.c"
  4602 ;; Parameters:    Size  Location     Type
  4603 ;;		None
  4604 ;; Auto vars:     Size  Location     Type
  4605 ;;		None
  4606 ;; Return value:  Size  Location     Type
  4607 ;;                  1    wreg      void 
  4608 ;; Registers used:
  4609 ;;		wreg, status,2
  4610 ;; Tracked objects:
  4611 ;;		On entry : 0/0
  4612 ;;		On exit  : 0/0
  4613 ;;		Unchanged: 0/0
  4614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4615 ;;      Params:         0       0       0       0       0
  4616 ;;      Locals:         0       0       0       0       0
  4617 ;;      Temps:          0       0       0       0       0
  4618 ;;      Totals:         0       0       0       0       0
  4619 ;;Total ram usage:        0 bytes
  4620 ;; Hardware stack levels used:    1
  4621 ;; Hardware stack levels required when called:    1
  4622 ;; This function calls:
  4623 ;;		Nothing
  4624 ;; This function is called by:
  4625 ;;		_I2C_Master_Start
  4626 ;;		_I2C_Master_Stop
  4627 ;;		_I2C_Master_Write
  4628 ;;		_I2C_Master_Read
  4629 ;;		_I2C_Master_RepeatedStart
  4630 ;; This function uses a non-reentrant model
  4631 ;;
  4632                           
  4633                           
  4634                           ;psect for function _I2C_Master_Wait
  4635  0E64                     _I2C_Master_Wait:
  4636  0E64                     l2347:	
  4637                           ;incstack = 0
  4638                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  4639                           
  4640  0E64                     l183:	
  4641                           ;I2C.c: 36:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  4642                           
  4643  0E64  1683               	bsf	3,5	;RP0=1, select bank1
  4644  0E65  1303               	bcf	3,6	;RP1=0, select bank1
  4645  0E66  1914               	btfsc	20,2	;volatile
  4646  0E67  2E69               	goto	u2341
  4647  0E68  2E6A               	goto	u2340
  4648  0E69                     u2341:
  4649  0E69  2E64               	goto	l183
  4650  0E6A                     u2340:
  4651  0E6A                     l2349:
  4652  0E6A  0811               	movf	17,w	;volatile
  4653  0E6B  391F               	andlw	31
  4654  0E6C  1D03               	btfss	3,2
  4655  0E6D  2E6F               	goto	u2351
  4656  0E6E  2E70               	goto	u2350
  4657  0E6F                     u2351:
  4658  0E6F  2E64               	goto	l183
  4659  0E70                     u2350:
  4660  0E70                     l186:
  4661  0E70  0008               	return
  4662  0E71                     __end_of_I2C_Master_Wait:
  4663                           
  4664                           	psect	text20
  4665  0EFE                     __ptext20:	
  4666 ;; *************** function _I2C_Master_Init *****************
  4667 ;; Defined at:
  4668 ;;		line 18 in file "I2C.c"
  4669 ;; Parameters:    Size  Location     Type
  4670 ;;  c               4   13[BANK0 ] const unsigned long 
  4671 ;; Auto vars:     Size  Location     Type
  4672 ;;		None
  4673 ;; Return value:  Size  Location     Type
  4674 ;;                  1    wreg      void 
  4675 ;; Registers used:
  4676 ;;		wreg, status,2, status,0, pclath, cstack
  4677 ;; Tracked objects:
  4678 ;;		On entry : 0/0
  4679 ;;		On exit  : 0/0
  4680 ;;		Unchanged: 0/0
  4681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4682 ;;      Params:         0       4       0       0       0
  4683 ;;      Locals:         0       0       0       0       0
  4684 ;;      Temps:          4       0       0       0       0
  4685 ;;      Totals:         4       4       0       0       0
  4686 ;;Total ram usage:        8 bytes
  4687 ;; Hardware stack levels used:    1
  4688 ;; Hardware stack levels required when called:    2
  4689 ;; This function calls:
  4690 ;;		___lldiv
  4691 ;; This function is called by:
  4692 ;;		_main
  4693 ;; This function uses a non-reentrant model
  4694 ;;
  4695                           
  4696                           
  4697                           ;psect for function _I2C_Master_Init
  4698  0EFE                     _I2C_Master_Init:
  4699  0EFE                     l2455:	
  4700                           ;incstack = 0
  4701                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  4702                           
  4703                           
  4704                           ;I2C.c: 18: void I2C_Master_Init(const unsigned long c);I2C.c: 19: {;I2C.c: 20:     SSPC
      +                          ON = 0b00101000;
  4705  0EFE  3028               	movlw	40
  4706  0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  4707  0F00  1303               	bcf	3,6	;RP1=0, select bank0
  4708  0F01  0094               	movwf	20	;volatile
  4709  0F02                     l2457:
  4710                           
  4711                           ;I2C.c: 21:     SSPCON2 = 0;
  4712  0F02  1683               	bsf	3,5	;RP0=1, select bank1
  4713  0F03  1303               	bcf	3,6	;RP1=0, select bank1
  4714  0F04  0191               	clrf	17	;volatile
  4715  0F05                     l2459:
  4716                           
  4717                           ;I2C.c: 22:     SSPADD = (4000000/(4*c))-1;
  4718  0F05  1283               	bcf	3,5	;RP0=0, select bank0
  4719  0F06  1303               	bcf	3,6	;RP1=0, select bank0
  4720  0F07  082D               	movf	I2C_Master_Init@c,w
  4721  0F08  00F4               	movwf	??_I2C_Master_Init
  4722  0F09  082E               	movf	I2C_Master_Init@c+1,w
  4723  0F0A  00F5               	movwf	??_I2C_Master_Init+1
  4724  0F0B  082F               	movf	I2C_Master_Init@c+2,w
  4725  0F0C  00F6               	movwf	??_I2C_Master_Init+2
  4726  0F0D  0830               	movf	I2C_Master_Init@c+3,w
  4727  0F0E  00F7               	movwf	??_I2C_Master_Init+3
  4728  0F0F  3002               	movlw	2
  4729  0F10                     u2495:
  4730  0F10  1003               	clrc
  4731  0F11  0DF4               	rlf	??_I2C_Master_Init,f
  4732  0F12  0DF5               	rlf	??_I2C_Master_Init+1,f
  4733  0F13  0DF6               	rlf	??_I2C_Master_Init+2,f
  4734  0F14  0DF7               	rlf	??_I2C_Master_Init+3,f
  4735  0F15                     u2490:
  4736  0F15  3EFF               	addlw	-1
  4737  0F16  1D03               	skipz
  4738  0F17  2F10               	goto	u2495
  4739  0F18  0877               	movf	??_I2C_Master_Init+3,w
  4740  0F19  00A3               	movwf	___lldiv@divisor+3
  4741  0F1A  0876               	movf	??_I2C_Master_Init+2,w
  4742  0F1B  00A2               	movwf	___lldiv@divisor+2
  4743  0F1C  0875               	movf	??_I2C_Master_Init+1,w
  4744  0F1D  00A1               	movwf	___lldiv@divisor+1
  4745  0F1E  0874               	movf	??_I2C_Master_Init,w
  4746  0F1F  00A0               	movwf	___lldiv@divisor
  4747  0F20  3000               	movlw	0
  4748  0F21  00A7               	movwf	___lldiv@dividend+3
  4749  0F22  303D               	movlw	61
  4750  0F23  00A6               	movwf	___lldiv@dividend+2
  4751  0F24  3009               	movlw	9
  4752  0F25  00A5               	movwf	___lldiv@dividend+1
  4753  0F26  3000               	movlw	0
  4754  0F27  00A4               	movwf	___lldiv@dividend
  4755  0F28  120A  118A  2728  120A  158A  	fcall	___lldiv
  4756  0F2D  1283               	bcf	3,5	;RP0=0, select bank0
  4757  0F2E  1303               	bcf	3,6	;RP1=0, select bank0
  4758  0F2F  0820               	movf	?___lldiv,w
  4759  0F30  3EFF               	addlw	255
  4760  0F31  1683               	bsf	3,5	;RP0=1, select bank1
  4761  0F32  1303               	bcf	3,6	;RP1=0, select bank1
  4762  0F33  0093               	movwf	19	;volatile
  4763  0F34                     l2461:
  4764                           
  4765                           ;I2C.c: 23:     SSPSTAT = 0;
  4766  0F34  0194               	clrf	20	;volatile
  4767  0F35                     l2463:
  4768                           
  4769                           ;I2C.c: 24:     TRISCbits.TRISC3 = 1;
  4770  0F35  1587               	bsf	7,3	;volatile
  4771  0F36                     l2465:
  4772                           
  4773                           ;I2C.c: 25:     TRISCbits.TRISC4 = 1;
  4774  0F36  1607               	bsf	7,4	;volatile
  4775  0F37                     l180:
  4776  0F37  0008               	return
  4777  0F38                     __end_of_I2C_Master_Init:
  4778                           
  4779                           	psect	text21
  4780  0728                     __ptext21:	
  4781 ;; *************** function ___lldiv *****************
  4782 ;; Defined at:
  4783 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  4784 ;; Parameters:    Size  Location     Type
  4785 ;;  divisor         4    0[BANK0 ] unsigned long 
  4786 ;;  dividend        4    4[BANK0 ] unsigned long 
  4787 ;; Auto vars:     Size  Location     Type
  4788 ;;  quotient        4    8[BANK0 ] unsigned long 
  4789 ;;  counter         1   12[BANK0 ] unsigned char 
  4790 ;; Return value:  Size  Location     Type
  4791 ;;                  4    0[BANK0 ] unsigned long 
  4792 ;; Registers used:
  4793 ;;		wreg, status,2, status,0
  4794 ;; Tracked objects:
  4795 ;;		On entry : 0/0
  4796 ;;		On exit  : 0/0
  4797 ;;		Unchanged: 0/0
  4798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4799 ;;      Params:         0       8       0       0       0
  4800 ;;      Locals:         0       5       0       0       0
  4801 ;;      Temps:          1       0       0       0       0
  4802 ;;      Totals:         1      13       0       0       0
  4803 ;;Total ram usage:       14 bytes
  4804 ;; Hardware stack levels used:    1
  4805 ;; Hardware stack levels required when called:    1
  4806 ;; This function calls:
  4807 ;;		Nothing
  4808 ;; This function is called by:
  4809 ;;		_I2C_Master_Init
  4810 ;;		_UARTInit
  4811 ;; This function uses a non-reentrant model
  4812 ;;
  4813                           
  4814                           
  4815                           ;psect for function ___lldiv
  4816  0728                     ___lldiv:
  4817  0728                     l2361:	
  4818                           ;incstack = 0
  4819                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  4820                           
  4821  0728  3000               	movlw	0
  4822  0729  1283               	bcf	3,5	;RP0=0, select bank0
  4823  072A  1303               	bcf	3,6	;RP1=0, select bank0
  4824  072B  00AB               	movwf	___lldiv@quotient+3
  4825  072C  3000               	movlw	0
  4826  072D  00AA               	movwf	___lldiv@quotient+2
  4827  072E  3000               	movlw	0
  4828  072F  00A9               	movwf	___lldiv@quotient+1
  4829  0730  3000               	movlw	0
  4830  0731  00A8               	movwf	___lldiv@quotient
  4831  0732  0823               	movf	___lldiv@divisor+3,w
  4832  0733  0422               	iorwf	___lldiv@divisor+2,w
  4833  0734  0421               	iorwf	___lldiv@divisor+1,w
  4834  0735  0420               	iorwf	___lldiv@divisor,w
  4835  0736  1903               	skipnz
  4836  0737  2F39               	goto	u2361
  4837  0738  2F3A               	goto	u2360
  4838  0739                     u2361:
  4839  0739  2F87               	goto	l2381
  4840  073A                     u2360:
  4841  073A                     l2363:
  4842  073A  01AC               	clrf	___lldiv@counter
  4843  073B  0AAC               	incf	___lldiv@counter,f
  4844  073C  2F4A               	goto	l2367
  4845  073D                     l2365:
  4846  073D  3001               	movlw	1
  4847  073E  00F3               	movwf	??___lldiv
  4848  073F                     u2375:
  4849  073F  1003               	clrc
  4850  0740  0DA0               	rlf	___lldiv@divisor,f
  4851  0741  0DA1               	rlf	___lldiv@divisor+1,f
  4852  0742  0DA2               	rlf	___lldiv@divisor+2,f
  4853  0743  0DA3               	rlf	___lldiv@divisor+3,f
  4854  0744  0BF3               	decfsz	??___lldiv,f
  4855  0745  2F3F               	goto	u2375
  4856  0746  3001               	movlw	1
  4857  0747  00F3               	movwf	??___lldiv
  4858  0748  0873               	movf	??___lldiv,w
  4859  0749  07AC               	addwf	___lldiv@counter,f
  4860  074A                     l2367:
  4861  074A  1FA3               	btfss	___lldiv@divisor+3,7
  4862  074B  2F4D               	goto	u2381
  4863  074C  2F4E               	goto	u2380
  4864  074D                     u2381:
  4865  074D  2F3D               	goto	l2365
  4866  074E                     u2380:
  4867  074E                     l2369:
  4868  074E  3001               	movlw	1
  4869  074F  00F3               	movwf	??___lldiv
  4870  0750                     u2395:
  4871  0750  1003               	clrc
  4872  0751  0DA8               	rlf	___lldiv@quotient,f
  4873  0752  0DA9               	rlf	___lldiv@quotient+1,f
  4874  0753  0DAA               	rlf	___lldiv@quotient+2,f
  4875  0754  0DAB               	rlf	___lldiv@quotient+3,f
  4876  0755  0BF3               	decfsz	??___lldiv,f
  4877  0756  2F50               	goto	u2395
  4878  0757                     l2371:
  4879  0757  0823               	movf	___lldiv@divisor+3,w
  4880  0758  0227               	subwf	___lldiv@dividend+3,w
  4881  0759  1D03               	skipz
  4882  075A  2F65               	goto	u2405
  4883  075B  0822               	movf	___lldiv@divisor+2,w
  4884  075C  0226               	subwf	___lldiv@dividend+2,w
  4885  075D  1D03               	skipz
  4886  075E  2F65               	goto	u2405
  4887  075F  0821               	movf	___lldiv@divisor+1,w
  4888  0760  0225               	subwf	___lldiv@dividend+1,w
  4889  0761  1D03               	skipz
  4890  0762  2F65               	goto	u2405
  4891  0763  0820               	movf	___lldiv@divisor,w
  4892  0764  0224               	subwf	___lldiv@dividend,w
  4893  0765                     u2405:
  4894  0765  1C03               	skipc
  4895  0766  2F68               	goto	u2401
  4896  0767  2F69               	goto	u2400
  4897  0768                     u2401:
  4898  0768  2F78               	goto	l2377
  4899  0769                     u2400:
  4900  0769                     l2373:
  4901  0769  0820               	movf	___lldiv@divisor,w
  4902  076A  02A4               	subwf	___lldiv@dividend,f
  4903  076B  0821               	movf	___lldiv@divisor+1,w
  4904  076C  1C03               	skipc
  4905  076D  0F21               	incfsz	___lldiv@divisor+1,w
  4906  076E  02A5               	subwf	___lldiv@dividend+1,f
  4907  076F  0822               	movf	___lldiv@divisor+2,w
  4908  0770  1C03               	skipc
  4909  0771  0F22               	incfsz	___lldiv@divisor+2,w
  4910  0772  02A6               	subwf	___lldiv@dividend+2,f
  4911  0773  0823               	movf	___lldiv@divisor+3,w
  4912  0774  1C03               	skipc
  4913  0775  0F23               	incfsz	___lldiv@divisor+3,w
  4914  0776  02A7               	subwf	___lldiv@dividend+3,f
  4915  0777                     l2375:
  4916  0777  1428               	bsf	___lldiv@quotient,0
  4917  0778                     l2377:
  4918  0778  3001               	movlw	1
  4919  0779                     u2415:
  4920  0779  1003               	clrc
  4921  077A  0CA3               	rrf	___lldiv@divisor+3,f
  4922  077B  0CA2               	rrf	___lldiv@divisor+2,f
  4923  077C  0CA1               	rrf	___lldiv@divisor+1,f
  4924  077D  0CA0               	rrf	___lldiv@divisor,f
  4925  077E  3EFF               	addlw	-1
  4926  077F  1D03               	skipz
  4927  0780  2F79               	goto	u2415
  4928  0781                     l2379:
  4929  0781  3001               	movlw	1
  4930  0782  02AC               	subwf	___lldiv@counter,f
  4931  0783  1D03               	btfss	3,2
  4932  0784  2F86               	goto	u2421
  4933  0785  2F87               	goto	u2420
  4934  0786                     u2421:
  4935  0786  2F4E               	goto	l2369
  4936  0787                     u2420:
  4937  0787                     l2381:
  4938  0787  082B               	movf	___lldiv@quotient+3,w
  4939  0788  00A3               	movwf	?___lldiv+3
  4940  0789  082A               	movf	___lldiv@quotient+2,w
  4941  078A  00A2               	movwf	?___lldiv+2
  4942  078B  0829               	movf	___lldiv@quotient+1,w
  4943  078C  00A1               	movwf	?___lldiv+1
  4944  078D  0828               	movf	___lldiv@quotient,w
  4945  078E  00A0               	movwf	?___lldiv
  4946  078F                     l435:
  4947  078F  0008               	return
  4948  0790                     __end_of___lldiv:
  4949                           
  4950                           	psect	text22
  4951  0E71                     __ptext22:	
  4952 ;; *************** function _ISR *****************
  4953 ;; Defined at:
  4954 ;;		line 54 in file "MasterMain.c"
  4955 ;; Parameters:    Size  Location     Type
  4956 ;;		None
  4957 ;; Auto vars:     Size  Location     Type
  4958 ;;		None
  4959 ;; Return value:  Size  Location     Type
  4960 ;;                  1    wreg      void 
  4961 ;; Registers used:
  4962 ;;		wreg, status,2, status,0
  4963 ;; Tracked objects:
  4964 ;;		On entry : 0/0
  4965 ;;		On exit  : 0/0
  4966 ;;		Unchanged: 0/0
  4967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4968 ;;      Params:         0       0       0       0       0
  4969 ;;      Locals:         0       0       0       0       0
  4970 ;;      Temps:          3       0       0       0       0
  4971 ;;      Totals:         3       0       0       0       0
  4972 ;;Total ram usage:        3 bytes
  4973 ;; Hardware stack levels used:    1
  4974 ;; This function calls:
  4975 ;;		Nothing
  4976 ;; This function is called by:
  4977 ;;		Interrupt level 1
  4978 ;; This function uses a non-reentrant model
  4979 ;;
  4980                           
  4981                           
  4982                           ;psect for function _ISR
  4983  0E71                     _ISR:
  4984  0E71                     i1l1941:
  4985                           
  4986                           ;MasterMain.c: 55:     if(PIR1bits.TMR2IF){
  4987  0E71  1283               	bcf	3,5	;RP0=0, select bank0
  4988  0E72  1303               	bcf	3,6	;RP1=0, select bank0
  4989  0E73  1C8C               	btfss	12,1	;volatile
  4990  0E74  2E76               	goto	u166_21
  4991  0E75  2E77               	goto	u166_20
  4992  0E76                     u166_21:
  4993  0E76  2E7C               	goto	i1l94
  4994  0E77                     u166_20:
  4995  0E77                     i1l1943:
  4996                           
  4997                           ;MasterMain.c: 57:         contador++;
  4998  0E77  3001               	movlw	1
  4999  0E78  00F0               	movwf	??_ISR
  5000  0E79  0870               	movf	??_ISR,w
  5001  0E7A  07B7               	addwf	_contador,f
  5002  0E7B                     i1l1945:
  5003                           
  5004                           ;MasterMain.c: 58:         PIR1bits.TMR2IF = 0;
  5005  0E7B  108C               	bcf	12,1	;volatile
  5006  0E7C                     i1l94:
  5007  0E7C  0872               	movf	??_ISR+2,w
  5008  0E7D  008A               	movwf	10
  5009  0E7E  0E71               	swapf	??_ISR+1,w
  5010  0E7F  0083               	movwf	3
  5011  0E80  0EFE               	swapf	btemp,f
  5012  0E81  0E7E               	swapf	btemp,w
  5013  0E82  0009               	retfie
  5014  0E83                     __end_of_ISR:
  5015  007E                     btemp	set	126	;btemp
  5016  007E                     wtemp0	set	126
  5017                           
  5018                           	psect	intentry
  5019  0004                     __pintentry:	
  5020                           ;incstack = 0
  5021                           ; Regs used in _ISR: [wreg+status,2+status,0]
  5022                           
  5023  0004                     interrupt_function:
  5024  007E                     saved_w	set	btemp
  5025  0004  00FE               	movwf	btemp
  5026  0005  0E03               	swapf	3,w
  5027  0006  00F1               	movwf	??_ISR+1
  5028  0007  080A               	movf	10,w
  5029  0008  00F2               	movwf	??_ISR+2
  5030  0009  120A  158A  2E71   	ljmp	_ISR
  5031                           
  5032                           	psect	config
  5033                           
  5034                           ;Config register CONFIG1 @ 0x2007
  5035                           ;	Oscillator Selection bits
  5036                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  5037                           ;	Watchdog Timer Enable bit
  5038                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  5039                           ;	Power-up Timer Enable bit
  5040                           ;	PWRTE = OFF, PWRT disabled
  5041                           ;	RE3/MCLR pin function select bit
  5042                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  5043                           ;	Code Protection bit
  5044                           ;	CP = OFF, Program memory code protection is disabled
  5045                           ;	Data Code Protection bit
  5046                           ;	CPD = OFF, Data memory code protection is disabled
  5047                           ;	Brown Out Reset Selection bits
  5048                           ;	BOREN = OFF, BOR disabled
  5049                           ;	Internal External Switchover bit
  5050                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  5051                           ;	Fail-Safe Clock Monitor Enabled bit
  5052                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  5053                           ;	Low Voltage Programming Enable bit
  5054                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  5055                           ;	In-Circuit Debugger Mode bit
  5056                           ;	DEBUG = 0x1, unprogrammed default
  5057  2007                     	org	8199
  5058  2007  20D4               	dw	8404
  5059                           
  5060                           ;Config register CONFIG2 @ 0x2008
  5061                           ;	Brown-out Reset Selection bit
  5062                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  5063                           ;	Flash Program Memory Self Write Enable bits
  5064                           ;	WRT = OFF, Write protection off
  5065  2008                     	org	8200
  5066  2008  3FFF               	dw	16383

Data Sizes:
    Strings     169
    Constant    0
    Data        4
    BSS         20
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     22      43
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(1) Largest target is 10
		 -> numero(BANK0[10]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 10
		 -> numero(BANK0[10]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 10
		 -> numero(BANK0[10]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 10
		 -> numero(BANK0[10]), 

    UARTSendString@str	PTR const unsigned char  size(2) Largest target is 10
		 -> numero(BANK0[10]), STR_5(CODE[3]), STR_3(CODE[3]), 

    LcdWriteString@value	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_15(CODE[21]), STR_14(CODE[3]), STR_13(CODE[17]), STR_12(CODE[24]), 
		 -> STR_11(CODE[3]), STR_10(CODE[17]), STR_9(CODE[16]), STR_8(CODE[16]), 
		 -> STR_7(CODE[17]), STR_6(CODE[5]), numero(BANK0[10]), STR_4(CODE[6]), 
		 -> STR_2(CODE[7]), STR_1(CODE[17]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 10
		 -> numero(BANK0[10]), 


Critical Paths under _main in COMMON

    _main->_I2C_Master_Init
    _main->_UARTInit
    _utoa->___lwdiv
    _utoa->___lwmod
    _UARTSendString->_UARTSendChar
    _UARTInit->___lldiv
    _LcdWriteString->_LcdWriteChar
    _LcdWriteChar->_LcdPort
    _LcdSetCursor->_LcdCmd
    _LcdInit->_LcdCmd
    _LcdCmd->_LcdPort
    _I2C_Master_Init->___lldiv

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _UARTInit->___lldiv
    _I2C_Master_Init->___lldiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   10411
                                             19 BANK0      3     3      0
                    _I2C_Master_Init
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            _LcdInit
                       _LcdSetCursor
                       _LcdWriteChar
                     _LcdWriteString
                           _UARTInit
                       _UARTSendChar
                     _UARTSendString
                               _itoa
                               _step
 ---------------------------------------------------------------------------------
 (1) _step                                                 8     7      1     257
                                              3 COMMON     3     2      1
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _itoa                                                 7     3      4    2766
                                             12 BANK0      7     3      4
                               _utoa
 ---------------------------------------------------------------------------------
 (2) _utoa                                                 9     5      4    1669
                                              3 BANK0      9     5      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     412
                                              3 COMMON     5     1      4
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     601
                                              3 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _UARTSendString                                       8     5      3     937
                                              4 COMMON     3     0      3
                                              0 BANK0      5     5      0
                       _UARTSendChar
 ---------------------------------------------------------------------------------
 (2) _UARTSendChar                                         1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UARTInit                                             9     4      5    1054
                                              4 COMMON     4     4      0
                                             13 BANK0      5     0      5
                            ___lldiv
 ---------------------------------------------------------------------------------
 (1) _LcdWriteString                                       7     5      2    1939
                                              0 BANK0      7     5      2
                       _LcdWriteChar
 ---------------------------------------------------------------------------------
 (2) _LcdWriteChar                                         2     2      0     279
                                              5 COMMON     2     2      0
                            _LcdPort
 ---------------------------------------------------------------------------------
 (1) _LcdSetCursor                                         4     3      1    1092
                                              0 BANK0      4     3      1
                             _LcdCmd
 ---------------------------------------------------------------------------------
 (1) _LcdInit                                              2     2      0     527
                                              0 BANK0      2     2      0
                             _LcdCmd
                            _LcdPort
 ---------------------------------------------------------------------------------
 (2) _LcdCmd                                               3     3      0     279
                                              5 COMMON     3     3      0
                            _LcdPort
 ---------------------------------------------------------------------------------
 (3) _LcdPort                                              2     2      0     248
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     301
                                              3 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     335
                                              3 COMMON     4     2      2
                                              0 BANK0      2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     902
                                              4 COMMON     4     4      0
                                             13 BANK0      4     0      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     781
                                              3 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _LcdInit
     _LcdCmd
       _LcdPort
     _LcdPort
   _LcdSetCursor
     _LcdCmd
       _LcdPort
   _LcdWriteChar
     _LcdPort
   _LcdWriteString
     _LcdWriteChar
       _LcdPort
   _UARTInit
     ___lldiv
   _UARTSendChar
   _UARTSendString
     _UARTSendChar
   _itoa
     _utoa
       ___lwdiv
       ___lwmod
   _step

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     16      2B       5       53.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      36      12        0.0%
ABS                  0      0      36       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Sep 03 10:30:40 2021

        UARTInit@baud_rate 002D                          pc 0002                         _ok 0038  
                       fsr 0004                        l100 008C                        l101 0096  
                      l102 00A0                        l120 02A7                        l201 0EF3  
                      l202 0EF6                        l203 0EFD                        l117 03CC  
                      l126 02DD                        l231 0642                        l151 0496  
                      l127 02E7                        l234 04FB                        l250 07FB  
                      l180 0F37                        l244 0EA7                        l183 0E64  
                      l247 04E1                        l256 0FB9                        l281 06B5  
                      l186 0E70                        l435 078F                        l195 0E4D  
                      l284 0E59                        l189 0E44                        l198 0E57  
                      l287 0E63                        l295 07E6                        l671 0FFF  
                      l681 0F73                        l861 0727                        l853 0ECD  
                      l859 0710                        _GIE 005F                        _RD0 0040  
                      _RD1 0041                        _RD2 0042                        _RE0 0048  
                      _RD3 0043                        _RD4 0044                        _RE2 004A  
                      _RD5 0045                        _RD6 0046                        _RD7 0047  
                      _PR2 0092                        _ISR 0E71                        _hum 003D  
                      fsr0 0004                        indf 0000                       ?_ISR 0070  
                     l2301 0FD6                       l2303 0FE7                       l2311 0FFB  
                     l2305 0FED                       l2321 0F4A                       l2401 0706  
                     l2307 0FEE                       l2331 0F69                       l2323 0F4E  
                     l2315 0F38                       l2411 0723                       l2403 070C  
                     l2421 04B9                       l2341 07F1                       l2309 0FF5  
                     l2325 0F52                       l2317 0F3E                       l2333 0F6F  
                     l2405 0714                       l2501 0437                       l2351 04E3  
                     l2423 04BF                       l2415 0497                       l2343 07F4  
                     l2431 0679                       l2327 0F5C                       l2319 0F43  
                     l2407 071B                       l2511 0457                       l2503 0440  
                     l2361 0728                       l2353 04E6                       l2417 049D  
                     l2345 07F8                       l2337 07E8                       l2441 06AA  
                     l2433 06A6                       l2425 0643                       l2329 0F62  
                     l2409 071D                       l2601 0EBA                       l2513 0466  
                     l2505 0446                       l2371 0757                       l2363 073A  
                     l2347 0E64                       l2355 04EC                       l2419 04A8  
                     l2531 0E86                       l2339 07EB                       l2451 06B1  
                     l2443 06AD                       l2435 06A7                       l2427 064A  
                     l2291 0FBE                       l2603 0EBF                       l2515 0467  
                     l2507 0450                       l2523 0486                       l2611 003F  
                     l2373 0769                       l2365 073D                       l2381 0787  
                     l2461 0F34                       l2349 0E6A                       l2285 05BA  
                     l2357 04EF                       l2533 0E87                       l2453 06B4  
                     l2445 06AE                       l2437 06A8                       l2429 0677  
                     l2293 0FC4                       l2517 0470                       l2509 0456  
                     l2701 018D                       l2621 005A                       l2613 0040  
                     l2375 0777                       l2367 074A                       l2463 0F35  
                     l2455 0EFE                       l2287 05C4                       l2359 04F8  
                     l2535 0E8F                       l2551 0F95                       l2447 06AF  
                     l2439 06A9                       l2295 0FC7                       l2391 06D4  
                     l2519 0478                       l2471 03D7                       l2711 01C3  
                     l2703 019B                       l2631 0074                       l2623 0069  
                     l2615 0041                       l2607 0035                       l2377 0778  
                     l2369 074E                       l2465 0F36                       l2457 0F02  
                     l2561 0E53                       l2553 0F9D                       l2449 06B0  
                     l1681 0E5F                       l2297 0FCE                       l2289 0FBA  
                     l2393 06DA                       l2385 06B9                       l2481 03F7  
                     l2473 03DD                       l2801 0306                       l2721 01EF  
                     l2713 01C9                       l2705 01A0                       l2641 0083  
                     l2633 0075                       l2625 006D                       l2617 0044  
                     l2609 003D                       l2379 0781                       l2459 0F05  
                     l2571 0EE9                       l2563 0ECE                       l2555 0E3C  
                     l2539 0E97                       l2547 0F74                       l2299 0FD2  
                     l2395 06DE                       l2387 06BD                       l2491 0417  
                     l2483 03FD                       l2475 03DE                       l2467 03D3  
                     l2811 0330                       l2803 0308                       l2731 022B  
                     l2723 0208                       l2715 01D4                       l2707 01AA  
                     l2651 009A                       l2643 0087                       l2635 0076  
                     l2627 0071                       l2619 0049                       l2573 0EEF  
                     l2565 0ED3                       l2557 0E41                       l2581 0E4A  
                     l2549 0F79                       l2397 06E0                       l2389 06D0  
                     l2485 03FE                       l2477 03E7                       l2493 041F  
                     l2469 03D4                       l2821 036D                       l2813 0343  
                     l2805 0310                       l2741 0254                       l2733 0236  
                     l2725 0217                       l2717 01E3                       l2709 01BD  
                     l2661 00B0                       l2653 009E                       l2645 008B  
                     l2637 0079                       l2629 0073                       l2575 0EF7  
                     l2567 0EDB                       l2559 0E4E                       l1679 0E59  
                     l2591 07C8                       l2583 0790                       l2399 06F3  
                     l2495 042D                       l2487 040D                       l2479 03ED  
                     l2831 037F                       l2823 0374                       l2815 034E  
                     l2807 031B                       l2743 0259                       l2735 023C  
                     l2727 021D                       l2719 01E9                       l2671 00CF  
                     l2751 027E                       l2663 00B1                       l2655 00A4  
                     l2647 0090                       l2639 007F                       l2569 0EE4  
                     l2585 0797                       l2593 0EAB                       l2497 0430  
                     l2489 040E                       l2841 03B2                       l2833 0381  
                     l2825 0375                       l2809 0325                       l2817 035A  
                     l2761 02A8                       l2753 0286                       l2745 025E  
                     l2729 0225                       l2737 0243                       l2681 00FB  
                     l2673 00DA                       l2665 00BB                       l2657 00A8  
                     l2649 0094                       l2579 0E45                       l2587 07B3  
                     l2595 0EAB                       l2499 0436                       l2843 03B8  
                     l2835 0389                       l2827 0379                       l2819 0362  
                     l2771 02C9                       l2763 02AA                       l2755 0291  
                     l2747 0272                       l2739 024C                       l2691 0142  
                     l2683 0105                       l2675 00DF                       l2667 00C2  
                     l2659 00AA                       l2589 07BB                       l2597 0EAF  
                     l2837 0394                       l2829 037E                       l2781 02E1  
                     l2773 02CB                       l2845 03C3                       l2765 02AF  
                     l2757 029B                       l2749 0277                       l2693 0154  
                     l2685 0110                       l2677 00E8                       l2669 00C7  
                     l2599 0EB6                       l2847 03CA                       l2839 03A7  
                     l2791 02F6                       l2783 02E5                       l2775 02D3  
                     l2767 02B9                       l2759 02A2                       l2695 0175  
                     l2687 0129                       l2679 00F6                       l2793 02FB  
                     l2785 02EB                       l2777 02D7                       l2769 02C2  
                     l2697 017F                       l2795 02FC                       l2787 02EF  
                     l2779 02DB                       l2699 0184                       l2955 014C  
                     l2957 048E                       l2797 0300                       l2789 02F1  
                     l2959 0E9F                       l2799 0305                       STR_1 0570  
                     STR_2 05A1                       STR_3 05B3                       STR_4 05A8  
                     STR_5 05B6                       STR_6 05AE                       STR_7 055F  
                     STR_8 0591                       STR_9 0581                       u2010 05D3  
                     u2011 05CF                       u2100 0609                       u2101 0605  
                     u2005 05C7                       u2040 05E5                       u2024 05D6  
                     u2041 05E1                       u2130 061B                       u2114 060C  
                     u2210 0FC4                       u2131 0617                       u2035 05D9  
                     u2211 0FC3                       u2204 0642                       u2300 0F52  
                     u2125 060F                       u2301 0F51                       u2070 05F7  
                     u2054 05E8                       u2230 0FD6                       u2310 0F5C  
                     u2071 05F3                       u2231 0FD5                       u2311 0F5B  
                     u3007 044B                       u2400 0769                       u2160 062D  
                     u2144 061E                       u2401 0768                       u2161 0629  
                     u2065 05EB                       u2225 0FC8                       u3017 045B  
                     u2250 0FE7                       u2330 0F6F                       u2155 0621  
                     u2251 0FE6                       u2331 0F6E                       u2315 0F58  
                     u3027 046B                       u2420 0787                       u2340 0E6A  
                     u2084 05FA                       u1380 0E5F                       u2500 042C  
                     u2421 0786                       u2405 0765                       u2341 0E69  
                     u3037 07F6                       u1381 0E5E                       u2245 0FD7  
                     u2325 0F63                       u2501 042B                       u2350 0E70  
                     u2190 063F                       u2174 0630                       u2270 0FFB  
                     u2430 06DA                       u2510 0485                       u2415 0779  
                     u2351 0E6F                       u2191 063B                       u2095 05FD  
                     u3047 04A3                       u2271 0FFA                       u2255 0FE3  
                     u2431 06D9                       u2511 0484                       u2360 073A  
                     u2520 0F83                       u2280 0F3E                       u2440 070C  
                     u2600 0EAF                       u2361 0739                       u2185 0633  
                     u3057 04B4                       u2265 0FEF                       u2281 0F3D  
                     u2441 070B                       u2601 0EAE                       u2505 0428  
                     u2530 0FA7                       u2450 0723                       u2610 0087  
                     u3067 04C5                       u2451 0722                       u2515 0481  
                     u2611 0086                       u2380 074E                       u2540 0FB9  
                     u2460 064A                       u2700 00C7                       u2620 008B  
                     u2381 074D                       u3077 04F3                       u2541 0FB8  
                     u2461 0649                       u2701 00C6                       u2621 008A  
                     u2550 0EEF                       u2470 0658                       u2710 0225  
                     u2630 0090                       u2375 073F                       u2551 0EEE  
                     u2295 0F44                       u2711 0224                       u2631 008F  
                     u2480 0687                       u2560 07A1                       u2800 02D7  
                     u2720 0254                       u2640 0094                       u2801 02D6  
                     u2721 0253                       u2641 0093                       u2490 0F15  
                     u2570 07C8                       u2810 02DB                       u2730 0259  
                     u2650 009A                       u2395 0750                       u2475 0653  
                     u2571 07C7                       u2811 02DA                       u2731 0258  
                     u2651 0099                       u2580 07D4                       u2900 037E  
                     u2820 02E1                       u2740 0272                       u2660 009E  
                     u2485 0682                       u2901 037D                       u2821 02E0  
                     u2741 0271                       u2661 009D                       u2590 07E6  
                     u2910 03CA                       u2830 02E5                       u2750 0277  
                     u2670 00A4                       u2495 0F10                       u2591 07E5  
                     u2575 07C4                       u2911 03C9                       u2831 02E4  
                     u2751 0276                       u2671 00A3                       u2840 02EB  
                     u2760 02A2                       u2680 00A8                       u2841 02EA  
                     u2761 02A1                       u2745 026E                       u2681 00A7  
                     u2850 02EF                       u2770 02A7                       u2690 00B0  
                     u2851 02EE                       u2771 02A6                       u2691 00AF  
                     _PEIE 005E                       u1980 05C1                       u2860 02F6  
                     u2780 02AF                       u1981 05BD                       u2861 02F5  
                     u2781 02AE                       u2870 02FB                       u2790 02C9  
                     u2871 02FA                       u2791 02C8                       u2927 0101  
                     u2880 0305                       u2881 0304                       u2937 017B  
                     u1994 05C4                       u2890 0374                       u2891 0373  
                     u2947 01A6                       u2957 03E2                       u2967 03F2  
                     u2977 0402                       u2987 0412                       u2997 043B  
                     i1l94 0E7C                       _hall 007A                       _main 0035  
                     _menu 003C                       _itoa 0EA8                       _temp 003E  
                     _step 03D0                       btemp 007E                       _utoa 06B6  
                     start 000C            LcdSetCursor@row 0023            __end_of_LcdInit 04E2  
          __end_of_LcdPort 0643                      ??_ISR 0070       __end_of_LcdSetCursor 0EA8  
         ?_I2C_Master_Init 002D           ?_I2C_Master_Read 0073           ?_I2C_Master_Wait 0070  
         ?_I2C_Master_Stop 0070                      ?_main 0070                      ?_itoa 002C  
                    STR_10 053D                      STR_11 0525                      STR_12 0510  
                    STR_13 054E                      STR_14 0525                      STR_15 0528  
                    ?_step 0073                      _ANSEL 0188            __end_of___lldiv 0790  
                    ?_utoa 0023            __end_of___lwdiv 1000            __end_of___lwmod 0F74  
                    _RCREG 001A                      _SPBRG 0099                      _PORTA 0005  
                    _PORTB 0006                      _TRISA 0085                      _TRISB 0086  
                    _TRISD 0088                      _SSPIE 0463                      _TRISE 0089  
                    _SSPIF 0063                      _TXREG 0019           __end_of_UARTInit 06B6  
                    pclath 000A                      step@i 0020                      utoa@c 002A  
                    utoa@v 0028                      status 0003                      wtemp0 007E  
     __end_of_LcdWriteChar 07FC            __initialization 000F               __end_of_main 03D0  
             __end_of_itoa 0ECE               __end_of_step 0497               __end_of_utoa 0728  
                   ??_main 0033                     ??_itoa 0030                     ??_step 0074  
                   ??_utoa 0027          ?_I2C_Master_Start 0070          ?_I2C_Master_Write 0073  
       ??_I2C_Master_Start 0073         ??_I2C_Master_Write 0075                     _ANSELH 0189  
                   i1l1941 0E71                     i1l1943 0E77                     i1l1945 0E7B  
                   u166_20 0E77                     u166_21 0E76                  ??_LcdInit 0020  
                ??_LcdPort 0073                     _SSPADD 0093                     _TRISC3 043B  
                   _TRISC4 043C                     _SSPCON 0014                     _SSPBUF 0013  
                   _LcdCmd 04E2                  ??___lldiv 0073                  ??___lwdiv 0077  
                ??___lwmod 0077    __size_of_UARTSendString 0057                     _opcion 003B  
                   _numero 003F               __pdataCOMMON 0078                     saved_w 007E  
  __end_of__initialization 0031    __size_of_LcdWriteString 0046      __size_of_LcdSetCursor 0025  
        LcdWriteChar@value 0076             __pcstackCOMMON 0070               __pidataBANK0 07FE  
                ?_UARTInit 002D             _OPTION_REGbits 0081   UARTSendString@max_length 0076  
    __size_of_LcdWriteChar 0015               _LcdSetCursor 0E83                 __pbssBANK0 0036  
                  ?_LcdCmd 0070                 __pmaintext 0035                 ??_UARTInit 0074  
               __pintentry 0004               _LcdWriteChar 07E7                    _SSPCON2 0091  
                  _SSPSTAT 0094                 __stringtab 0500              ?_UARTSendChar 0070  
                  _LcdInit 0497                    _LcdPort 05B9            __size_of_LcdCmd 001A  
                  ___lldiv 0728                    ___lwdiv 0FBA                    ___lwmod 0F38  
           _UARTSendString 0790                    __ptext1 03D0                    __ptext2 0EA8  
                  __ptext3 06B6                    __ptext4 0F38                    __ptext5 0FBA  
                  __ptext6 0790                    __ptext7 0E58                    __ptext8 0643  
                  __ptext9 0F74               __size_of_ISR 0012                  _T2CONbits 0012  
 __size_of_I2C_Master_Init 003A   __size_of_I2C_Master_Read 0030   __size_of_I2C_Master_Wait 000D  
 __size_of_I2C_Master_Stop 0009                    clrloop0 0E35       end_of_initialization 0031  
           ??_UARTSendChar 0073             _LcdWriteString 0F74                    itoa@buf 0032  
                  itoa@val 002C  __size_of_I2C_Master_Start 0009  __size_of_I2C_Master_Write 000A  
          ___lldiv@divisor 0020            ___lldiv@counter 002C                  _RCSTAbits 0018  
   __end_of_UARTSendString 07E7           I2C_Master_Init@c 002D                    step@dir 0073  
         I2C_Master_Read@a 0073                    utoa@buf 002B                    utoa@val 0023  
               _umbralTemp 004A                  _TRISCbits 0087         LcdSetCursor@column 0020  
   __end_of_LcdWriteString 0FBA                  _TXSTAbits 0098             __end_of_LcdCmd 04FC  
          ?_UARTSendString 0074              __pidataCOMMON 07FC          __size_of_UARTInit 0073  
      start_initialization 000F                __end_of_ISR 0E83            ?_LcdWriteString 0020  
        ??_I2C_Master_Init 0074          ??_I2C_Master_Read 0075          ??_I2C_Master_Wait 0073  
        ??_I2C_Master_Stop 0073                   ??_LcdCmd 0075                __pdataBANK0 0049  
     __end_of_UARTSendChar 0E64                __pbssCOMMON 007A                  ___latbits 0002  
            __pcstackBANK0 0020                _decrementar 0039                   ?_LcdInit 0070  
                 ?_LcdPort 0070           _I2C_Master_Start 0E3C           _I2C_Master_Write 0E4E  
         ___lwdiv@dividend 0075              UARTSendChar@c 0073                   ?___lldiv 0020  
                 ?___lwdiv 0073                  _direccion 0036                   ?___lwmod 0073  
                __pstrings 0500           ___lwdiv@quotient 0021          interrupt_function 0004  
                clear_ram0 0E34                   _PIE1bits 008C            UARTSendString@i 0023  
                 _PIR1bits 000C                   _UARTInit 0643                  _umbralHum 0049  
              __stringbase 050F        I2C_Master_Read@temp 0020           __size_of_LcdInit 004B  
         ??_UARTSendString 0020           __size_of_LcdPort 008A               LcdPort@value 0074  
    __size_of_UARTSendChar 000C                _incrementar 003A               UARTInit@BRGH 0031  
              LcdCmd@value 0077           __size_of___lldiv 0068           __size_of___lwdiv 0046  
         __size_of___lwmod 003C         __end_of__stringtab 0510           ??_LcdWriteString 0022  
          _I2C_Master_Init 0EFE            _I2C_Master_Read 0ECE            _I2C_Master_Wait 0E64  
          _I2C_Master_Stop 0E45            ___lwdiv@divisor 0073            ___lwdiv@counter 0020  
                 __ptext10 07E7                   __ptext11 0E83                   __ptext20 0EFE  
                 __ptext12 0497                   __ptext21 0728                   __ptext13 04E2  
                 __ptext22 0E71                   __ptext14 05B9                   __ptext15 0E4E  
                 __ptext16 0E45                   __ptext17 0E3C                   __ptext18 0ECE  
                 __ptext19 0E64              ?_LcdSetCursor 0020                   _contador 0037  
             _UARTSendChar 0E58              __size_of_main 039B              __size_of_itoa 0026  
            __size_of_step 00C7              __size_of_utoa 0072            LcdWriteString@i 0025  
                step@i_309 0022                  step@steps 0024              ?_LcdWriteChar 0070  
 __end_of_I2C_Master_Start 0E45   __end_of_I2C_Master_Write 0E58                 _INTCONbits 000B  
                 itoa@base 002E              _portbAnterior 0079             ??_LcdSetCursor 0021  
        UARTSendString@str 0074                   intlevel1 0000           ___lwmod@dividend 0075  
         ___lldiv@dividend 0024                  stringcode 050A    __end_of_I2C_Master_Init 0F38  
  __end_of_I2C_Master_Read 0EFE    __end_of_I2C_Master_Wait 0E71    __end_of_I2C_Master_Stop 0E4E  
                 utoa@base 0025             ??_LcdWriteChar 0075           ___lldiv@quotient 0028  
        I2C_Master_Write@d 0073            ___lwmod@divisor 0073            ___lwmod@counter 0020  
                 stringdir 050A                   stringtab 0500                _SSPCON2bits 0091  
              _portbActual 0078        LcdWriteString@value 0020  
